// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/Game/GamePoi/Responses/GetImagesForPoiResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var status: POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.Status = .unset

  public var photoGalleryPoiImages: [POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.GameClientPhotoGalleryPoiImage] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Status: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case poiNotFound // = 2
    case invalidRequest // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .poiNotFound
      case 3: self = .invalidRequest
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .poiNotFound: return 2
      case .invalidRequest: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public struct GameClientPhotoGalleryPoiImage {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var imageID: String = String()

    public var poiID: String = String()

    public var submitterCodename: String = String()

    public var imageURL: String = String()

    public var creationTimestampMs: Int64 = 0

    public var hasPlayerVoted_p: Bool = false

    public var numVotesFromGame: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.Status] = [
    .unset,
    .success,
    .poiNotFound,
    .invalidRequest,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses.Game.GamePoi.Responses"

extension POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetImagesForPoiResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .standard(proto: "photo_gallery_poi_images"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.status) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.photoGalleryPoiImages) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    if !self.photoGalleryPoiImages.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.photoGalleryPoiImages, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse, rhs: POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.photoGalleryPoiImages != rhs.photoGalleryPoiImages {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.Status: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "POI_NOT_FOUND"),
    3: .same(proto: "INVALID_REQUEST"),
  ]
}

extension POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.GameClientPhotoGalleryPoiImage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.protoMessageName + ".GameClientPhotoGalleryPoiImage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "image_id"),
    2: .standard(proto: "poi_id"),
    3: .standard(proto: "submitter_codename"),
    4: .standard(proto: "image_url"),
    5: .standard(proto: "creation_timestamp_ms"),
    6: .standard(proto: "has_player_voted"),
    7: .standard(proto: "num_votes_from_game"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.imageID) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.poiID) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.submitterCodename) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.imageURL) }()
      case 5: try { try decoder.decodeSingularInt64Field(value: &self.creationTimestampMs) }()
      case 6: try { try decoder.decodeSingularBoolField(value: &self.hasPlayerVoted_p) }()
      case 7: try { try decoder.decodeSingularInt32Field(value: &self.numVotesFromGame) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.imageID.isEmpty {
      try visitor.visitSingularStringField(value: self.imageID, fieldNumber: 1)
    }
    if !self.poiID.isEmpty {
      try visitor.visitSingularStringField(value: self.poiID, fieldNumber: 2)
    }
    if !self.submitterCodename.isEmpty {
      try visitor.visitSingularStringField(value: self.submitterCodename, fieldNumber: 3)
    }
    if !self.imageURL.isEmpty {
      try visitor.visitSingularStringField(value: self.imageURL, fieldNumber: 4)
    }
    if self.creationTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.creationTimestampMs, fieldNumber: 5)
    }
    if self.hasPlayerVoted_p != false {
      try visitor.visitSingularBoolField(value: self.hasPlayerVoted_p, fieldNumber: 6)
    }
    if self.numVotesFromGame != 0 {
      try visitor.visitSingularInt32Field(value: self.numVotesFromGame, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.GameClientPhotoGalleryPoiImage, rhs: POGOProtos_Networking_Responses_Game_GamePoi_Responses_GetImagesForPoiResponse.GameClientPhotoGalleryPoiImage) -> Bool {
    if lhs.imageID != rhs.imageID {return false}
    if lhs.poiID != rhs.poiID {return false}
    if lhs.submitterCodename != rhs.submitterCodename {return false}
    if lhs.imageURL != rhs.imageURL {return false}
    if lhs.creationTimestampMs != rhs.creationTimestampMs {return false}
    if lhs.hasPlayerVoted_p != rhs.hasPlayerVoted_p {return false}
    if lhs.numVotesFromGame != rhs.numVotesFromGame {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
