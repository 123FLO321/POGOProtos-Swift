// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/GymBattleAttackResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_GymBattleAttackResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var result: POGOProtos_Networking_Responses_GymBattleAttackResponse.Result = .unset

  public var battleUpdate: POGOProtos_Data_Battle_BattleUpdate {
    get {return _battleUpdate ?? POGOProtos_Data_Battle_BattleUpdate()}
    set {_battleUpdate = newValue}
  }
  /// Returns true if `battleUpdate` has been explicitly set.
  public var hasBattleUpdate: Bool {return self._battleUpdate != nil}
  /// Clears the value of `battleUpdate`. Subsequent reads from it will return its default value.
  public mutating func clearBattleUpdate() {self._battleUpdate = nil}

  public var gymBadge: POGOProtos_Data_Badge_AwardedGymBadge {
    get {return _gymBadge ?? POGOProtos_Data_Badge_AwardedGymBadge()}
    set {_gymBadge = newValue}
  }
  /// Returns true if `gymBadge` has been explicitly set.
  public var hasGymBadge: Bool {return self._gymBadge != nil}
  /// Clears the value of `gymBadge`. Subsequent reads from it will return its default value.
  public mutating func clearGymBadge() {self._gymBadge = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Result: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case errorInvalidAttackActions // = 2
    case errorNotInRange // = 3
    case errorWrongBattleType // = 4
    case errorRaidActive // = 5
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .errorInvalidAttackActions
      case 3: self = .errorNotInRange
      case 4: self = .errorWrongBattleType
      case 5: self = .errorRaidActive
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .errorInvalidAttackActions: return 2
      case .errorNotInRange: return 3
      case .errorWrongBattleType: return 4
      case .errorRaidActive: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  fileprivate var _battleUpdate: POGOProtos_Data_Battle_BattleUpdate? = nil
  fileprivate var _gymBadge: POGOProtos_Data_Badge_AwardedGymBadge? = nil
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_GymBattleAttackResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Responses_GymBattleAttackResponse.Result] = [
    .unset,
    .success,
    .errorInvalidAttackActions,
    .errorNotInRange,
    .errorWrongBattleType,
    .errorRaidActive,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_GymBattleAttackResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GymBattleAttackResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .standard(proto: "battle_update"),
    3: .standard(proto: "gym_badge"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.result) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._battleUpdate) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._gymBadge) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    if let v = self._battleUpdate {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._gymBadge {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_GymBattleAttackResponse, rhs: POGOProtos_Networking_Responses_GymBattleAttackResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs._battleUpdate != rhs._battleUpdate {return false}
    if lhs._gymBadge != rhs._gymBadge {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_GymBattleAttackResponse.Result: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "ERROR_INVALID_ATTACK_ACTIONS"),
    3: .same(proto: "ERROR_NOT_IN_RANGE"),
    4: .same(proto: "ERROR_WRONG_BATTLE_TYPE"),
    5: .same(proto: "ERROR_RAID_ACTIVE"),
  ]
}
