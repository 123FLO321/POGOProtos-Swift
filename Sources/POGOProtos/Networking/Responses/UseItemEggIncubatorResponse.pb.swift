// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/UseItemEggIncubatorResponse.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Responses_UseItemEggIncubatorResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var result: POGOProtos_Networking_Responses_UseItemEggIncubatorResponse.Result {
    get {return _storage._result}
    set {_uniqueStorage()._result = newValue}
  }

  var eggIncubator: POGOProtos_Inventory_EggIncubator {
    get {return _storage._eggIncubator ?? POGOProtos_Inventory_EggIncubator()}
    set {_uniqueStorage()._eggIncubator = newValue}
  }
  /// Returns true if `eggIncubator` has been explicitly set.
  var hasEggIncubator: Bool {return _storage._eggIncubator != nil}
  /// Clears the value of `eggIncubator`. Subsequent reads from it will return its default value.
  mutating func clearEggIncubator() {_uniqueStorage()._eggIncubator = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case errorIncubatorNotFound // = 2
    case errorPokemonEggNotFound // = 3
    case errorPokemonIDNotEgg // = 4
    case errorIncubatorAlreadyInUse // = 5
    case errorPokemonAlreadyIncubating // = 6
    case errorIncubatorNoUsesRemaining // = 7
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .errorIncubatorNotFound
      case 3: self = .errorPokemonEggNotFound
      case 4: self = .errorPokemonIDNotEgg
      case 5: self = .errorIncubatorAlreadyInUse
      case 6: self = .errorPokemonAlreadyIncubating
      case 7: self = .errorIncubatorNoUsesRemaining
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .errorIncubatorNotFound: return 2
      case .errorPokemonEggNotFound: return 3
      case .errorPokemonIDNotEgg: return 4
      case .errorIncubatorAlreadyInUse: return 5
      case .errorPokemonAlreadyIncubating: return 6
      case .errorIncubatorNoUsesRemaining: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_UseItemEggIncubatorResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_UseItemEggIncubatorResponse.Result] = [
    .unset,
    .success,
    .errorIncubatorNotFound,
    .errorPokemonEggNotFound,
    .errorPokemonIDNotEgg,
    .errorIncubatorAlreadyInUse,
    .errorPokemonAlreadyIncubating,
    .errorIncubatorNoUsesRemaining,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_UseItemEggIncubatorResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UseItemEggIncubatorResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .standard(proto: "egg_incubator"),
  ]

  fileprivate class _StorageClass {
    var _result: POGOProtos_Networking_Responses_UseItemEggIncubatorResponse.Result = .unset
    var _eggIncubator: POGOProtos_Inventory_EggIncubator? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _result = source._result
      _eggIncubator = source._eggIncubator
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._result)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._eggIncubator)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._result != .unset {
        try visitor.visitSingularEnumField(value: _storage._result, fieldNumber: 1)
      }
      if let v = _storage._eggIncubator {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_UseItemEggIncubatorResponse, rhs: POGOProtos_Networking_Responses_UseItemEggIncubatorResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._result != rhs_storage._result {return false}
        if _storage._eggIncubator != rhs_storage._eggIncubator {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_UseItemEggIncubatorResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "ERROR_INCUBATOR_NOT_FOUND"),
    3: .same(proto: "ERROR_POKEMON_EGG_NOT_FOUND"),
    4: .same(proto: "ERROR_POKEMON_ID_NOT_EGG"),
    5: .same(proto: "ERROR_INCUBATOR_ALREADY_IN_USE"),
    6: .same(proto: "ERROR_POKEMON_ALREADY_INCUBATING"),
    7: .same(proto: "ERROR_INCUBATOR_NO_USES_REMAINING"),
  ]
}
