// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/Social/GetFriendsListResponse.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Responses_Social_GetFriendsListResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var result: POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Result = .unset

  var friend: [POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Friend] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case errorUnknown // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .errorUnknown
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .errorUnknown: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  struct Friend {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var playerID: String = String()

    var codename: String = String()

    var team: String = String()

    var score: Int32 = 0

    var dataWithMe: Data = SwiftProtobuf.Internal.emptyData

    var version: Int64 = 0

    var createdMs: Int64 = 0

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Result] = [
    .unset,
    .success,
    .errorUnknown,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses.Social"

extension POGOProtos_Networking_Responses_Social_GetFriendsListResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GetFriendsListResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .same(proto: "friend"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.result)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.friend)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    if !self.friend.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.friend, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_Social_GetFriendsListResponse, rhs: POGOProtos_Networking_Responses_Social_GetFriendsListResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.friend != rhs.friend {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "ERROR_UNKNOWN"),
  ]
}

extension POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Friend: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Networking_Responses_Social_GetFriendsListResponse.protoMessageName + ".Friend"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "player_id"),
    2: .same(proto: "codename"),
    3: .same(proto: "team"),
    4: .same(proto: "score"),
    5: .standard(proto: "data_with_me"),
    6: .same(proto: "version"),
    7: .standard(proto: "created_ms"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.playerID)
      case 2: try decoder.decodeSingularStringField(value: &self.codename)
      case 3: try decoder.decodeSingularStringField(value: &self.team)
      case 4: try decoder.decodeSingularInt32Field(value: &self.score)
      case 5: try decoder.decodeSingularBytesField(value: &self.dataWithMe)
      case 6: try decoder.decodeSingularInt64Field(value: &self.version)
      case 7: try decoder.decodeSingularInt64Field(value: &self.createdMs)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.playerID.isEmpty {
      try visitor.visitSingularStringField(value: self.playerID, fieldNumber: 1)
    }
    if !self.codename.isEmpty {
      try visitor.visitSingularStringField(value: self.codename, fieldNumber: 2)
    }
    if !self.team.isEmpty {
      try visitor.visitSingularStringField(value: self.team, fieldNumber: 3)
    }
    if self.score != 0 {
      try visitor.visitSingularInt32Field(value: self.score, fieldNumber: 4)
    }
    if !self.dataWithMe.isEmpty {
      try visitor.visitSingularBytesField(value: self.dataWithMe, fieldNumber: 5)
    }
    if self.version != 0 {
      try visitor.visitSingularInt64Field(value: self.version, fieldNumber: 6)
    }
    if self.createdMs != 0 {
      try visitor.visitSingularInt64Field(value: self.createdMs, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Friend, rhs: POGOProtos_Networking_Responses_Social_GetFriendsListResponse.Friend) -> Bool {
    if lhs.playerID != rhs.playerID {return false}
    if lhs.codename != rhs.codename {return false}
    if lhs.team != rhs.team {return false}
    if lhs.score != rhs.score {return false}
    if lhs.dataWithMe != rhs.dataWithMe {return false}
    if lhs.version != rhs.version {return false}
    if lhs.createdMs != rhs.createdMs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
