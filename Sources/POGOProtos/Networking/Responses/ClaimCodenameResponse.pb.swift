// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/ClaimCodenameResponse.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Responses_ClaimCodenameResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var codename: String {
    get {return _storage._codename}
    set {_uniqueStorage()._codename = newValue}
  }

  var userMessage: String {
    get {return _storage._userMessage}
    set {_uniqueStorage()._userMessage = newValue}
  }

  var isAssignable: Bool {
    get {return _storage._isAssignable}
    set {_uniqueStorage()._isAssignable = newValue}
  }

  var status: POGOProtos_Networking_Responses_ClaimCodenameResponse.Status {
    get {return _storage._status}
    set {_uniqueStorage()._status = newValue}
  }

  var updatedPlayer: POGOProtos_Data_PlayerData {
    get {return _storage._updatedPlayer ?? POGOProtos_Data_PlayerData()}
    set {_uniqueStorage()._updatedPlayer = newValue}
  }
  /// Returns true if `updatedPlayer` has been explicitly set.
  var hasUpdatedPlayer: Bool {return _storage._updatedPlayer != nil}
  /// Clears the value of `updatedPlayer`. Subsequent reads from it will return its default value.
  mutating func clearUpdatedPlayer() {_uniqueStorage()._updatedPlayer = nil}

  var suggestedCodenames: [String] {
    get {return _storage._suggestedCodenames}
    set {_uniqueStorage()._suggestedCodenames = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case codenameNotAvailable // = 2
    case codenameNotValid // = 3
    case currentOwner // = 4
    case codenameChangeNotAllowed // = 5
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .codenameNotAvailable
      case 3: self = .codenameNotValid
      case 4: self = .currentOwner
      case 5: self = .codenameChangeNotAllowed
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .codenameNotAvailable: return 2
      case .codenameNotValid: return 3
      case .currentOwner: return 4
      case .codenameChangeNotAllowed: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_ClaimCodenameResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_ClaimCodenameResponse.Status] = [
    .unset,
    .success,
    .codenameNotAvailable,
    .codenameNotValid,
    .currentOwner,
    .codenameChangeNotAllowed,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_ClaimCodenameResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ClaimCodenameResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "codename"),
    2: .standard(proto: "user_message"),
    3: .standard(proto: "is_assignable"),
    4: .same(proto: "status"),
    5: .standard(proto: "updated_player"),
    6: .standard(proto: "suggested_codenames"),
  ]

  fileprivate class _StorageClass {
    var _codename: String = String()
    var _userMessage: String = String()
    var _isAssignable: Bool = false
    var _status: POGOProtos_Networking_Responses_ClaimCodenameResponse.Status = .unset
    var _updatedPlayer: POGOProtos_Data_PlayerData? = nil
    var _suggestedCodenames: [String] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _codename = source._codename
      _userMessage = source._userMessage
      _isAssignable = source._isAssignable
      _status = source._status
      _updatedPlayer = source._updatedPlayer
      _suggestedCodenames = source._suggestedCodenames
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._codename)
        case 2: try decoder.decodeSingularStringField(value: &_storage._userMessage)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._isAssignable)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._status)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._updatedPlayer)
        case 6: try decoder.decodeRepeatedStringField(value: &_storage._suggestedCodenames)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._codename.isEmpty {
        try visitor.visitSingularStringField(value: _storage._codename, fieldNumber: 1)
      }
      if !_storage._userMessage.isEmpty {
        try visitor.visitSingularStringField(value: _storage._userMessage, fieldNumber: 2)
      }
      if _storage._isAssignable != false {
        try visitor.visitSingularBoolField(value: _storage._isAssignable, fieldNumber: 3)
      }
      if _storage._status != .unset {
        try visitor.visitSingularEnumField(value: _storage._status, fieldNumber: 4)
      }
      if let v = _storage._updatedPlayer {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if !_storage._suggestedCodenames.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._suggestedCodenames, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_ClaimCodenameResponse, rhs: POGOProtos_Networking_Responses_ClaimCodenameResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._codename != rhs_storage._codename {return false}
        if _storage._userMessage != rhs_storage._userMessage {return false}
        if _storage._isAssignable != rhs_storage._isAssignable {return false}
        if _storage._status != rhs_storage._status {return false}
        if _storage._updatedPlayer != rhs_storage._updatedPlayer {return false}
        if _storage._suggestedCodenames != rhs_storage._suggestedCodenames {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_ClaimCodenameResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "CODENAME_NOT_AVAILABLE"),
    3: .same(proto: "CODENAME_NOT_VALID"),
    4: .same(proto: "CURRENT_OWNER"),
    5: .same(proto: "CODENAME_CHANGE_NOT_ALLOWED"),
  ]
}
