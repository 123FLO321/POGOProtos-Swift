// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_DownloadItemTemplatesResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var result: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.Result = .unset

  public var itemTemplate: [POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate] = []

  public var timestampMs: UInt64 = 0

  public var pageOffset: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Result: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case page // = 2
    case retry // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .page
      case 3: self = .retry
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .page: return 2
      case .retry: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public struct GameMasterClientTemplate {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var templateID: String {
      get {return _storage._templateID}
      set {_uniqueStorage()._templateID = newValue}
    }

    public var pokemon: POGOProtos_Settings_Master_PokemonSettings {
      get {return _storage._pokemon ?? POGOProtos_Settings_Master_PokemonSettings()}
      set {_uniqueStorage()._pokemon = newValue}
    }
    /// Returns true if `pokemon` has been explicitly set.
    public var hasPokemon: Bool {return _storage._pokemon != nil}
    /// Clears the value of `pokemon`. Subsequent reads from it will return its default value.
    public mutating func clearPokemon() {_uniqueStorage()._pokemon = nil}

    public var item: POGOProtos_Settings_Master_ItemSettings {
      get {return _storage._item ?? POGOProtos_Settings_Master_ItemSettings()}
      set {_uniqueStorage()._item = newValue}
    }
    /// Returns true if `item` has been explicitly set.
    public var hasItem: Bool {return _storage._item != nil}
    /// Clears the value of `item`. Subsequent reads from it will return its default value.
    public mutating func clearItem() {_uniqueStorage()._item = nil}

    public var move: POGOProtos_Settings_Master_MoveSettings {
      get {return _storage._move ?? POGOProtos_Settings_Master_MoveSettings()}
      set {_uniqueStorage()._move = newValue}
    }
    /// Returns true if `move` has been explicitly set.
    public var hasMove: Bool {return _storage._move != nil}
    /// Clears the value of `move`. Subsequent reads from it will return its default value.
    public mutating func clearMove() {_uniqueStorage()._move = nil}

    public var moveSequence: POGOProtos_Settings_Master_MoveSequenceSettings {
      get {return _storage._moveSequence ?? POGOProtos_Settings_Master_MoveSequenceSettings()}
      set {_uniqueStorage()._moveSequence = newValue}
    }
    /// Returns true if `moveSequence` has been explicitly set.
    public var hasMoveSequence: Bool {return _storage._moveSequence != nil}
    /// Clears the value of `moveSequence`. Subsequent reads from it will return its default value.
    public mutating func clearMoveSequence() {_uniqueStorage()._moveSequence = nil}

    public var typeEffective: POGOProtos_Settings_Master_TypeEffectiveSettings {
      get {return _storage._typeEffective ?? POGOProtos_Settings_Master_TypeEffectiveSettings()}
      set {_uniqueStorage()._typeEffective = newValue}
    }
    /// Returns true if `typeEffective` has been explicitly set.
    public var hasTypeEffective: Bool {return _storage._typeEffective != nil}
    /// Clears the value of `typeEffective`. Subsequent reads from it will return its default value.
    public mutating func clearTypeEffective() {_uniqueStorage()._typeEffective = nil}

    public var badge: POGOProtos_Settings_Master_BadgeSettings {
      get {return _storage._badge ?? POGOProtos_Settings_Master_BadgeSettings()}
      set {_uniqueStorage()._badge = newValue}
    }
    /// Returns true if `badge` has been explicitly set.
    public var hasBadge: Bool {return _storage._badge != nil}
    /// Clears the value of `badge`. Subsequent reads from it will return its default value.
    public mutating func clearBadge() {_uniqueStorage()._badge = nil}

    public var camera: POGOProtos_Settings_Master_CameraSettings {
      get {return _storage._camera ?? POGOProtos_Settings_Master_CameraSettings()}
      set {_uniqueStorage()._camera = newValue}
    }
    /// Returns true if `camera` has been explicitly set.
    public var hasCamera: Bool {return _storage._camera != nil}
    /// Clears the value of `camera`. Subsequent reads from it will return its default value.
    public mutating func clearCamera() {_uniqueStorage()._camera = nil}

    public var playerLevel: POGOProtos_Settings_Master_PlayerLevelSettings {
      get {return _storage._playerLevel ?? POGOProtos_Settings_Master_PlayerLevelSettings()}
      set {_uniqueStorage()._playerLevel = newValue}
    }
    /// Returns true if `playerLevel` has been explicitly set.
    public var hasPlayerLevel: Bool {return _storage._playerLevel != nil}
    /// Clears the value of `playerLevel`. Subsequent reads from it will return its default value.
    public mutating func clearPlayerLevel() {_uniqueStorage()._playerLevel = nil}

    public var gymLevel: POGOProtos_Settings_Master_GymLevelSettings {
      get {return _storage._gymLevel ?? POGOProtos_Settings_Master_GymLevelSettings()}
      set {_uniqueStorage()._gymLevel = newValue}
    }
    /// Returns true if `gymLevel` has been explicitly set.
    public var hasGymLevel: Bool {return _storage._gymLevel != nil}
    /// Clears the value of `gymLevel`. Subsequent reads from it will return its default value.
    public mutating func clearGymLevel() {_uniqueStorage()._gymLevel = nil}

    public var battleSettings: POGOProtos_Settings_Master_GymBattleSettings {
      get {return _storage._battleSettings ?? POGOProtos_Settings_Master_GymBattleSettings()}
      set {_uniqueStorage()._battleSettings = newValue}
    }
    /// Returns true if `battleSettings` has been explicitly set.
    public var hasBattleSettings: Bool {return _storage._battleSettings != nil}
    /// Clears the value of `battleSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBattleSettings() {_uniqueStorage()._battleSettings = nil}

    public var encounterSettings: POGOProtos_Settings_Master_EncounterSettings {
      get {return _storage._encounterSettings ?? POGOProtos_Settings_Master_EncounterSettings()}
      set {_uniqueStorage()._encounterSettings = newValue}
    }
    /// Returns true if `encounterSettings` has been explicitly set.
    public var hasEncounterSettings: Bool {return _storage._encounterSettings != nil}
    /// Clears the value of `encounterSettings`. Subsequent reads from it will return its default value.
    public mutating func clearEncounterSettings() {_uniqueStorage()._encounterSettings = nil}

    public var iapItemDisplay: POGOProtos_Settings_Master_IapItemDisplay {
      get {return _storage._iapItemDisplay ?? POGOProtos_Settings_Master_IapItemDisplay()}
      set {_uniqueStorage()._iapItemDisplay = newValue}
    }
    /// Returns true if `iapItemDisplay` has been explicitly set.
    public var hasIapItemDisplay: Bool {return _storage._iapItemDisplay != nil}
    /// Clears the value of `iapItemDisplay`. Subsequent reads from it will return its default value.
    public mutating func clearIapItemDisplay() {_uniqueStorage()._iapItemDisplay = nil}

    public var iapSettings: POGOProtos_Settings_Master_IapSettings {
      get {return _storage._iapSettings ?? POGOProtos_Settings_Master_IapSettings()}
      set {_uniqueStorage()._iapSettings = newValue}
    }
    /// Returns true if `iapSettings` has been explicitly set.
    public var hasIapSettings: Bool {return _storage._iapSettings != nil}
    /// Clears the value of `iapSettings`. Subsequent reads from it will return its default value.
    public mutating func clearIapSettings() {_uniqueStorage()._iapSettings = nil}

    public var pokemonUpgrades: POGOProtos_Settings_Master_PokemonUpgradeSettings {
      get {return _storage._pokemonUpgrades ?? POGOProtos_Settings_Master_PokemonUpgradeSettings()}
      set {_uniqueStorage()._pokemonUpgrades = newValue}
    }
    /// Returns true if `pokemonUpgrades` has been explicitly set.
    public var hasPokemonUpgrades: Bool {return _storage._pokemonUpgrades != nil}
    /// Clears the value of `pokemonUpgrades`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonUpgrades() {_uniqueStorage()._pokemonUpgrades = nil}

    public var equippedBadges: POGOProtos_Settings_Master_EquippedBadgeSettings {
      get {return _storage._equippedBadges ?? POGOProtos_Settings_Master_EquippedBadgeSettings()}
      set {_uniqueStorage()._equippedBadges = newValue}
    }
    /// Returns true if `equippedBadges` has been explicitly set.
    public var hasEquippedBadges: Bool {return _storage._equippedBadges != nil}
    /// Clears the value of `equippedBadges`. Subsequent reads from it will return its default value.
    public mutating func clearEquippedBadges() {_uniqueStorage()._equippedBadges = nil}

    public var questSettings: POGOProtos_Settings_Master_QuestSettings {
      get {return _storage._questSettings ?? POGOProtos_Settings_Master_QuestSettings()}
      set {_uniqueStorage()._questSettings = newValue}
    }
    /// Returns true if `questSettings` has been explicitly set.
    public var hasQuestSettings: Bool {return _storage._questSettings != nil}
    /// Clears the value of `questSettings`. Subsequent reads from it will return its default value.
    public mutating func clearQuestSettings() {_uniqueStorage()._questSettings = nil}

    public var avatarCustomization: POGOProtos_Data_Avatar_AvatarCustomization {
      get {return _storage._avatarCustomization ?? POGOProtos_Data_Avatar_AvatarCustomization()}
      set {_uniqueStorage()._avatarCustomization = newValue}
    }
    /// Returns true if `avatarCustomization` has been explicitly set.
    public var hasAvatarCustomization: Bool {return _storage._avatarCustomization != nil}
    /// Clears the value of `avatarCustomization`. Subsequent reads from it will return its default value.
    public mutating func clearAvatarCustomization() {_uniqueStorage()._avatarCustomization = nil}

    public var formSettings: POGOProtos_Settings_Master_FormSettings {
      get {return _storage._formSettings ?? POGOProtos_Settings_Master_FormSettings()}
      set {_uniqueStorage()._formSettings = newValue}
    }
    /// Returns true if `formSettings` has been explicitly set.
    public var hasFormSettings: Bool {return _storage._formSettings != nil}
    /// Clears the value of `formSettings`. Subsequent reads from it will return its default value.
    public mutating func clearFormSettings() {_uniqueStorage()._formSettings = nil}

    public var genderSettings: POGOProtos_Settings_Master_GenderSettings {
      get {return _storage._genderSettings ?? POGOProtos_Settings_Master_GenderSettings()}
      set {_uniqueStorage()._genderSettings = newValue}
    }
    /// Returns true if `genderSettings` has been explicitly set.
    public var hasGenderSettings: Bool {return _storage._genderSettings != nil}
    /// Clears the value of `genderSettings`. Subsequent reads from it will return its default value.
    public mutating func clearGenderSettings() {_uniqueStorage()._genderSettings = nil}

    public var gymBadgeSettings: POGOProtos_Settings_Master_GymBadgeGmtSettings {
      get {return _storage._gymBadgeSettings ?? POGOProtos_Settings_Master_GymBadgeGmtSettings()}
      set {_uniqueStorage()._gymBadgeSettings = newValue}
    }
    /// Returns true if `gymBadgeSettings` has been explicitly set.
    public var hasGymBadgeSettings: Bool {return _storage._gymBadgeSettings != nil}
    /// Clears the value of `gymBadgeSettings`. Subsequent reads from it will return its default value.
    public mutating func clearGymBadgeSettings() {_uniqueStorage()._gymBadgeSettings = nil}

    public var weatherAffinities: POGOProtos_Settings_Master_WeatherAffinity {
      get {return _storage._weatherAffinities ?? POGOProtos_Settings_Master_WeatherAffinity()}
      set {_uniqueStorage()._weatherAffinities = newValue}
    }
    /// Returns true if `weatherAffinities` has been explicitly set.
    public var hasWeatherAffinities: Bool {return _storage._weatherAffinities != nil}
    /// Clears the value of `weatherAffinities`. Subsequent reads from it will return its default value.
    public mutating func clearWeatherAffinities() {_uniqueStorage()._weatherAffinities = nil}

    public var weatherBonusSettings: POGOProtos_Settings_Master_WeatherBonus {
      get {return _storage._weatherBonusSettings ?? POGOProtos_Settings_Master_WeatherBonus()}
      set {_uniqueStorage()._weatherBonusSettings = newValue}
    }
    /// Returns true if `weatherBonusSettings` has been explicitly set.
    public var hasWeatherBonusSettings: Bool {return _storage._weatherBonusSettings != nil}
    /// Clears the value of `weatherBonusSettings`. Subsequent reads from it will return its default value.
    public mutating func clearWeatherBonusSettings() {_uniqueStorage()._weatherBonusSettings = nil}

    public var pokemonScaleSettings: POGOProtos_Settings_Master_PokemonScaleSetting {
      get {return _storage._pokemonScaleSettings ?? POGOProtos_Settings_Master_PokemonScaleSetting()}
      set {_uniqueStorage()._pokemonScaleSettings = newValue}
    }
    /// Returns true if `pokemonScaleSettings` has been explicitly set.
    public var hasPokemonScaleSettings: Bool {return _storage._pokemonScaleSettings != nil}
    /// Clears the value of `pokemonScaleSettings`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonScaleSettings() {_uniqueStorage()._pokemonScaleSettings = nil}

    public var iapCategoryDisplay: POGOProtos_Settings_Master_IapItemCategoryDisplay {
      get {return _storage._iapCategoryDisplay ?? POGOProtos_Settings_Master_IapItemCategoryDisplay()}
      set {_uniqueStorage()._iapCategoryDisplay = newValue}
    }
    /// Returns true if `iapCategoryDisplay` has been explicitly set.
    public var hasIapCategoryDisplay: Bool {return _storage._iapCategoryDisplay != nil}
    /// Clears the value of `iapCategoryDisplay`. Subsequent reads from it will return its default value.
    public mutating func clearIapCategoryDisplay() {_uniqueStorage()._iapCategoryDisplay = nil}

    public var belugaPokemonWhitelist: POGOProtos_Settings_Master_BelugaPokemonWhitelist {
      get {return _storage._belugaPokemonWhitelist ?? POGOProtos_Settings_Master_BelugaPokemonWhitelist()}
      set {_uniqueStorage()._belugaPokemonWhitelist = newValue}
    }
    /// Returns true if `belugaPokemonWhitelist` has been explicitly set.
    public var hasBelugaPokemonWhitelist: Bool {return _storage._belugaPokemonWhitelist != nil}
    /// Clears the value of `belugaPokemonWhitelist`. Subsequent reads from it will return its default value.
    public mutating func clearBelugaPokemonWhitelist() {_uniqueStorage()._belugaPokemonWhitelist = nil}

    public var onboardingSettings: POGOProtos_Settings_Master_OnboardingSettings {
      get {return _storage._onboardingSettings ?? POGOProtos_Settings_Master_OnboardingSettings()}
      set {_uniqueStorage()._onboardingSettings = newValue}
    }
    /// Returns true if `onboardingSettings` has been explicitly set.
    public var hasOnboardingSettings: Bool {return _storage._onboardingSettings != nil}
    /// Clears the value of `onboardingSettings`. Subsequent reads from it will return its default value.
    public mutating func clearOnboardingSettings() {_uniqueStorage()._onboardingSettings = nil}

    public var friendshipMilestoneSettings: POGOProtos_Settings_Master_FriendshipLevelMilestoneSettings {
      get {return _storage._friendshipMilestoneSettings ?? POGOProtos_Settings_Master_FriendshipLevelMilestoneSettings()}
      set {_uniqueStorage()._friendshipMilestoneSettings = newValue}
    }
    /// Returns true if `friendshipMilestoneSettings` has been explicitly set.
    public var hasFriendshipMilestoneSettings: Bool {return _storage._friendshipMilestoneSettings != nil}
    /// Clears the value of `friendshipMilestoneSettings`. Subsequent reads from it will return its default value.
    public mutating func clearFriendshipMilestoneSettings() {_uniqueStorage()._friendshipMilestoneSettings = nil}

    public var luckyPokemonSettings: POGOProtos_Settings_Master_LuckyPokemonSettings {
      get {return _storage._luckyPokemonSettings ?? POGOProtos_Settings_Master_LuckyPokemonSettings()}
      set {_uniqueStorage()._luckyPokemonSettings = newValue}
    }
    /// Returns true if `luckyPokemonSettings` has been explicitly set.
    public var hasLuckyPokemonSettings: Bool {return _storage._luckyPokemonSettings != nil}
    /// Clears the value of `luckyPokemonSettings`. Subsequent reads from it will return its default value.
    public mutating func clearLuckyPokemonSettings() {_uniqueStorage()._luckyPokemonSettings = nil}

    public var combatSettings: POGOProtos_Settings_Master_CombatSettings {
      get {return _storage._combatSettings ?? POGOProtos_Settings_Master_CombatSettings()}
      set {_uniqueStorage()._combatSettings = newValue}
    }
    /// Returns true if `combatSettings` has been explicitly set.
    public var hasCombatSettings: Bool {return _storage._combatSettings != nil}
    /// Clears the value of `combatSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCombatSettings() {_uniqueStorage()._combatSettings = nil}

    public var combatLeagueSettings: POGOProtos_Settings_Master_CombatLeagueSettings {
      get {return _storage._combatLeagueSettings ?? POGOProtos_Settings_Master_CombatLeagueSettings()}
      set {_uniqueStorage()._combatLeagueSettings = newValue}
    }
    /// Returns true if `combatLeagueSettings` has been explicitly set.
    public var hasCombatLeagueSettings: Bool {return _storage._combatLeagueSettings != nil}
    /// Clears the value of `combatLeagueSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCombatLeagueSettings() {_uniqueStorage()._combatLeagueSettings = nil}

    public var combatLeague: POGOProtos_Settings_Master_CombatLeague {
      get {return _storage._combatLeague ?? POGOProtos_Settings_Master_CombatLeague()}
      set {_uniqueStorage()._combatLeague = newValue}
    }
    /// Returns true if `combatLeague` has been explicitly set.
    public var hasCombatLeague: Bool {return _storage._combatLeague != nil}
    /// Clears the value of `combatLeague`. Subsequent reads from it will return its default value.
    public mutating func clearCombatLeague() {_uniqueStorage()._combatLeague = nil}

    public var exRaidSettings: POGOProtos_Settings_Master_ExRaidSettings {
      get {return _storage._exRaidSettings ?? POGOProtos_Settings_Master_ExRaidSettings()}
      set {_uniqueStorage()._exRaidSettings = newValue}
    }
    /// Returns true if `exRaidSettings` has been explicitly set.
    public var hasExRaidSettings: Bool {return _storage._exRaidSettings != nil}
    /// Clears the value of `exRaidSettings`. Subsequent reads from it will return its default value.
    public mutating func clearExRaidSettings() {_uniqueStorage()._exRaidSettings = nil}

    public var combatMove: POGOProtos_Settings_Master_CombatMoveSettings {
      get {return _storage._combatMove ?? POGOProtos_Settings_Master_CombatMoveSettings()}
      set {_uniqueStorage()._combatMove = newValue}
    }
    /// Returns true if `combatMove` has been explicitly set.
    public var hasCombatMove: Bool {return _storage._combatMove != nil}
    /// Clears the value of `combatMove`. Subsequent reads from it will return its default value.
    public mutating func clearCombatMove() {_uniqueStorage()._combatMove = nil}

    public var backgroundModeSettings: POGOProtos_Settings_Master_BackgroundModeSettings {
      get {return _storage._backgroundModeSettings ?? POGOProtos_Settings_Master_BackgroundModeSettings()}
      set {_uniqueStorage()._backgroundModeSettings = newValue}
    }
    /// Returns true if `backgroundModeSettings` has been explicitly set.
    public var hasBackgroundModeSettings: Bool {return _storage._backgroundModeSettings != nil}
    /// Clears the value of `backgroundModeSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBackgroundModeSettings() {_uniqueStorage()._backgroundModeSettings = nil}

    public var combatStatStageSettings: POGOProtos_Settings_Master_CombatStatStageSettings {
      get {return _storage._combatStatStageSettings ?? POGOProtos_Settings_Master_CombatStatStageSettings()}
      set {_uniqueStorage()._combatStatStageSettings = newValue}
    }
    /// Returns true if `combatStatStageSettings` has been explicitly set.
    public var hasCombatStatStageSettings: Bool {return _storage._combatStatStageSettings != nil}
    /// Clears the value of `combatStatStageSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCombatStatStageSettings() {_uniqueStorage()._combatStatStageSettings = nil}

    public var combatNpcTrainer: POGOProtos_Settings_Master_CombatNpcTrainer {
      get {return _storage._combatNpcTrainer ?? POGOProtos_Settings_Master_CombatNpcTrainer()}
      set {_uniqueStorage()._combatNpcTrainer = newValue}
    }
    /// Returns true if `combatNpcTrainer` has been explicitly set.
    public var hasCombatNpcTrainer: Bool {return _storage._combatNpcTrainer != nil}
    /// Clears the value of `combatNpcTrainer`. Subsequent reads from it will return its default value.
    public mutating func clearCombatNpcTrainer() {_uniqueStorage()._combatNpcTrainer = nil}

    public var combatNpcPersonality: POGOProtos_Settings_Master_CombatNpcPersonality {
      get {return _storage._combatNpcPersonality ?? POGOProtos_Settings_Master_CombatNpcPersonality()}
      set {_uniqueStorage()._combatNpcPersonality = newValue}
    }
    /// Returns true if `combatNpcPersonality` has been explicitly set.
    public var hasCombatNpcPersonality: Bool {return _storage._combatNpcPersonality != nil}
    /// Clears the value of `combatNpcPersonality`. Subsequent reads from it will return its default value.
    public mutating func clearCombatNpcPersonality() {_uniqueStorage()._combatNpcPersonality = nil}

    public var onboardingV2Settings: POGOProtos_Settings_Master_OnboardingV2Settings {
      get {return _storage._onboardingV2Settings ?? POGOProtos_Settings_Master_OnboardingV2Settings()}
      set {_uniqueStorage()._onboardingV2Settings = newValue}
    }
    /// Returns true if `onboardingV2Settings` has been explicitly set.
    public var hasOnboardingV2Settings: Bool {return _storage._onboardingV2Settings != nil}
    /// Clears the value of `onboardingV2Settings`. Subsequent reads from it will return its default value.
    public mutating func clearOnboardingV2Settings() {_uniqueStorage()._onboardingV2Settings = nil}

    public var partyRecommendationSettings: POGOProtos_Settings_Master_PartyRecommendationSettings {
      get {return _storage._partyRecommendationSettings ?? POGOProtos_Settings_Master_PartyRecommendationSettings()}
      set {_uniqueStorage()._partyRecommendationSettings = newValue}
    }
    /// Returns true if `partyRecommendationSettings` has been explicitly set.
    public var hasPartyRecommendationSettings: Bool {return _storage._partyRecommendationSettings != nil}
    /// Clears the value of `partyRecommendationSettings`. Subsequent reads from it will return its default value.
    public mutating func clearPartyRecommendationSettings() {_uniqueStorage()._partyRecommendationSettings = nil}

    public var smeargleMovesSettings: POGOProtos_Settings_Master_SmeargleMovesSettings {
      get {return _storage._smeargleMovesSettings ?? POGOProtos_Settings_Master_SmeargleMovesSettings()}
      set {_uniqueStorage()._smeargleMovesSettings = newValue}
    }
    /// Returns true if `smeargleMovesSettings` has been explicitly set.
    public var hasSmeargleMovesSettings: Bool {return _storage._smeargleMovesSettings != nil}
    /// Clears the value of `smeargleMovesSettings`. Subsequent reads from it will return its default value.
    public mutating func clearSmeargleMovesSettings() {_uniqueStorage()._smeargleMovesSettings = nil}

    public var pokecoinPurchaseDisplayGmt: POGOProtos_Settings_Master_PokecoinPurchaseDisplayGmt {
      get {return _storage._pokecoinPurchaseDisplayGmt ?? POGOProtos_Settings_Master_PokecoinPurchaseDisplayGmt()}
      set {_uniqueStorage()._pokecoinPurchaseDisplayGmt = newValue}
    }
    /// Returns true if `pokecoinPurchaseDisplayGmt` has been explicitly set.
    public var hasPokecoinPurchaseDisplayGmt: Bool {return _storage._pokecoinPurchaseDisplayGmt != nil}
    /// Clears the value of `pokecoinPurchaseDisplayGmt`. Subsequent reads from it will return its default value.
    public mutating func clearPokecoinPurchaseDisplayGmt() {_uniqueStorage()._pokecoinPurchaseDisplayGmt = nil}

    public var adventureSyncV2Gmt: POGOProtos_Settings_Master_AdventureSyncV2Gmt {
      get {return _storage._adventureSyncV2Gmt ?? POGOProtos_Settings_Master_AdventureSyncV2Gmt()}
      set {_uniqueStorage()._adventureSyncV2Gmt = newValue}
    }
    /// Returns true if `adventureSyncV2Gmt` has been explicitly set.
    public var hasAdventureSyncV2Gmt: Bool {return _storage._adventureSyncV2Gmt != nil}
    /// Clears the value of `adventureSyncV2Gmt`. Subsequent reads from it will return its default value.
    public mutating func clearAdventureSyncV2Gmt() {_uniqueStorage()._adventureSyncV2Gmt = nil}

    public var loadingScreenSettings: POGOProtos_Settings_Master_LoadingScreen {
      get {return _storage._loadingScreenSettings ?? POGOProtos_Settings_Master_LoadingScreen()}
      set {_uniqueStorage()._loadingScreenSettings = newValue}
    }
    /// Returns true if `loadingScreenSettings` has been explicitly set.
    public var hasLoadingScreenSettings: Bool {return _storage._loadingScreenSettings != nil}
    /// Clears the value of `loadingScreenSettings`. Subsequent reads from it will return its default value.
    public mutating func clearLoadingScreenSettings() {_uniqueStorage()._loadingScreenSettings = nil}

    public var invasionNpcDisplaySettings: POGOProtos_Settings_Master_InvasionNpcDisplaySettings {
      get {return _storage._invasionNpcDisplaySettings ?? POGOProtos_Settings_Master_InvasionNpcDisplaySettings()}
      set {_uniqueStorage()._invasionNpcDisplaySettings = newValue}
    }
    /// Returns true if `invasionNpcDisplaySettings` has been explicitly set.
    public var hasInvasionNpcDisplaySettings: Bool {return _storage._invasionNpcDisplaySettings != nil}
    /// Clears the value of `invasionNpcDisplaySettings`. Subsequent reads from it will return its default value.
    public mutating func clearInvasionNpcDisplaySettings() {_uniqueStorage()._invasionNpcDisplaySettings = nil}

    public var combatCompetitiveSeasonSettings: POGOProtos_Settings_Master_CombatCompetitiveSeasonSettings {
      get {return _storage._combatCompetitiveSeasonSettings ?? POGOProtos_Settings_Master_CombatCompetitiveSeasonSettings()}
      set {_uniqueStorage()._combatCompetitiveSeasonSettings = newValue}
    }
    /// Returns true if `combatCompetitiveSeasonSettings` has been explicitly set.
    public var hasCombatCompetitiveSeasonSettings: Bool {return _storage._combatCompetitiveSeasonSettings != nil}
    /// Clears the value of `combatCompetitiveSeasonSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCombatCompetitiveSeasonSettings() {_uniqueStorage()._combatCompetitiveSeasonSettings = nil}

    public var combatRankingProtoSettings: POGOProtos_Settings_Master_CombatRankingSettings {
      get {return _storage._combatRankingProtoSettings ?? POGOProtos_Settings_Master_CombatRankingSettings()}
      set {_uniqueStorage()._combatRankingProtoSettings = newValue}
    }
    /// Returns true if `combatRankingProtoSettings` has been explicitly set.
    public var hasCombatRankingProtoSettings: Bool {return _storage._combatRankingProtoSettings != nil}
    /// Clears the value of `combatRankingProtoSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCombatRankingProtoSettings() {_uniqueStorage()._combatRankingProtoSettings = nil}

    public var combatType: POGOProtos_Settings_Master_CombatType {
      get {return _storage._combatType ?? POGOProtos_Settings_Master_CombatType()}
      set {_uniqueStorage()._combatType = newValue}
    }
    /// Returns true if `combatType` has been explicitly set.
    public var hasCombatType: Bool {return _storage._combatType != nil}
    /// Clears the value of `combatType`. Subsequent reads from it will return its default value.
    public mutating func clearCombatType() {_uniqueStorage()._combatType = nil}

    public var buddyLevelSettings: POGOProtos_Settings_Master_BuddyLevelSettings {
      get {return _storage._buddyLevelSettings ?? POGOProtos_Settings_Master_BuddyLevelSettings()}
      set {_uniqueStorage()._buddyLevelSettings = newValue}
    }
    /// Returns true if `buddyLevelSettings` has been explicitly set.
    public var hasBuddyLevelSettings: Bool {return _storage._buddyLevelSettings != nil}
    /// Clears the value of `buddyLevelSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyLevelSettings() {_uniqueStorage()._buddyLevelSettings = nil}

    public var buddyActivityCategorySettings: POGOProtos_Settings_Master_BuddyActivityCategorySettings {
      get {return _storage._buddyActivityCategorySettings ?? POGOProtos_Settings_Master_BuddyActivityCategorySettings()}
      set {_uniqueStorage()._buddyActivityCategorySettings = newValue}
    }
    /// Returns true if `buddyActivityCategorySettings` has been explicitly set.
    public var hasBuddyActivityCategorySettings: Bool {return _storage._buddyActivityCategorySettings != nil}
    /// Clears the value of `buddyActivityCategorySettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyActivityCategorySettings() {_uniqueStorage()._buddyActivityCategorySettings = nil}

    public var buddyActivitySettings: POGOProtos_Settings_Master_BuddyActivitySettings {
      get {return _storage._buddyActivitySettings ?? POGOProtos_Settings_Master_BuddyActivitySettings()}
      set {_uniqueStorage()._buddyActivitySettings = newValue}
    }
    /// Returns true if `buddyActivitySettings` has been explicitly set.
    public var hasBuddyActivitySettings: Bool {return _storage._buddyActivitySettings != nil}
    /// Clears the value of `buddyActivitySettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyActivitySettings() {_uniqueStorage()._buddyActivitySettings = nil}

    public var buddySwapSettings: POGOProtos_Settings_Master_BuddySwapSettings {
      get {return _storage._buddySwapSettings ?? POGOProtos_Settings_Master_BuddySwapSettings()}
      set {_uniqueStorage()._buddySwapSettings = newValue}
    }
    /// Returns true if `buddySwapSettings` has been explicitly set.
    public var hasBuddySwapSettings: Bool {return _storage._buddySwapSettings != nil}
    /// Clears the value of `buddySwapSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddySwapSettings() {_uniqueStorage()._buddySwapSettings = nil}

    public var vsSeekerClientSettings: POGOProtos_Settings_Master_VsSeekerClientSettings {
      get {return _storage._vsSeekerClientSettings ?? POGOProtos_Settings_Master_VsSeekerClientSettings()}
      set {_uniqueStorage()._vsSeekerClientSettings = newValue}
    }
    /// Returns true if `vsSeekerClientSettings` has been explicitly set.
    public var hasVsSeekerClientSettings: Bool {return _storage._vsSeekerClientSettings != nil}
    /// Clears the value of `vsSeekerClientSettings`. Subsequent reads from it will return its default value.
    public mutating func clearVsSeekerClientSettings() {_uniqueStorage()._vsSeekerClientSettings = nil}

    public var buddyEncounterCameoSettings: POGOProtos_Settings_Master_BuddyEncounterCameoSettings {
      get {return _storage._buddyEncounterCameoSettings ?? POGOProtos_Settings_Master_BuddyEncounterCameoSettings()}
      set {_uniqueStorage()._buddyEncounterCameoSettings = newValue}
    }
    /// Returns true if `buddyEncounterCameoSettings` has been explicitly set.
    public var hasBuddyEncounterCameoSettings: Bool {return _storage._buddyEncounterCameoSettings != nil}
    /// Clears the value of `buddyEncounterCameoSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyEncounterCameoSettings() {_uniqueStorage()._buddyEncounterCameoSettings = nil}

    public var limitedPurchaseSkuSettings: POGOProtos_Settings_Master_LimitedPurchaseSkuSettings {
      get {return _storage._limitedPurchaseSkuSettings ?? POGOProtos_Settings_Master_LimitedPurchaseSkuSettings()}
      set {_uniqueStorage()._limitedPurchaseSkuSettings = newValue}
    }
    /// Returns true if `limitedPurchaseSkuSettings` has been explicitly set.
    public var hasLimitedPurchaseSkuSettings: Bool {return _storage._limitedPurchaseSkuSettings != nil}
    /// Clears the value of `limitedPurchaseSkuSettings`. Subsequent reads from it will return its default value.
    public mutating func clearLimitedPurchaseSkuSettings() {_uniqueStorage()._limitedPurchaseSkuSettings = nil}

    public var buddyEmotionLevelSettings: POGOProtos_Settings_Master_BuddyEmotionLevelSettings {
      get {return _storage._buddyEmotionLevelSettings ?? POGOProtos_Settings_Master_BuddyEmotionLevelSettings()}
      set {_uniqueStorage()._buddyEmotionLevelSettings = newValue}
    }
    /// Returns true if `buddyEmotionLevelSettings` has been explicitly set.
    public var hasBuddyEmotionLevelSettings: Bool {return _storage._buddyEmotionLevelSettings != nil}
    /// Clears the value of `buddyEmotionLevelSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyEmotionLevelSettings() {_uniqueStorage()._buddyEmotionLevelSettings = nil}

    public var pokestopInvasionAvailabilitySettings: POGOProtos_Settings_Master_InvasionAvailabilitySettings {
      get {return _storage._pokestopInvasionAvailabilitySettings ?? POGOProtos_Settings_Master_InvasionAvailabilitySettings()}
      set {_uniqueStorage()._pokestopInvasionAvailabilitySettings = newValue}
    }
    /// Returns true if `pokestopInvasionAvailabilitySettings` has been explicitly set.
    public var hasPokestopInvasionAvailabilitySettings: Bool {return _storage._pokestopInvasionAvailabilitySettings != nil}
    /// Clears the value of `pokestopInvasionAvailabilitySettings`. Subsequent reads from it will return its default value.
    public mutating func clearPokestopInvasionAvailabilitySettings() {_uniqueStorage()._pokestopInvasionAvailabilitySettings = nil}

    public var buddyInteractionSettings: POGOProtos_Settings_Master_BuddyInteractionSettings {
      get {return _storage._buddyInteractionSettings ?? POGOProtos_Settings_Master_BuddyInteractionSettings()}
      set {_uniqueStorage()._buddyInteractionSettings = newValue}
    }
    /// Returns true if `buddyInteractionSettings` has been explicitly set.
    public var hasBuddyInteractionSettings: Bool {return _storage._buddyInteractionSettings != nil}
    /// Clears the value of `buddyInteractionSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyInteractionSettings() {_uniqueStorage()._buddyInteractionSettings = nil}

    public var vsSeekerLootProto: POGOProtos_Data_VsSeeker_VsSeekerLoot {
      get {return _storage._vsSeekerLootProto ?? POGOProtos_Data_VsSeeker_VsSeekerLoot()}
      set {_uniqueStorage()._vsSeekerLootProto = newValue}
    }
    /// Returns true if `vsSeekerLootProto` has been explicitly set.
    public var hasVsSeekerLootProto: Bool {return _storage._vsSeekerLootProto != nil}
    /// Clears the value of `vsSeekerLootProto`. Subsequent reads from it will return its default value.
    public mutating func clearVsSeekerLootProto() {_uniqueStorage()._vsSeekerLootProto = nil}

    public var vsSeekerPokemonRewards: POGOProtos_Data_VsSeeker_VsSeekerPokemonRewards {
      get {return _storage._vsSeekerPokemonRewards ?? POGOProtos_Data_VsSeeker_VsSeekerPokemonRewards()}
      set {_uniqueStorage()._vsSeekerPokemonRewards = newValue}
    }
    /// Returns true if `vsSeekerPokemonRewards` has been explicitly set.
    public var hasVsSeekerPokemonRewards: Bool {return _storage._vsSeekerPokemonRewards != nil}
    /// Clears the value of `vsSeekerPokemonRewards`. Subsequent reads from it will return its default value.
    public mutating func clearVsSeekerPokemonRewards() {_uniqueStorage()._vsSeekerPokemonRewards = nil}

    public var battleHubOrderSettings: POGOProtos_Settings_Master_BattleHubOrderSettings {
      get {return _storage._battleHubOrderSettings ?? POGOProtos_Settings_Master_BattleHubOrderSettings()}
      set {_uniqueStorage()._battleHubOrderSettings = newValue}
    }
    /// Returns true if `battleHubOrderSettings` has been explicitly set.
    public var hasBattleHubOrderSettings: Bool {return _storage._battleHubOrderSettings != nil}
    /// Clears the value of `battleHubOrderSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBattleHubOrderSettings() {_uniqueStorage()._battleHubOrderSettings = nil}

    public var battleHubBadgeSettings: POGOProtos_Settings_Master_BattleHubBadgeSettings {
      get {return _storage._battleHubBadgeSettings ?? POGOProtos_Settings_Master_BattleHubBadgeSettings()}
      set {_uniqueStorage()._battleHubBadgeSettings = newValue}
    }
    /// Returns true if `battleHubBadgeSettings` has been explicitly set.
    public var hasBattleHubBadgeSettings: Bool {return _storage._battleHubBadgeSettings != nil}
    /// Clears the value of `battleHubBadgeSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBattleHubBadgeSettings() {_uniqueStorage()._battleHubBadgeSettings = nil}

    public var mapBuddySettings: POGOProtos_Settings_Master_MapBuddySettings {
      get {return _storage._mapBuddySettings ?? POGOProtos_Settings_Master_MapBuddySettings()}
      set {_uniqueStorage()._mapBuddySettings = newValue}
    }
    /// Returns true if `mapBuddySettings` has been explicitly set.
    public var hasMapBuddySettings: Bool {return _storage._mapBuddySettings != nil}
    /// Clears the value of `mapBuddySettings`. Subsequent reads from it will return its default value.
    public mutating func clearMapBuddySettings() {_uniqueStorage()._mapBuddySettings = nil}

    public var buddyWalkSettings: POGOProtos_Settings_Master_BuddyWalkSettings {
      get {return _storage._buddyWalkSettings ?? POGOProtos_Settings_Master_BuddyWalkSettings()}
      set {_uniqueStorage()._buddyWalkSettings = newValue}
    }
    /// Returns true if `buddyWalkSettings` has been explicitly set.
    public var hasBuddyWalkSettings: Bool {return _storage._buddyWalkSettings != nil}
    /// Clears the value of `buddyWalkSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyWalkSettings() {_uniqueStorage()._buddyWalkSettings = nil}

    public var platypusRolloutSettings: POGOProtos_Settings_Master_PlatypusRolloutSettings {
      get {return _storage._platypusRolloutSettings ?? POGOProtos_Settings_Master_PlatypusRolloutSettings()}
      set {_uniqueStorage()._platypusRolloutSettings = newValue}
    }
    /// Returns true if `platypusRolloutSettings` has been explicitly set.
    public var hasPlatypusRolloutSettings: Bool {return _storage._platypusRolloutSettings != nil}
    /// Clears the value of `platypusRolloutSettings`. Subsequent reads from it will return its default value.
    public mutating func clearPlatypusRolloutSettings() {_uniqueStorage()._platypusRolloutSettings = nil}

    public var buddyHungerSettings: POGOProtos_Settings_Master_BuddyHungerSettings {
      get {return _storage._buddyHungerSettings ?? POGOProtos_Settings_Master_BuddyHungerSettings()}
      set {_uniqueStorage()._buddyHungerSettings = newValue}
    }
    /// Returns true if `buddyHungerSettings` has been explicitly set.
    public var hasBuddyHungerSettings: Bool {return _storage._buddyHungerSettings != nil}
    /// Clears the value of `buddyHungerSettings`. Subsequent reads from it will return its default value.
    public mutating func clearBuddyHungerSettings() {_uniqueStorage()._buddyHungerSettings = nil}

    public var projectVacation: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation {
      get {return _storage._projectVacation ?? POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation()}
      set {_uniqueStorage()._projectVacation = newValue}
    }
    /// Returns true if `projectVacation` has been explicitly set.
    public var hasProjectVacation: Bool {return _storage._projectVacation != nil}
    /// Clears the value of `projectVacation`. Subsequent reads from it will return its default value.
    public mutating func clearProjectVacation() {_uniqueStorage()._projectVacation = nil}

    public var megaEvoSettings: POGOProtos_Settings_Master_MegaEvoSettings {
      get {return _storage._megaEvoSettings ?? POGOProtos_Settings_Master_MegaEvoSettings()}
      set {_uniqueStorage()._megaEvoSettings = newValue}
    }
    /// Returns true if `megaEvoSettings` has been explicitly set.
    public var hasMegaEvoSettings: Bool {return _storage._megaEvoSettings != nil}
    /// Clears the value of `megaEvoSettings`. Subsequent reads from it will return its default value.
    public mutating func clearMegaEvoSettings() {_uniqueStorage()._megaEvoSettings = nil}

    public var temporaryEvolutionSettings: POGOProtos_Settings_Master_TemporaryEvolutionSettings {
      get {return _storage._temporaryEvolutionSettings ?? POGOProtos_Settings_Master_TemporaryEvolutionSettings()}
      set {_uniqueStorage()._temporaryEvolutionSettings = newValue}
    }
    /// Returns true if `temporaryEvolutionSettings` has been explicitly set.
    public var hasTemporaryEvolutionSettings: Bool {return _storage._temporaryEvolutionSettings != nil}
    /// Clears the value of `temporaryEvolutionSettings`. Subsequent reads from it will return its default value.
    public mutating func clearTemporaryEvolutionSettings() {_uniqueStorage()._temporaryEvolutionSettings = nil}

    public var avatarGroupOrderSettings: POGOProtos_Settings_Master_AvatarGroupOrderSettings {
      get {return _storage._avatarGroupOrderSettings ?? POGOProtos_Settings_Master_AvatarGroupOrderSettings()}
      set {_uniqueStorage()._avatarGroupOrderSettings = newValue}
    }
    /// Returns true if `avatarGroupOrderSettings` has been explicitly set.
    public var hasAvatarGroupOrderSettings: Bool {return _storage._avatarGroupOrderSettings != nil}
    /// Clears the value of `avatarGroupOrderSettings`. Subsequent reads from it will return its default value.
    public mutating func clearAvatarGroupOrderSettings() {_uniqueStorage()._avatarGroupOrderSettings = nil}

    public var pokemonFamily: POGOProtos_Settings_Master_PokemonFamilySettings {
      get {return _storage._pokemonFamily ?? POGOProtos_Settings_Master_PokemonFamilySettings()}
      set {_uniqueStorage()._pokemonFamily = newValue}
    }
    /// Returns true if `pokemonFamily` has been explicitly set.
    public var hasPokemonFamily: Bool {return _storage._pokemonFamily != nil}
    /// Clears the value of `pokemonFamily`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonFamily() {_uniqueStorage()._pokemonFamily = nil}

    public var monodepthSettings: POGOProtos_Settings_Master_MonodepthSettings {
      get {return _storage._monodepthSettings ?? POGOProtos_Settings_Master_MonodepthSettings()}
      set {_uniqueStorage()._monodepthSettings = newValue}
    }
    /// Returns true if `monodepthSettings` has been explicitly set.
    public var hasMonodepthSettings: Bool {return _storage._monodepthSettings != nil}
    /// Clears the value of `monodepthSettings`. Subsequent reads from it will return its default value.
    public mutating func clearMonodepthSettings() {_uniqueStorage()._monodepthSettings = nil}

    public var levelUpRewards: POGOProtos_Settings_Master_LevelUpRewardsSettings {
      get {return _storage._levelUpRewards ?? POGOProtos_Settings_Master_LevelUpRewardsSettings()}
      set {_uniqueStorage()._levelUpRewards = newValue}
    }
    /// Returns true if `levelUpRewards` has been explicitly set.
    public var hasLevelUpRewards: Bool {return _storage._levelUpRewards != nil}
    /// Clears the value of `levelUpRewards`. Subsequent reads from it will return its default value.
    public mutating func clearLevelUpRewards() {_uniqueStorage()._levelUpRewards = nil}

    public var raidSettingsProto: POGOProtos_Settings_Master_RaidClientSettings {
      get {return _storage._raidSettingsProto ?? POGOProtos_Settings_Master_RaidClientSettings()}
      set {_uniqueStorage()._raidSettingsProto = newValue}
    }
    /// Returns true if `raidSettingsProto` has been explicitly set.
    public var hasRaidSettingsProto: Bool {return _storage._raidSettingsProto != nil}
    /// Clears the value of `raidSettingsProto`. Subsequent reads from it will return its default value.
    public mutating func clearRaidSettingsProto() {_uniqueStorage()._raidSettingsProto = nil}

    public var sponsoredGeofenceGiftSettings: POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings {
      get {return _storage._sponsoredGeofenceGiftSettings ?? POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings()}
      set {_uniqueStorage()._sponsoredGeofenceGiftSettings = newValue}
    }
    /// Returns true if `sponsoredGeofenceGiftSettings` has been explicitly set.
    public var hasSponsoredGeofenceGiftSettings: Bool {return _storage._sponsoredGeofenceGiftSettings != nil}
    /// Clears the value of `sponsoredGeofenceGiftSettings`. Subsequent reads from it will return its default value.
    public mutating func clearSponsoredGeofenceGiftSettings() {_uniqueStorage()._sponsoredGeofenceGiftSettings = nil}

    public var stickerMetadata: POGOProtos_Data_Sticker_StickerMetadata {
      get {return _storage._stickerMetadata ?? POGOProtos_Data_Sticker_StickerMetadata()}
      set {_uniqueStorage()._stickerMetadata = newValue}
    }
    /// Returns true if `stickerMetadata` has been explicitly set.
    public var hasStickerMetadata: Bool {return _storage._stickerMetadata != nil}
    /// Clears the value of `stickerMetadata`. Subsequent reads from it will return its default value.
    public mutating func clearStickerMetadata() {_uniqueStorage()._stickerMetadata = nil}

    public var crossGameSocialSettings: POGOProtos_Settings_Master_CrossGameSocialSettings {
      get {return _storage._crossGameSocialSettings ?? POGOProtos_Settings_Master_CrossGameSocialSettings()}
      set {_uniqueStorage()._crossGameSocialSettings = newValue}
    }
    /// Returns true if `crossGameSocialSettings` has been explicitly set.
    public var hasCrossGameSocialSettings: Bool {return _storage._crossGameSocialSettings != nil}
    /// Clears the value of `crossGameSocialSettings`. Subsequent reads from it will return its default value.
    public mutating func clearCrossGameSocialSettings() {_uniqueStorage()._crossGameSocialSettings = nil}

    public var mapDisplaySettings: POGOProtos_Settings_Master_MapDisplaySettings {
      get {return _storage._mapDisplaySettings ?? POGOProtos_Settings_Master_MapDisplaySettings()}
      set {_uniqueStorage()._mapDisplaySettings = newValue}
    }
    /// Returns true if `mapDisplaySettings` has been explicitly set.
    public var hasMapDisplaySettings: Bool {return _storage._mapDisplaySettings != nil}
    /// Clears the value of `mapDisplaySettings`. Subsequent reads from it will return its default value.
    public mutating func clearMapDisplaySettings() {_uniqueStorage()._mapDisplaySettings = nil}

    public var pokemonHomeEnergyCosts: POGOProtos_Settings_Master_PokemonHomeEnergyCosts {
      get {return _storage._pokemonHomeEnergyCosts ?? POGOProtos_Settings_Master_PokemonHomeEnergyCosts()}
      set {_uniqueStorage()._pokemonHomeEnergyCosts = newValue}
    }
    /// Returns true if `pokemonHomeEnergyCosts` has been explicitly set.
    public var hasPokemonHomeEnergyCosts: Bool {return _storage._pokemonHomeEnergyCosts != nil}
    /// Clears the value of `pokemonHomeEnergyCosts`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonHomeEnergyCosts() {_uniqueStorage()._pokemonHomeEnergyCosts = nil}

    public var pokemonHomeSettings: POGOProtos_Settings_Master_PokemonHomeSettings {
      get {return _storage._pokemonHomeSettings ?? POGOProtos_Settings_Master_PokemonHomeSettings()}
      set {_uniqueStorage()._pokemonHomeSettings = newValue}
    }
    /// Returns true if `pokemonHomeSettings` has been explicitly set.
    public var hasPokemonHomeSettings: Bool {return _storage._pokemonHomeSettings != nil}
    /// Clears the value of `pokemonHomeSettings`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonHomeSettings() {_uniqueStorage()._pokemonHomeSettings = nil}

    public var arTelemetrySettings: POGOProtos_Settings_Master_ArTelemetrySettings {
      get {return _storage._arTelemetrySettings ?? POGOProtos_Settings_Master_ArTelemetrySettings()}
      set {_uniqueStorage()._arTelemetrySettings = newValue}
    }
    /// Returns true if `arTelemetrySettings` has been explicitly set.
    public var hasArTelemetrySettings: Bool {return _storage._arTelemetrySettings != nil}
    /// Clears the value of `arTelemetrySettings`. Subsequent reads from it will return its default value.
    public mutating func clearArTelemetrySettings() {_uniqueStorage()._arTelemetrySettings = nil}

    public var battlePartySettings: POGOProtos_Settings_Master_BattlePartySettings {
      get {return _storage._battlePartySettings ?? POGOProtos_Settings_Master_BattlePartySettings()}
      set {_uniqueStorage()._battlePartySettings = newValue}
    }
    /// Returns true if `battlePartySettings` has been explicitly set.
    public var hasBattlePartySettings: Bool {return _storage._battlePartySettings != nil}
    /// Clears the value of `battlePartySettings`. Subsequent reads from it will return its default value.
    public mutating func clearBattlePartySettings() {_uniqueStorage()._battlePartySettings = nil}

    public var questEvolutionSettings: POGOProtos_Settings_Master_QuestEvolutionSettings {
      get {return _storage._questEvolutionSettings ?? POGOProtos_Settings_Master_QuestEvolutionSettings()}
      set {_uniqueStorage()._questEvolutionSettings = newValue}
    }
    /// Returns true if `questEvolutionSettings` has been explicitly set.
    public var hasQuestEvolutionSettings: Bool {return _storage._questEvolutionSettings != nil}
    /// Clears the value of `questEvolutionSettings`. Subsequent reads from it will return its default value.
    public mutating func clearQuestEvolutionSettings() {_uniqueStorage()._questEvolutionSettings = nil}

    public var pokemonHomeFormReversion: POGOProtos_Settings_Master_PokemonHomeFormReversion {
      get {return _storage._pokemonHomeFormReversion ?? POGOProtos_Settings_Master_PokemonHomeFormReversion()}
      set {_uniqueStorage()._pokemonHomeFormReversion = newValue}
    }
    /// Returns true if `pokemonHomeFormReversion` has been explicitly set.
    public var hasPokemonHomeFormReversion: Bool {return _storage._pokemonHomeFormReversion != nil}
    /// Clears the value of `pokemonHomeFormReversion`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonHomeFormReversion() {_uniqueStorage()._pokemonHomeFormReversion = nil}

    public var deepLinkingSettings: POGOProtos_Settings_Master_DeepLinkingSettings {
      get {return _storage._deepLinkingSettings ?? POGOProtos_Settings_Master_DeepLinkingSettings()}
      set {_uniqueStorage()._deepLinkingSettings = newValue}
    }
    /// Returns true if `deepLinkingSettings` has been explicitly set.
    public var hasDeepLinkingSettings: Bool {return _storage._deepLinkingSettings != nil}
    /// Clears the value of `deepLinkingSettings`. Subsequent reads from it will return its default value.
    public mutating func clearDeepLinkingSettings() {_uniqueStorage()._deepLinkingSettings = nil}

    public var guiSearchSettings: POGOProtos_Settings_Master_GuiSearchSettings {
      get {return _storage._guiSearchSettings ?? POGOProtos_Settings_Master_GuiSearchSettings()}
      set {_uniqueStorage()._guiSearchSettings = newValue}
    }
    /// Returns true if `guiSearchSettings` has been explicitly set.
    public var hasGuiSearchSettings: Bool {return _storage._guiSearchSettings != nil}
    /// Clears the value of `guiSearchSettings`. Subsequent reads from it will return its default value.
    public mutating func clearGuiSearchSettings() {_uniqueStorage()._guiSearchSettings = nil}

    public var evolutionQuestTemplate: POGOProtos_Settings_Master_ClientEvolutionQuestTemplate {
      get {return _storage._evolutionQuestTemplate ?? POGOProtos_Settings_Master_ClientEvolutionQuestTemplate()}
      set {_uniqueStorage()._evolutionQuestTemplate = newValue}
    }
    /// Returns true if `evolutionQuestTemplate` has been explicitly set.
    public var hasEvolutionQuestTemplate: Bool {return _storage._evolutionQuestTemplate != nil}
    /// Clears the value of `evolutionQuestTemplate`. Subsequent reads from it will return its default value.
    public mutating func clearEvolutionQuestTemplate() {_uniqueStorage()._evolutionQuestTemplate = nil}

    public var adFeedbackSettings: POGOProtos_Settings_Master_AdFeedbackSettings {
      get {return _storage._adFeedbackSettings ?? POGOProtos_Settings_Master_AdFeedbackSettings()}
      set {_uniqueStorage()._adFeedbackSettings = newValue}
    }
    /// Returns true if `adFeedbackSettings` has been explicitly set.
    public var hasAdFeedbackSettings: Bool {return _storage._adFeedbackSettings != nil}
    /// Clears the value of `adFeedbackSettings`. Subsequent reads from it will return its default value.
    public mutating func clearAdFeedbackSettings() {_uniqueStorage()._adFeedbackSettings = nil}

    public var friendProfileSettings: POGOProtos_Settings_Master_FriendProfileSettings {
      get {return _storage._friendProfileSettings ?? POGOProtos_Settings_Master_FriendProfileSettings()}
      set {_uniqueStorage()._friendProfileSettings = newValue}
    }
    /// Returns true if `friendProfileSettings` has been explicitly set.
    public var hasFriendProfileSettings: Bool {return _storage._friendProfileSettings != nil}
    /// Clears the value of `friendProfileSettings`. Subsequent reads from it will return its default value.
    public mutating func clearFriendProfileSettings() {_uniqueStorage()._friendProfileSettings = nil}

    public var geotargetedQuestSettings: POGOProtos_Settings_Master_GeotargetedQuestSettings {
      get {return _storage._geotargetedQuestSettings ?? POGOProtos_Settings_Master_GeotargetedQuestSettings()}
      set {_uniqueStorage()._geotargetedQuestSettings = newValue}
    }
    /// Returns true if `geotargetedQuestSettings` has been explicitly set.
    public var hasGeotargetedQuestSettings: Bool {return _storage._geotargetedQuestSettings != nil}
    /// Clears the value of `geotargetedQuestSettings`. Subsequent reads from it will return its default value.
    public mutating func clearGeotargetedQuestSettings() {_uniqueStorage()._geotargetedQuestSettings = nil}

    public var pokemonTagSettings: POGOProtos_Settings_Master_PokemonTagSettings {
      get {return _storage._pokemonTagSettings ?? POGOProtos_Settings_Master_PokemonTagSettings()}
      set {_uniqueStorage()._pokemonTagSettings = newValue}
    }
    /// Returns true if `pokemonTagSettings` has been explicitly set.
    public var hasPokemonTagSettings: Bool {return _storage._pokemonTagSettings != nil}
    /// Clears the value of `pokemonTagSettings`. Subsequent reads from it will return its default value.
    public mutating func clearPokemonTagSettings() {_uniqueStorage()._pokemonTagSettings = nil}

    public var recommendedSearchProto: POGOProtos_Settings_Master_RecommendedSearch {
      get {return _storage._recommendedSearchProto ?? POGOProtos_Settings_Master_RecommendedSearch()}
      set {_uniqueStorage()._recommendedSearchProto = newValue}
    }
    /// Returns true if `recommendedSearchProto` has been explicitly set.
    public var hasRecommendedSearchProto: Bool {return _storage._recommendedSearchProto != nil}
    /// Clears the value of `recommendedSearchProto`. Subsequent reads from it will return its default value.
    public mutating func clearRecommendedSearchProto() {_uniqueStorage()._recommendedSearchProto = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public struct ProjectVacation {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      public var enable2020: Bool = false

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    public init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.Result] = [
    .unset,
    .success,
    .page,
    .retry,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_DownloadItemTemplatesResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DownloadItemTemplatesResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .standard(proto: "item_template"),
    3: .standard(proto: "timestamp_ms"),
    4: .standard(proto: "page_offset"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.result) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.itemTemplate) }()
      case 3: try { try decoder.decodeSingularUInt64Field(value: &self.timestampMs) }()
      case 4: try { try decoder.decodeSingularInt32Field(value: &self.pageOffset) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    if !self.itemTemplate.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.itemTemplate, fieldNumber: 2)
    }
    if self.timestampMs != 0 {
      try visitor.visitSingularUInt64Field(value: self.timestampMs, fieldNumber: 3)
    }
    if self.pageOffset != 0 {
      try visitor.visitSingularInt32Field(value: self.pageOffset, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse, rhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.itemTemplate != rhs.itemTemplate {return false}
    if lhs.timestampMs != rhs.timestampMs {return false}
    if lhs.pageOffset != rhs.pageOffset {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.Result: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "PAGE"),
    3: .same(proto: "RETRY"),
  ]
}

extension POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.protoMessageName + ".GameMasterClientTemplate"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "template_id"),
    2: .same(proto: "pokemon"),
    3: .same(proto: "item"),
    4: .same(proto: "move"),
    5: .standard(proto: "move_sequence"),
    8: .standard(proto: "type_effective"),
    10: .same(proto: "badge"),
    11: .same(proto: "camera"),
    12: .standard(proto: "player_level"),
    13: .standard(proto: "gym_level"),
    14: .standard(proto: "battle_settings"),
    15: .standard(proto: "encounter_settings"),
    16: .standard(proto: "iap_item_display"),
    17: .standard(proto: "iap_settings"),
    18: .standard(proto: "pokemon_upgrades"),
    19: .standard(proto: "equipped_badges"),
    20: .standard(proto: "quest_settings"),
    21: .standard(proto: "avatar_customization"),
    22: .standard(proto: "form_settings"),
    23: .standard(proto: "gender_settings"),
    24: .standard(proto: "gym_badge_settings"),
    25: .standard(proto: "weather_affinities"),
    26: .standard(proto: "weather_bonus_settings"),
    27: .standard(proto: "pokemon_scale_settings"),
    28: .standard(proto: "iap_category_display"),
    29: .standard(proto: "beluga_pokemon_whitelist"),
    30: .standard(proto: "onboarding_settings"),
    31: .standard(proto: "friendship_milestone_settings"),
    32: .standard(proto: "lucky_pokemon_settings"),
    33: .standard(proto: "combat_settings"),
    34: .standard(proto: "combat_league_settings"),
    35: .standard(proto: "combat_league"),
    36: .standard(proto: "ex_raid_settings"),
    37: .standard(proto: "combat_move"),
    38: .standard(proto: "background_mode_settings"),
    39: .standard(proto: "combat_stat_stage_settings"),
    40: .standard(proto: "combat_npc_trainer"),
    41: .standard(proto: "combat_npc_personality"),
    42: .standard(proto: "onboarding_v2_settings"),
    43: .standard(proto: "party_recommendation_settings"),
    44: .standard(proto: "smeargle_moves_settings"),
    45: .standard(proto: "pokecoin_purchase_display_gmt"),
    46: .standard(proto: "adventure_sync_v2_gmt"),
    47: .standard(proto: "loading_screen_settings"),
    48: .standard(proto: "invasion_npc_display_settings"),
    49: .standard(proto: "combat_competitive_season_settings"),
    50: .standard(proto: "combat_ranking_proto_settings"),
    51: .standard(proto: "combat_type"),
    52: .standard(proto: "buddy_level_settings"),
    53: .standard(proto: "buddy_activity_category_settings"),
    54: .standard(proto: "buddy_activity_settings"),
    56: .standard(proto: "buddy_swap_settings"),
    58: .standard(proto: "vs_seeker_client_settings"),
    59: .standard(proto: "buddy_encounter_cameo_settings"),
    60: .standard(proto: "limited_purchase_sku_settings"),
    61: .standard(proto: "buddy_emotion_level_settings"),
    62: .standard(proto: "pokestop_invasion_availability_settings"),
    63: .standard(proto: "buddy_interaction_settings"),
    64: .standard(proto: "vs_seeker_loot_proto"),
    65: .standard(proto: "vs_seeker_pokemon_rewards"),
    66: .standard(proto: "battle_hub_order_settings"),
    67: .standard(proto: "battle_hub_badge_settings"),
    68: .standard(proto: "map_buddy_settings"),
    69: .standard(proto: "buddy_walk_settings"),
    70: .standard(proto: "platypus_rollout_settings"),
    72: .standard(proto: "buddy_hunger_settings"),
    73: .standard(proto: "project_vacation"),
    74: .standard(proto: "mega_evo_settings"),
    75: .standard(proto: "temporary_evolution_settings"),
    76: .standard(proto: "avatar_group_order_settings"),
    77: .standard(proto: "pokemon_family"),
    78: .standard(proto: "monodepth_settings"),
    79: .standard(proto: "level_up_rewards"),
    81: .standard(proto: "raid_settings_proto"),
    84: .standard(proto: "sponsored_geofence_gift_settings"),
    85: .standard(proto: "sticker_metadata"),
    86: .standard(proto: "cross_game_social_settings"),
    87: .standard(proto: "map_display_settings"),
    88: .standard(proto: "pokemon_home_energy_costs"),
    89: .standard(proto: "pokemon_home_settings"),
    90: .standard(proto: "ar_telemetry_settings"),
    91: .standard(proto: "battle_party_settings"),
    93: .standard(proto: "quest_evolution_settings"),
    94: .standard(proto: "pokemon_home_form_reversion"),
    95: .standard(proto: "deep_linking_settings"),
    96: .standard(proto: "gui_search_settings"),
    97: .standard(proto: "evolution_quest_template"),
    98: .standard(proto: "ad_feedback_settings"),
    99: .standard(proto: "friend_profile_settings"),
    100: .standard(proto: "geotargeted_quest_settings"),
    101: .standard(proto: "pokemon_tag_settings"),
    102: .standard(proto: "recommended_search_proto"),
  ]

  fileprivate class _StorageClass {
    var _templateID: String = String()
    var _pokemon: POGOProtos_Settings_Master_PokemonSettings? = nil
    var _item: POGOProtos_Settings_Master_ItemSettings? = nil
    var _move: POGOProtos_Settings_Master_MoveSettings? = nil
    var _moveSequence: POGOProtos_Settings_Master_MoveSequenceSettings? = nil
    var _typeEffective: POGOProtos_Settings_Master_TypeEffectiveSettings? = nil
    var _badge: POGOProtos_Settings_Master_BadgeSettings? = nil
    var _camera: POGOProtos_Settings_Master_CameraSettings? = nil
    var _playerLevel: POGOProtos_Settings_Master_PlayerLevelSettings? = nil
    var _gymLevel: POGOProtos_Settings_Master_GymLevelSettings? = nil
    var _battleSettings: POGOProtos_Settings_Master_GymBattleSettings? = nil
    var _encounterSettings: POGOProtos_Settings_Master_EncounterSettings? = nil
    var _iapItemDisplay: POGOProtos_Settings_Master_IapItemDisplay? = nil
    var _iapSettings: POGOProtos_Settings_Master_IapSettings? = nil
    var _pokemonUpgrades: POGOProtos_Settings_Master_PokemonUpgradeSettings? = nil
    var _equippedBadges: POGOProtos_Settings_Master_EquippedBadgeSettings? = nil
    var _questSettings: POGOProtos_Settings_Master_QuestSettings? = nil
    var _avatarCustomization: POGOProtos_Data_Avatar_AvatarCustomization? = nil
    var _formSettings: POGOProtos_Settings_Master_FormSettings? = nil
    var _genderSettings: POGOProtos_Settings_Master_GenderSettings? = nil
    var _gymBadgeSettings: POGOProtos_Settings_Master_GymBadgeGmtSettings? = nil
    var _weatherAffinities: POGOProtos_Settings_Master_WeatherAffinity? = nil
    var _weatherBonusSettings: POGOProtos_Settings_Master_WeatherBonus? = nil
    var _pokemonScaleSettings: POGOProtos_Settings_Master_PokemonScaleSetting? = nil
    var _iapCategoryDisplay: POGOProtos_Settings_Master_IapItemCategoryDisplay? = nil
    var _belugaPokemonWhitelist: POGOProtos_Settings_Master_BelugaPokemonWhitelist? = nil
    var _onboardingSettings: POGOProtos_Settings_Master_OnboardingSettings? = nil
    var _friendshipMilestoneSettings: POGOProtos_Settings_Master_FriendshipLevelMilestoneSettings? = nil
    var _luckyPokemonSettings: POGOProtos_Settings_Master_LuckyPokemonSettings? = nil
    var _combatSettings: POGOProtos_Settings_Master_CombatSettings? = nil
    var _combatLeagueSettings: POGOProtos_Settings_Master_CombatLeagueSettings? = nil
    var _combatLeague: POGOProtos_Settings_Master_CombatLeague? = nil
    var _exRaidSettings: POGOProtos_Settings_Master_ExRaidSettings? = nil
    var _combatMove: POGOProtos_Settings_Master_CombatMoveSettings? = nil
    var _backgroundModeSettings: POGOProtos_Settings_Master_BackgroundModeSettings? = nil
    var _combatStatStageSettings: POGOProtos_Settings_Master_CombatStatStageSettings? = nil
    var _combatNpcTrainer: POGOProtos_Settings_Master_CombatNpcTrainer? = nil
    var _combatNpcPersonality: POGOProtos_Settings_Master_CombatNpcPersonality? = nil
    var _onboardingV2Settings: POGOProtos_Settings_Master_OnboardingV2Settings? = nil
    var _partyRecommendationSettings: POGOProtos_Settings_Master_PartyRecommendationSettings? = nil
    var _smeargleMovesSettings: POGOProtos_Settings_Master_SmeargleMovesSettings? = nil
    var _pokecoinPurchaseDisplayGmt: POGOProtos_Settings_Master_PokecoinPurchaseDisplayGmt? = nil
    var _adventureSyncV2Gmt: POGOProtos_Settings_Master_AdventureSyncV2Gmt? = nil
    var _loadingScreenSettings: POGOProtos_Settings_Master_LoadingScreen? = nil
    var _invasionNpcDisplaySettings: POGOProtos_Settings_Master_InvasionNpcDisplaySettings? = nil
    var _combatCompetitiveSeasonSettings: POGOProtos_Settings_Master_CombatCompetitiveSeasonSettings? = nil
    var _combatRankingProtoSettings: POGOProtos_Settings_Master_CombatRankingSettings? = nil
    var _combatType: POGOProtos_Settings_Master_CombatType? = nil
    var _buddyLevelSettings: POGOProtos_Settings_Master_BuddyLevelSettings? = nil
    var _buddyActivityCategorySettings: POGOProtos_Settings_Master_BuddyActivityCategorySettings? = nil
    var _buddyActivitySettings: POGOProtos_Settings_Master_BuddyActivitySettings? = nil
    var _buddySwapSettings: POGOProtos_Settings_Master_BuddySwapSettings? = nil
    var _vsSeekerClientSettings: POGOProtos_Settings_Master_VsSeekerClientSettings? = nil
    var _buddyEncounterCameoSettings: POGOProtos_Settings_Master_BuddyEncounterCameoSettings? = nil
    var _limitedPurchaseSkuSettings: POGOProtos_Settings_Master_LimitedPurchaseSkuSettings? = nil
    var _buddyEmotionLevelSettings: POGOProtos_Settings_Master_BuddyEmotionLevelSettings? = nil
    var _pokestopInvasionAvailabilitySettings: POGOProtos_Settings_Master_InvasionAvailabilitySettings? = nil
    var _buddyInteractionSettings: POGOProtos_Settings_Master_BuddyInteractionSettings? = nil
    var _vsSeekerLootProto: POGOProtos_Data_VsSeeker_VsSeekerLoot? = nil
    var _vsSeekerPokemonRewards: POGOProtos_Data_VsSeeker_VsSeekerPokemonRewards? = nil
    var _battleHubOrderSettings: POGOProtos_Settings_Master_BattleHubOrderSettings? = nil
    var _battleHubBadgeSettings: POGOProtos_Settings_Master_BattleHubBadgeSettings? = nil
    var _mapBuddySettings: POGOProtos_Settings_Master_MapBuddySettings? = nil
    var _buddyWalkSettings: POGOProtos_Settings_Master_BuddyWalkSettings? = nil
    var _platypusRolloutSettings: POGOProtos_Settings_Master_PlatypusRolloutSettings? = nil
    var _buddyHungerSettings: POGOProtos_Settings_Master_BuddyHungerSettings? = nil
    var _projectVacation: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation? = nil
    var _megaEvoSettings: POGOProtos_Settings_Master_MegaEvoSettings? = nil
    var _temporaryEvolutionSettings: POGOProtos_Settings_Master_TemporaryEvolutionSettings? = nil
    var _avatarGroupOrderSettings: POGOProtos_Settings_Master_AvatarGroupOrderSettings? = nil
    var _pokemonFamily: POGOProtos_Settings_Master_PokemonFamilySettings? = nil
    var _monodepthSettings: POGOProtos_Settings_Master_MonodepthSettings? = nil
    var _levelUpRewards: POGOProtos_Settings_Master_LevelUpRewardsSettings? = nil
    var _raidSettingsProto: POGOProtos_Settings_Master_RaidClientSettings? = nil
    var _sponsoredGeofenceGiftSettings: POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings? = nil
    var _stickerMetadata: POGOProtos_Data_Sticker_StickerMetadata? = nil
    var _crossGameSocialSettings: POGOProtos_Settings_Master_CrossGameSocialSettings? = nil
    var _mapDisplaySettings: POGOProtos_Settings_Master_MapDisplaySettings? = nil
    var _pokemonHomeEnergyCosts: POGOProtos_Settings_Master_PokemonHomeEnergyCosts? = nil
    var _pokemonHomeSettings: POGOProtos_Settings_Master_PokemonHomeSettings? = nil
    var _arTelemetrySettings: POGOProtos_Settings_Master_ArTelemetrySettings? = nil
    var _battlePartySettings: POGOProtos_Settings_Master_BattlePartySettings? = nil
    var _questEvolutionSettings: POGOProtos_Settings_Master_QuestEvolutionSettings? = nil
    var _pokemonHomeFormReversion: POGOProtos_Settings_Master_PokemonHomeFormReversion? = nil
    var _deepLinkingSettings: POGOProtos_Settings_Master_DeepLinkingSettings? = nil
    var _guiSearchSettings: POGOProtos_Settings_Master_GuiSearchSettings? = nil
    var _evolutionQuestTemplate: POGOProtos_Settings_Master_ClientEvolutionQuestTemplate? = nil
    var _adFeedbackSettings: POGOProtos_Settings_Master_AdFeedbackSettings? = nil
    var _friendProfileSettings: POGOProtos_Settings_Master_FriendProfileSettings? = nil
    var _geotargetedQuestSettings: POGOProtos_Settings_Master_GeotargetedQuestSettings? = nil
    var _pokemonTagSettings: POGOProtos_Settings_Master_PokemonTagSettings? = nil
    var _recommendedSearchProto: POGOProtos_Settings_Master_RecommendedSearch? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _templateID = source._templateID
      _pokemon = source._pokemon
      _item = source._item
      _move = source._move
      _moveSequence = source._moveSequence
      _typeEffective = source._typeEffective
      _badge = source._badge
      _camera = source._camera
      _playerLevel = source._playerLevel
      _gymLevel = source._gymLevel
      _battleSettings = source._battleSettings
      _encounterSettings = source._encounterSettings
      _iapItemDisplay = source._iapItemDisplay
      _iapSettings = source._iapSettings
      _pokemonUpgrades = source._pokemonUpgrades
      _equippedBadges = source._equippedBadges
      _questSettings = source._questSettings
      _avatarCustomization = source._avatarCustomization
      _formSettings = source._formSettings
      _genderSettings = source._genderSettings
      _gymBadgeSettings = source._gymBadgeSettings
      _weatherAffinities = source._weatherAffinities
      _weatherBonusSettings = source._weatherBonusSettings
      _pokemonScaleSettings = source._pokemonScaleSettings
      _iapCategoryDisplay = source._iapCategoryDisplay
      _belugaPokemonWhitelist = source._belugaPokemonWhitelist
      _onboardingSettings = source._onboardingSettings
      _friendshipMilestoneSettings = source._friendshipMilestoneSettings
      _luckyPokemonSettings = source._luckyPokemonSettings
      _combatSettings = source._combatSettings
      _combatLeagueSettings = source._combatLeagueSettings
      _combatLeague = source._combatLeague
      _exRaidSettings = source._exRaidSettings
      _combatMove = source._combatMove
      _backgroundModeSettings = source._backgroundModeSettings
      _combatStatStageSettings = source._combatStatStageSettings
      _combatNpcTrainer = source._combatNpcTrainer
      _combatNpcPersonality = source._combatNpcPersonality
      _onboardingV2Settings = source._onboardingV2Settings
      _partyRecommendationSettings = source._partyRecommendationSettings
      _smeargleMovesSettings = source._smeargleMovesSettings
      _pokecoinPurchaseDisplayGmt = source._pokecoinPurchaseDisplayGmt
      _adventureSyncV2Gmt = source._adventureSyncV2Gmt
      _loadingScreenSettings = source._loadingScreenSettings
      _invasionNpcDisplaySettings = source._invasionNpcDisplaySettings
      _combatCompetitiveSeasonSettings = source._combatCompetitiveSeasonSettings
      _combatRankingProtoSettings = source._combatRankingProtoSettings
      _combatType = source._combatType
      _buddyLevelSettings = source._buddyLevelSettings
      _buddyActivityCategorySettings = source._buddyActivityCategorySettings
      _buddyActivitySettings = source._buddyActivitySettings
      _buddySwapSettings = source._buddySwapSettings
      _vsSeekerClientSettings = source._vsSeekerClientSettings
      _buddyEncounterCameoSettings = source._buddyEncounterCameoSettings
      _limitedPurchaseSkuSettings = source._limitedPurchaseSkuSettings
      _buddyEmotionLevelSettings = source._buddyEmotionLevelSettings
      _pokestopInvasionAvailabilitySettings = source._pokestopInvasionAvailabilitySettings
      _buddyInteractionSettings = source._buddyInteractionSettings
      _vsSeekerLootProto = source._vsSeekerLootProto
      _vsSeekerPokemonRewards = source._vsSeekerPokemonRewards
      _battleHubOrderSettings = source._battleHubOrderSettings
      _battleHubBadgeSettings = source._battleHubBadgeSettings
      _mapBuddySettings = source._mapBuddySettings
      _buddyWalkSettings = source._buddyWalkSettings
      _platypusRolloutSettings = source._platypusRolloutSettings
      _buddyHungerSettings = source._buddyHungerSettings
      _projectVacation = source._projectVacation
      _megaEvoSettings = source._megaEvoSettings
      _temporaryEvolutionSettings = source._temporaryEvolutionSettings
      _avatarGroupOrderSettings = source._avatarGroupOrderSettings
      _pokemonFamily = source._pokemonFamily
      _monodepthSettings = source._monodepthSettings
      _levelUpRewards = source._levelUpRewards
      _raidSettingsProto = source._raidSettingsProto
      _sponsoredGeofenceGiftSettings = source._sponsoredGeofenceGiftSettings
      _stickerMetadata = source._stickerMetadata
      _crossGameSocialSettings = source._crossGameSocialSettings
      _mapDisplaySettings = source._mapDisplaySettings
      _pokemonHomeEnergyCosts = source._pokemonHomeEnergyCosts
      _pokemonHomeSettings = source._pokemonHomeSettings
      _arTelemetrySettings = source._arTelemetrySettings
      _battlePartySettings = source._battlePartySettings
      _questEvolutionSettings = source._questEvolutionSettings
      _pokemonHomeFormReversion = source._pokemonHomeFormReversion
      _deepLinkingSettings = source._deepLinkingSettings
      _guiSearchSettings = source._guiSearchSettings
      _evolutionQuestTemplate = source._evolutionQuestTemplate
      _adFeedbackSettings = source._adFeedbackSettings
      _friendProfileSettings = source._friendProfileSettings
      _geotargetedQuestSettings = source._geotargetedQuestSettings
      _pokemonTagSettings = source._pokemonTagSettings
      _recommendedSearchProto = source._recommendedSearchProto
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._templateID) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._pokemon) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._item) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._move) }()
        case 5: try { try decoder.decodeSingularMessageField(value: &_storage._moveSequence) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._typeEffective) }()
        case 10: try { try decoder.decodeSingularMessageField(value: &_storage._badge) }()
        case 11: try { try decoder.decodeSingularMessageField(value: &_storage._camera) }()
        case 12: try { try decoder.decodeSingularMessageField(value: &_storage._playerLevel) }()
        case 13: try { try decoder.decodeSingularMessageField(value: &_storage._gymLevel) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._battleSettings) }()
        case 15: try { try decoder.decodeSingularMessageField(value: &_storage._encounterSettings) }()
        case 16: try { try decoder.decodeSingularMessageField(value: &_storage._iapItemDisplay) }()
        case 17: try { try decoder.decodeSingularMessageField(value: &_storage._iapSettings) }()
        case 18: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonUpgrades) }()
        case 19: try { try decoder.decodeSingularMessageField(value: &_storage._equippedBadges) }()
        case 20: try { try decoder.decodeSingularMessageField(value: &_storage._questSettings) }()
        case 21: try { try decoder.decodeSingularMessageField(value: &_storage._avatarCustomization) }()
        case 22: try { try decoder.decodeSingularMessageField(value: &_storage._formSettings) }()
        case 23: try { try decoder.decodeSingularMessageField(value: &_storage._genderSettings) }()
        case 24: try { try decoder.decodeSingularMessageField(value: &_storage._gymBadgeSettings) }()
        case 25: try { try decoder.decodeSingularMessageField(value: &_storage._weatherAffinities) }()
        case 26: try { try decoder.decodeSingularMessageField(value: &_storage._weatherBonusSettings) }()
        case 27: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonScaleSettings) }()
        case 28: try { try decoder.decodeSingularMessageField(value: &_storage._iapCategoryDisplay) }()
        case 29: try { try decoder.decodeSingularMessageField(value: &_storage._belugaPokemonWhitelist) }()
        case 30: try { try decoder.decodeSingularMessageField(value: &_storage._onboardingSettings) }()
        case 31: try { try decoder.decodeSingularMessageField(value: &_storage._friendshipMilestoneSettings) }()
        case 32: try { try decoder.decodeSingularMessageField(value: &_storage._luckyPokemonSettings) }()
        case 33: try { try decoder.decodeSingularMessageField(value: &_storage._combatSettings) }()
        case 34: try { try decoder.decodeSingularMessageField(value: &_storage._combatLeagueSettings) }()
        case 35: try { try decoder.decodeSingularMessageField(value: &_storage._combatLeague) }()
        case 36: try { try decoder.decodeSingularMessageField(value: &_storage._exRaidSettings) }()
        case 37: try { try decoder.decodeSingularMessageField(value: &_storage._combatMove) }()
        case 38: try { try decoder.decodeSingularMessageField(value: &_storage._backgroundModeSettings) }()
        case 39: try { try decoder.decodeSingularMessageField(value: &_storage._combatStatStageSettings) }()
        case 40: try { try decoder.decodeSingularMessageField(value: &_storage._combatNpcTrainer) }()
        case 41: try { try decoder.decodeSingularMessageField(value: &_storage._combatNpcPersonality) }()
        case 42: try { try decoder.decodeSingularMessageField(value: &_storage._onboardingV2Settings) }()
        case 43: try { try decoder.decodeSingularMessageField(value: &_storage._partyRecommendationSettings) }()
        case 44: try { try decoder.decodeSingularMessageField(value: &_storage._smeargleMovesSettings) }()
        case 45: try { try decoder.decodeSingularMessageField(value: &_storage._pokecoinPurchaseDisplayGmt) }()
        case 46: try { try decoder.decodeSingularMessageField(value: &_storage._adventureSyncV2Gmt) }()
        case 47: try { try decoder.decodeSingularMessageField(value: &_storage._loadingScreenSettings) }()
        case 48: try { try decoder.decodeSingularMessageField(value: &_storage._invasionNpcDisplaySettings) }()
        case 49: try { try decoder.decodeSingularMessageField(value: &_storage._combatCompetitiveSeasonSettings) }()
        case 50: try { try decoder.decodeSingularMessageField(value: &_storage._combatRankingProtoSettings) }()
        case 51: try { try decoder.decodeSingularMessageField(value: &_storage._combatType) }()
        case 52: try { try decoder.decodeSingularMessageField(value: &_storage._buddyLevelSettings) }()
        case 53: try { try decoder.decodeSingularMessageField(value: &_storage._buddyActivityCategorySettings) }()
        case 54: try { try decoder.decodeSingularMessageField(value: &_storage._buddyActivitySettings) }()
        case 56: try { try decoder.decodeSingularMessageField(value: &_storage._buddySwapSettings) }()
        case 58: try { try decoder.decodeSingularMessageField(value: &_storage._vsSeekerClientSettings) }()
        case 59: try { try decoder.decodeSingularMessageField(value: &_storage._buddyEncounterCameoSettings) }()
        case 60: try { try decoder.decodeSingularMessageField(value: &_storage._limitedPurchaseSkuSettings) }()
        case 61: try { try decoder.decodeSingularMessageField(value: &_storage._buddyEmotionLevelSettings) }()
        case 62: try { try decoder.decodeSingularMessageField(value: &_storage._pokestopInvasionAvailabilitySettings) }()
        case 63: try { try decoder.decodeSingularMessageField(value: &_storage._buddyInteractionSettings) }()
        case 64: try { try decoder.decodeSingularMessageField(value: &_storage._vsSeekerLootProto) }()
        case 65: try { try decoder.decodeSingularMessageField(value: &_storage._vsSeekerPokemonRewards) }()
        case 66: try { try decoder.decodeSingularMessageField(value: &_storage._battleHubOrderSettings) }()
        case 67: try { try decoder.decodeSingularMessageField(value: &_storage._battleHubBadgeSettings) }()
        case 68: try { try decoder.decodeSingularMessageField(value: &_storage._mapBuddySettings) }()
        case 69: try { try decoder.decodeSingularMessageField(value: &_storage._buddyWalkSettings) }()
        case 70: try { try decoder.decodeSingularMessageField(value: &_storage._platypusRolloutSettings) }()
        case 72: try { try decoder.decodeSingularMessageField(value: &_storage._buddyHungerSettings) }()
        case 73: try { try decoder.decodeSingularMessageField(value: &_storage._projectVacation) }()
        case 74: try { try decoder.decodeSingularMessageField(value: &_storage._megaEvoSettings) }()
        case 75: try { try decoder.decodeSingularMessageField(value: &_storage._temporaryEvolutionSettings) }()
        case 76: try { try decoder.decodeSingularMessageField(value: &_storage._avatarGroupOrderSettings) }()
        case 77: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonFamily) }()
        case 78: try { try decoder.decodeSingularMessageField(value: &_storage._monodepthSettings) }()
        case 79: try { try decoder.decodeSingularMessageField(value: &_storage._levelUpRewards) }()
        case 81: try { try decoder.decodeSingularMessageField(value: &_storage._raidSettingsProto) }()
        case 84: try { try decoder.decodeSingularMessageField(value: &_storage._sponsoredGeofenceGiftSettings) }()
        case 85: try { try decoder.decodeSingularMessageField(value: &_storage._stickerMetadata) }()
        case 86: try { try decoder.decodeSingularMessageField(value: &_storage._crossGameSocialSettings) }()
        case 87: try { try decoder.decodeSingularMessageField(value: &_storage._mapDisplaySettings) }()
        case 88: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonHomeEnergyCosts) }()
        case 89: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonHomeSettings) }()
        case 90: try { try decoder.decodeSingularMessageField(value: &_storage._arTelemetrySettings) }()
        case 91: try { try decoder.decodeSingularMessageField(value: &_storage._battlePartySettings) }()
        case 93: try { try decoder.decodeSingularMessageField(value: &_storage._questEvolutionSettings) }()
        case 94: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonHomeFormReversion) }()
        case 95: try { try decoder.decodeSingularMessageField(value: &_storage._deepLinkingSettings) }()
        case 96: try { try decoder.decodeSingularMessageField(value: &_storage._guiSearchSettings) }()
        case 97: try { try decoder.decodeSingularMessageField(value: &_storage._evolutionQuestTemplate) }()
        case 98: try { try decoder.decodeSingularMessageField(value: &_storage._adFeedbackSettings) }()
        case 99: try { try decoder.decodeSingularMessageField(value: &_storage._friendProfileSettings) }()
        case 100: try { try decoder.decodeSingularMessageField(value: &_storage._geotargetedQuestSettings) }()
        case 101: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonTagSettings) }()
        case 102: try { try decoder.decodeSingularMessageField(value: &_storage._recommendedSearchProto) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._templateID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._templateID, fieldNumber: 1)
      }
      if let v = _storage._pokemon {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._item {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._move {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._moveSequence {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._typeEffective {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._badge {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._camera {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._playerLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._gymLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._battleSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._encounterSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._iapItemDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._iapSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._pokemonUpgrades {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._equippedBadges {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._questSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._avatarCustomization {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._formSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._genderSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._gymBadgeSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      }
      if let v = _storage._weatherAffinities {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._weatherBonusSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._pokemonScaleSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if let v = _storage._iapCategoryDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if let v = _storage._belugaPokemonWhitelist {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._onboardingSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if let v = _storage._friendshipMilestoneSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if let v = _storage._luckyPokemonSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._combatSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._combatLeagueSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 34)
      }
      if let v = _storage._combatLeague {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._exRaidSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._combatMove {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 37)
      }
      if let v = _storage._backgroundModeSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 38)
      }
      if let v = _storage._combatStatStageSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 39)
      }
      if let v = _storage._combatNpcTrainer {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
      }
      if let v = _storage._combatNpcPersonality {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
      }
      if let v = _storage._onboardingV2Settings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
      }
      if let v = _storage._partyRecommendationSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 43)
      }
      if let v = _storage._smeargleMovesSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 44)
      }
      if let v = _storage._pokecoinPurchaseDisplayGmt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 45)
      }
      if let v = _storage._adventureSyncV2Gmt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 46)
      }
      if let v = _storage._loadingScreenSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 47)
      }
      if let v = _storage._invasionNpcDisplaySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 48)
      }
      if let v = _storage._combatCompetitiveSeasonSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 49)
      }
      if let v = _storage._combatRankingProtoSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 50)
      }
      if let v = _storage._combatType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 51)
      }
      if let v = _storage._buddyLevelSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 52)
      }
      if let v = _storage._buddyActivityCategorySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 53)
      }
      if let v = _storage._buddyActivitySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 54)
      }
      if let v = _storage._buddySwapSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 56)
      }
      if let v = _storage._vsSeekerClientSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 58)
      }
      if let v = _storage._buddyEncounterCameoSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 59)
      }
      if let v = _storage._limitedPurchaseSkuSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 60)
      }
      if let v = _storage._buddyEmotionLevelSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 61)
      }
      if let v = _storage._pokestopInvasionAvailabilitySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 62)
      }
      if let v = _storage._buddyInteractionSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 63)
      }
      if let v = _storage._vsSeekerLootProto {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 64)
      }
      if let v = _storage._vsSeekerPokemonRewards {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 65)
      }
      if let v = _storage._battleHubOrderSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 66)
      }
      if let v = _storage._battleHubBadgeSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 67)
      }
      if let v = _storage._mapBuddySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 68)
      }
      if let v = _storage._buddyWalkSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 69)
      }
      if let v = _storage._platypusRolloutSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 70)
      }
      if let v = _storage._buddyHungerSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 72)
      }
      if let v = _storage._projectVacation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 73)
      }
      if let v = _storage._megaEvoSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 74)
      }
      if let v = _storage._temporaryEvolutionSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 75)
      }
      if let v = _storage._avatarGroupOrderSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 76)
      }
      if let v = _storage._pokemonFamily {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 77)
      }
      if let v = _storage._monodepthSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 78)
      }
      if let v = _storage._levelUpRewards {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 79)
      }
      if let v = _storage._raidSettingsProto {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 81)
      }
      if let v = _storage._sponsoredGeofenceGiftSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 84)
      }
      if let v = _storage._stickerMetadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 85)
      }
      if let v = _storage._crossGameSocialSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 86)
      }
      if let v = _storage._mapDisplaySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 87)
      }
      if let v = _storage._pokemonHomeEnergyCosts {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 88)
      }
      if let v = _storage._pokemonHomeSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 89)
      }
      if let v = _storage._arTelemetrySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 90)
      }
      if let v = _storage._battlePartySettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 91)
      }
      if let v = _storage._questEvolutionSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 93)
      }
      if let v = _storage._pokemonHomeFormReversion {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 94)
      }
      if let v = _storage._deepLinkingSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 95)
      }
      if let v = _storage._guiSearchSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 96)
      }
      if let v = _storage._evolutionQuestTemplate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 97)
      }
      if let v = _storage._adFeedbackSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 98)
      }
      if let v = _storage._friendProfileSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 99)
      }
      if let v = _storage._geotargetedQuestSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 100)
      }
      if let v = _storage._pokemonTagSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 101)
      }
      if let v = _storage._recommendedSearchProto {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 102)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate, rhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._templateID != rhs_storage._templateID {return false}
        if _storage._pokemon != rhs_storage._pokemon {return false}
        if _storage._item != rhs_storage._item {return false}
        if _storage._move != rhs_storage._move {return false}
        if _storage._moveSequence != rhs_storage._moveSequence {return false}
        if _storage._typeEffective != rhs_storage._typeEffective {return false}
        if _storage._badge != rhs_storage._badge {return false}
        if _storage._camera != rhs_storage._camera {return false}
        if _storage._playerLevel != rhs_storage._playerLevel {return false}
        if _storage._gymLevel != rhs_storage._gymLevel {return false}
        if _storage._battleSettings != rhs_storage._battleSettings {return false}
        if _storage._encounterSettings != rhs_storage._encounterSettings {return false}
        if _storage._iapItemDisplay != rhs_storage._iapItemDisplay {return false}
        if _storage._iapSettings != rhs_storage._iapSettings {return false}
        if _storage._pokemonUpgrades != rhs_storage._pokemonUpgrades {return false}
        if _storage._equippedBadges != rhs_storage._equippedBadges {return false}
        if _storage._questSettings != rhs_storage._questSettings {return false}
        if _storage._avatarCustomization != rhs_storage._avatarCustomization {return false}
        if _storage._formSettings != rhs_storage._formSettings {return false}
        if _storage._genderSettings != rhs_storage._genderSettings {return false}
        if _storage._gymBadgeSettings != rhs_storage._gymBadgeSettings {return false}
        if _storage._weatherAffinities != rhs_storage._weatherAffinities {return false}
        if _storage._weatherBonusSettings != rhs_storage._weatherBonusSettings {return false}
        if _storage._pokemonScaleSettings != rhs_storage._pokemonScaleSettings {return false}
        if _storage._iapCategoryDisplay != rhs_storage._iapCategoryDisplay {return false}
        if _storage._belugaPokemonWhitelist != rhs_storage._belugaPokemonWhitelist {return false}
        if _storage._onboardingSettings != rhs_storage._onboardingSettings {return false}
        if _storage._friendshipMilestoneSettings != rhs_storage._friendshipMilestoneSettings {return false}
        if _storage._luckyPokemonSettings != rhs_storage._luckyPokemonSettings {return false}
        if _storage._combatSettings != rhs_storage._combatSettings {return false}
        if _storage._combatLeagueSettings != rhs_storage._combatLeagueSettings {return false}
        if _storage._combatLeague != rhs_storage._combatLeague {return false}
        if _storage._exRaidSettings != rhs_storage._exRaidSettings {return false}
        if _storage._combatMove != rhs_storage._combatMove {return false}
        if _storage._backgroundModeSettings != rhs_storage._backgroundModeSettings {return false}
        if _storage._combatStatStageSettings != rhs_storage._combatStatStageSettings {return false}
        if _storage._combatNpcTrainer != rhs_storage._combatNpcTrainer {return false}
        if _storage._combatNpcPersonality != rhs_storage._combatNpcPersonality {return false}
        if _storage._onboardingV2Settings != rhs_storage._onboardingV2Settings {return false}
        if _storage._partyRecommendationSettings != rhs_storage._partyRecommendationSettings {return false}
        if _storage._smeargleMovesSettings != rhs_storage._smeargleMovesSettings {return false}
        if _storage._pokecoinPurchaseDisplayGmt != rhs_storage._pokecoinPurchaseDisplayGmt {return false}
        if _storage._adventureSyncV2Gmt != rhs_storage._adventureSyncV2Gmt {return false}
        if _storage._loadingScreenSettings != rhs_storage._loadingScreenSettings {return false}
        if _storage._invasionNpcDisplaySettings != rhs_storage._invasionNpcDisplaySettings {return false}
        if _storage._combatCompetitiveSeasonSettings != rhs_storage._combatCompetitiveSeasonSettings {return false}
        if _storage._combatRankingProtoSettings != rhs_storage._combatRankingProtoSettings {return false}
        if _storage._combatType != rhs_storage._combatType {return false}
        if _storage._buddyLevelSettings != rhs_storage._buddyLevelSettings {return false}
        if _storage._buddyActivityCategorySettings != rhs_storage._buddyActivityCategorySettings {return false}
        if _storage._buddyActivitySettings != rhs_storage._buddyActivitySettings {return false}
        if _storage._buddySwapSettings != rhs_storage._buddySwapSettings {return false}
        if _storage._vsSeekerClientSettings != rhs_storage._vsSeekerClientSettings {return false}
        if _storage._buddyEncounterCameoSettings != rhs_storage._buddyEncounterCameoSettings {return false}
        if _storage._limitedPurchaseSkuSettings != rhs_storage._limitedPurchaseSkuSettings {return false}
        if _storage._buddyEmotionLevelSettings != rhs_storage._buddyEmotionLevelSettings {return false}
        if _storage._pokestopInvasionAvailabilitySettings != rhs_storage._pokestopInvasionAvailabilitySettings {return false}
        if _storage._buddyInteractionSettings != rhs_storage._buddyInteractionSettings {return false}
        if _storage._vsSeekerLootProto != rhs_storage._vsSeekerLootProto {return false}
        if _storage._vsSeekerPokemonRewards != rhs_storage._vsSeekerPokemonRewards {return false}
        if _storage._battleHubOrderSettings != rhs_storage._battleHubOrderSettings {return false}
        if _storage._battleHubBadgeSettings != rhs_storage._battleHubBadgeSettings {return false}
        if _storage._mapBuddySettings != rhs_storage._mapBuddySettings {return false}
        if _storage._buddyWalkSettings != rhs_storage._buddyWalkSettings {return false}
        if _storage._platypusRolloutSettings != rhs_storage._platypusRolloutSettings {return false}
        if _storage._buddyHungerSettings != rhs_storage._buddyHungerSettings {return false}
        if _storage._projectVacation != rhs_storage._projectVacation {return false}
        if _storage._megaEvoSettings != rhs_storage._megaEvoSettings {return false}
        if _storage._temporaryEvolutionSettings != rhs_storage._temporaryEvolutionSettings {return false}
        if _storage._avatarGroupOrderSettings != rhs_storage._avatarGroupOrderSettings {return false}
        if _storage._pokemonFamily != rhs_storage._pokemonFamily {return false}
        if _storage._monodepthSettings != rhs_storage._monodepthSettings {return false}
        if _storage._levelUpRewards != rhs_storage._levelUpRewards {return false}
        if _storage._raidSettingsProto != rhs_storage._raidSettingsProto {return false}
        if _storage._sponsoredGeofenceGiftSettings != rhs_storage._sponsoredGeofenceGiftSettings {return false}
        if _storage._stickerMetadata != rhs_storage._stickerMetadata {return false}
        if _storage._crossGameSocialSettings != rhs_storage._crossGameSocialSettings {return false}
        if _storage._mapDisplaySettings != rhs_storage._mapDisplaySettings {return false}
        if _storage._pokemonHomeEnergyCosts != rhs_storage._pokemonHomeEnergyCosts {return false}
        if _storage._pokemonHomeSettings != rhs_storage._pokemonHomeSettings {return false}
        if _storage._arTelemetrySettings != rhs_storage._arTelemetrySettings {return false}
        if _storage._battlePartySettings != rhs_storage._battlePartySettings {return false}
        if _storage._questEvolutionSettings != rhs_storage._questEvolutionSettings {return false}
        if _storage._pokemonHomeFormReversion != rhs_storage._pokemonHomeFormReversion {return false}
        if _storage._deepLinkingSettings != rhs_storage._deepLinkingSettings {return false}
        if _storage._guiSearchSettings != rhs_storage._guiSearchSettings {return false}
        if _storage._evolutionQuestTemplate != rhs_storage._evolutionQuestTemplate {return false}
        if _storage._adFeedbackSettings != rhs_storage._adFeedbackSettings {return false}
        if _storage._friendProfileSettings != rhs_storage._friendProfileSettings {return false}
        if _storage._geotargetedQuestSettings != rhs_storage._geotargetedQuestSettings {return false}
        if _storage._pokemonTagSettings != rhs_storage._pokemonTagSettings {return false}
        if _storage._recommendedSearchProto != rhs_storage._recommendedSearchProto {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.protoMessageName + ".ProjectVacation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "enable2020"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.enable2020) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.enable2020 != false {
      try visitor.visitSingularBoolField(value: self.enable2020, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation, rhs: POGOProtos_Networking_Responses_DownloadItemTemplatesResponse.GameMasterClientTemplate.ProjectVacation) -> Bool {
    if lhs.enable2020 != rhs.enable2020 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
