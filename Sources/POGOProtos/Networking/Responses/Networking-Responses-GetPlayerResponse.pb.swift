// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/GetPlayerResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_GetPlayerResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var success: Bool = false

  public var playerData: POGOProtos_Data_PlayerData {
    get {return _playerData ?? POGOProtos_Data_PlayerData()}
    set {_playerData = newValue}
  }
  /// Returns true if `playerData` has been explicitly set.
  public var hasPlayerData: Bool {return self._playerData != nil}
  /// Clears the value of `playerData`. Subsequent reads from it will return its default value.
  public mutating func clearPlayerData() {self._playerData = nil}

  public var banned: Bool = false

  public var warn: Bool = false

  public var wasCreated: Bool = false

  public var warnMessageAcknowledged: Bool = false

  public var wasSuspended: Bool = false

  public var suspendedMessageAcknowledged: Bool = false

  public var warnExpireMs: Int64 = 0

  public var userPermission: [Int32] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _playerData: POGOProtos_Data_PlayerData? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_GetPlayerResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetPlayerResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "success"),
    2: .standard(proto: "player_data"),
    3: .same(proto: "banned"),
    4: .same(proto: "warn"),
    5: .standard(proto: "was_created"),
    6: .standard(proto: "warn_message_acknowledged"),
    7: .standard(proto: "was_suspended"),
    8: .standard(proto: "suspended_message_acknowledged"),
    9: .standard(proto: "warn_expire_ms"),
    10: .standard(proto: "user_permission"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.success) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._playerData) }()
      case 3: try { try decoder.decodeSingularBoolField(value: &self.banned) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.warn) }()
      case 5: try { try decoder.decodeSingularBoolField(value: &self.wasCreated) }()
      case 6: try { try decoder.decodeSingularBoolField(value: &self.warnMessageAcknowledged) }()
      case 7: try { try decoder.decodeSingularBoolField(value: &self.wasSuspended) }()
      case 8: try { try decoder.decodeSingularBoolField(value: &self.suspendedMessageAcknowledged) }()
      case 9: try { try decoder.decodeSingularInt64Field(value: &self.warnExpireMs) }()
      case 10: try { try decoder.decodeRepeatedInt32Field(value: &self.userPermission) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.success != false {
      try visitor.visitSingularBoolField(value: self.success, fieldNumber: 1)
    }
    if let v = self._playerData {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if self.banned != false {
      try visitor.visitSingularBoolField(value: self.banned, fieldNumber: 3)
    }
    if self.warn != false {
      try visitor.visitSingularBoolField(value: self.warn, fieldNumber: 4)
    }
    if self.wasCreated != false {
      try visitor.visitSingularBoolField(value: self.wasCreated, fieldNumber: 5)
    }
    if self.warnMessageAcknowledged != false {
      try visitor.visitSingularBoolField(value: self.warnMessageAcknowledged, fieldNumber: 6)
    }
    if self.wasSuspended != false {
      try visitor.visitSingularBoolField(value: self.wasSuspended, fieldNumber: 7)
    }
    if self.suspendedMessageAcknowledged != false {
      try visitor.visitSingularBoolField(value: self.suspendedMessageAcknowledged, fieldNumber: 8)
    }
    if self.warnExpireMs != 0 {
      try visitor.visitSingularInt64Field(value: self.warnExpireMs, fieldNumber: 9)
    }
    if !self.userPermission.isEmpty {
      try visitor.visitPackedInt32Field(value: self.userPermission, fieldNumber: 10)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_GetPlayerResponse, rhs: POGOProtos_Networking_Responses_GetPlayerResponse) -> Bool {
    if lhs.success != rhs.success {return false}
    if lhs._playerData != rhs._playerData {return false}
    if lhs.banned != rhs.banned {return false}
    if lhs.warn != rhs.warn {return false}
    if lhs.wasCreated != rhs.wasCreated {return false}
    if lhs.warnMessageAcknowledged != rhs.warnMessageAcknowledged {return false}
    if lhs.wasSuspended != rhs.wasSuspended {return false}
    if lhs.suspendedMessageAcknowledged != rhs.suspendedMessageAcknowledged {return false}
    if lhs.warnExpireMs != rhs.warnExpireMs {return false}
    if lhs.userPermission != rhs.userPermission {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
