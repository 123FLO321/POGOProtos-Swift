// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/CompleteQuestResponse.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Responses_CompleteQuestResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var status: POGOProtos_Networking_Responses_CompleteQuestResponse.Status {
    get {return _storage._status}
    set {_uniqueStorage()._status = newValue}
  }

  var quest: POGOProtos_Data_Quests_ClientQuest {
    get {return _storage._quest ?? POGOProtos_Data_Quests_ClientQuest()}
    set {_uniqueStorage()._quest = newValue}
  }
  /// Returns true if `quest` has been explicitly set.
  var hasQuest: Bool {return _storage._quest != nil}
  /// Clears the value of `quest`. Subsequent reads from it will return its default value.
  mutating func clearQuest() {_uniqueStorage()._quest = nil}

  var stamp: [POGOProtos_Data_Quests_QuestStamp] {
    get {return _storage._stamp}
    set {_uniqueStorage()._stamp = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case errorQuestNotFound // = 2
    case errorQuestStillInProgress // = 3
    case errorQuestAlreadyCompleted // = 4
    case errorSubquestNotFound // = 5
    case errorSubquestStillInProgress // = 6
    case errorSubquestAlreadyCompleted // = 7
    case errorMultipartStillInProgress // = 8
    case errorMultipartAlreadyCompleted // = 9
    case errorRedeemCompletedQuestStampCardFirst // = 10
    case errorInventoryFull // = 11
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .errorQuestNotFound
      case 3: self = .errorQuestStillInProgress
      case 4: self = .errorQuestAlreadyCompleted
      case 5: self = .errorSubquestNotFound
      case 6: self = .errorSubquestStillInProgress
      case 7: self = .errorSubquestAlreadyCompleted
      case 8: self = .errorMultipartStillInProgress
      case 9: self = .errorMultipartAlreadyCompleted
      case 10: self = .errorRedeemCompletedQuestStampCardFirst
      case 11: self = .errorInventoryFull
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .errorQuestNotFound: return 2
      case .errorQuestStillInProgress: return 3
      case .errorQuestAlreadyCompleted: return 4
      case .errorSubquestNotFound: return 5
      case .errorSubquestStillInProgress: return 6
      case .errorSubquestAlreadyCompleted: return 7
      case .errorMultipartStillInProgress: return 8
      case .errorMultipartAlreadyCompleted: return 9
      case .errorRedeemCompletedQuestStampCardFirst: return 10
      case .errorInventoryFull: return 11
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_CompleteQuestResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_CompleteQuestResponse.Status] = [
    .unset,
    .success,
    .errorQuestNotFound,
    .errorQuestStillInProgress,
    .errorQuestAlreadyCompleted,
    .errorSubquestNotFound,
    .errorSubquestStillInProgress,
    .errorSubquestAlreadyCompleted,
    .errorMultipartStillInProgress,
    .errorMultipartAlreadyCompleted,
    .errorRedeemCompletedQuestStampCardFirst,
    .errorInventoryFull,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_CompleteQuestResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CompleteQuestResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .same(proto: "quest"),
    3: .same(proto: "stamp"),
  ]

  fileprivate class _StorageClass {
    var _status: POGOProtos_Networking_Responses_CompleteQuestResponse.Status = .unset
    var _quest: POGOProtos_Data_Quests_ClientQuest? = nil
    var _stamp: [POGOProtos_Data_Quests_QuestStamp] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _status = source._status
      _quest = source._quest
      _stamp = source._stamp
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._status)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._quest)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._stamp)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._status != .unset {
        try visitor.visitSingularEnumField(value: _storage._status, fieldNumber: 1)
      }
      if let v = _storage._quest {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._stamp.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._stamp, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_CompleteQuestResponse, rhs: POGOProtos_Networking_Responses_CompleteQuestResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._status != rhs_storage._status {return false}
        if _storage._quest != rhs_storage._quest {return false}
        if _storage._stamp != rhs_storage._stamp {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_CompleteQuestResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "ERROR_QUEST_NOT_FOUND"),
    3: .same(proto: "ERROR_QUEST_STILL_IN_PROGRESS"),
    4: .same(proto: "ERROR_QUEST_ALREADY_COMPLETED"),
    5: .same(proto: "ERROR_SUBQUEST_NOT_FOUND"),
    6: .same(proto: "ERROR_SUBQUEST_STILL_IN_PROGRESS"),
    7: .same(proto: "ERROR_SUBQUEST_ALREADY_COMPLETED"),
    8: .same(proto: "ERROR_MULTIPART_STILL_IN_PROGRESS"),
    9: .same(proto: "ERROR_MULTIPART_ALREADY_COMPLETED"),
    10: .same(proto: "ERROR_REDEEM_COMPLETED_QUEST_STAMP_CARD_FIRST"),
    11: .same(proto: "ERROR_INVENTORY_FULL"),
  ]
}
