// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/PlatformClientActionsResponse.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Responses_RegisterPushNotificationResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var result: POGOProtos_Networking_Responses_RegisterPushNotificationResponse.Result = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case noChange // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .noChange
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .noChange: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_RegisterPushNotificationResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_RegisterPushNotificationResponse.Result] = [
    .unset,
    .success,
    .noChange,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_UpdateNotificationStatusResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var notificationIds: [String] = []

  var createTimestampMs: [Int64] = []

  var state: POGOProtos_Networking_Responses_UpdateNotificationStatusResponse.NotificationState = .unsetState

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum NotificationState: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unsetState // = 0
    case viewed // = 1
    case UNRECOGNIZED(Int)

    init() {
      self = .unsetState
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unsetState
      case 1: self = .viewed
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unsetState: return 0
      case .viewed: return 1
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_UpdateNotificationStatusResponse.NotificationState: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_UpdateNotificationStatusResponse.NotificationState] = [
    .unsetState,
    .viewed,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_OptOutPushNotificationCategoryResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct POGOProtos_Networking_Responses_RedeemPasscodeResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var result: POGOProtos_Networking_Responses_RedeemPasscodeResponse.Result = .unset

  var acquiredItem: [POGOProtos_Networking_Responses_RedeemPasscodeResponse.AcquiredItem] = []

  var acquiredItemsProto: Data = SwiftProtobuf.Internal.emptyData

  var passcode: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case notAvailable // = 2
    case overInventoryLimit // = 3
    case alreadyRedeemed // = 4
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .notAvailable
      case 3: self = .overInventoryLimit
      case 4: self = .alreadyRedeemed
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .notAvailable: return 2
      case .overInventoryLimit: return 3
      case .alreadyRedeemed: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  struct AcquiredItem {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var item: String = String()

    var count: Int64 = 0

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_RedeemPasscodeResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_RedeemPasscodeResponse.Result] = [
    .unset,
    .success,
    .notAvailable,
    .overInventoryLimit,
    .alreadyRedeemed,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_AddNewPoiResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var status: POGOProtos_Networking_Responses_AddNewPoiResponse.Status = .unset

  var message: [String] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case failure // = 2
    case internalError // = 3
    case tooManyRecentSubmissions // = 4
    case invalidInput // = 5
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .failure
      case 3: self = .internalError
      case 4: self = .tooManyRecentSubmissions
      case 5: self = .invalidInput
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .failure: return 2
      case .internalError: return 3
      case .tooManyRecentSubmissions: return 4
      case .invalidInput: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_AddNewPoiResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_AddNewPoiResponse.Status] = [
    .unset,
    .success,
    .failure,
    .internalError,
    .tooManyRecentSubmissions,
    .invalidInput,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_ProxySocialActionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var status: POGOProtos_Networking_Responses_ProxySocialActionResponse.Status = .unset

  var assignedHost: String = String()

  var payload: Data = SwiftProtobuf.Internal.emptyData

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case completed // = 1
    case completedAndReassigned // = 2
    case actionNotFound // = 3
    case assignmentError // = 4
    case proxyUnauthorizedError // = 5
    case internalError // = 6
    case badRequest // = 7
    case accessDenied // = 8
    case timeoutError // = 9
    case rateLimited // = 10
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .completed
      case 2: self = .completedAndReassigned
      case 3: self = .actionNotFound
      case 4: self = .assignmentError
      case 5: self = .proxyUnauthorizedError
      case 6: self = .internalError
      case 7: self = .badRequest
      case 8: self = .accessDenied
      case 9: self = .timeoutError
      case 10: self = .rateLimited
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .completed: return 1
      case .completedAndReassigned: return 2
      case .actionNotFound: return 3
      case .assignmentError: return 4
      case .proxyUnauthorizedError: return 5
      case .internalError: return 6
      case .badRequest: return 7
      case .accessDenied: return 8
      case .timeoutError: return 9
      case .rateLimited: return 10
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_ProxySocialActionResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_ProxySocialActionResponse.Status] = [
    .unset,
    .completed,
    .completedAndReassigned,
    .actionNotFound,
    .assignmentError,
    .proxyUnauthorizedError,
    .internalError,
    .badRequest,
    .accessDenied,
    .timeoutError,
    .rateLimited,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_GetAvailableSubmissionsResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var submissionsLeft: Int32 = 0

  var minPlayerLevel: Int32 = 0

  var hasValidEmail_p: Bool = false

  var isFeatureEnabled: Bool = false

  var timeWindowForSubmissionsLimitMs: Int32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct POGOProtos_Networking_Responses_PushNotificationRegistryResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var result: POGOProtos_Networking_Responses_PushNotificationRegistryResponse.Result = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case noChange // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .noChange
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .noChange: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_PushNotificationRegistryResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_PushNotificationRegistryResponse.Result] = [
    .unset,
    .success,
    .noChange,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_AddLoginActionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var success: Bool = false

  var loginDetail: [POGOProtos_Data_Login_LoginDetail] = []

  var status: POGOProtos_Networking_Responses_AddLoginActionResponse.Status = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case authFailure // = 1
    case loginTaken // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .authFailure
      case 2: self = .loginTaken
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .authFailure: return 1
      case .loginTaken: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_AddLoginActionResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_AddLoginActionResponse.Status] = [
    .unset,
    .authFailure,
    .loginTaken,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_RemoveLoginActionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var success: Bool = false

  var loginDetail: [POGOProtos_Data_Login_LoginDetail] = []

  var status: POGOProtos_Networking_Responses_RemoveLoginActionResponse.Status = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case loginNotRemovable // = 1
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .loginNotRemovable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .loginNotRemovable: return 1
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_RemoveLoginActionResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_RemoveLoginActionResponse.Status] = [
    .unset,
    .loginNotRemovable,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_SubmitNewPoiResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var status: POGOProtos_Networking_Responses_SubmitNewPoiResponse.Status = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case failure // = 2
    case internalError // = 3
    case tooManyRecentSubmissions // = 4
    case invalidInput // = 5
    case minor // = 6
    case notAvailable // = 7
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .failure
      case 3: self = .internalError
      case 4: self = .tooManyRecentSubmissions
      case 5: self = .invalidInput
      case 6: self = .minor
      case 7: self = .notAvailable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .failure: return 2
      case .internalError: return 3
      case .tooManyRecentSubmissions: return 4
      case .invalidInput: return 5
      case .minor: return 6
      case .notAvailable: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_SubmitNewPoiResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_SubmitNewPoiResponse.Status] = [
    .unset,
    .success,
    .failure,
    .internalError,
    .tooManyRecentSubmissions,
    .invalidInput,
    .minor,
    .notAvailable,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var status: POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse.Result = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Result: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case success // = 1
    case featureDisabled // = 2
    case alreadyUploaded // = 3
    case imageNotFound // = 4
    case imageTooBig // = 5
    case imageNotServable // = 6
    case portalNotFound // = 7
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .success
      case 2: self = .featureDisabled
      case 3: self = .alreadyUploaded
      case 4: self = .imageNotFound
      case 5: self = .imageTooBig
      case 6: self = .imageNotServable
      case 7: self = .portalNotFound
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .success: return 1
      case .featureDisabled: return 2
      case .alreadyUploaded: return 3
      case .imageNotFound: return 4
      case .imageTooBig: return 5
      case .imageNotServable: return 6
      case .portalNotFound: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse.Result] = [
    .unset,
    .success,
    .featureDisabled,
    .alreadyUploaded,
    .imageNotFound,
    .imageTooBig,
    .imageNotServable,
    .portalNotFound,
  ]
}

#endif  // swift(>=4.2)

struct POGOProtos_Networking_Responses_PingResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var userInfo: String = String()

  var serverInfo: String = String()

  var randomResponseBytes: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct POGOProtos_Networking_Responses_ReplaceLoginActionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var success: Bool = false

  var loginDetail: [POGOProtos_Data_Login_LoginDetail] = []

  var status: POGOProtos_Networking_Responses_ReplaceLoginActionResponse.Status = .unset

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Status: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case authFailure // = 1
    case loginTaken // = 2
    case loginAlreadyHave // = 3
    case loginNotReplaceable // = 4
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .authFailure
      case 2: self = .loginTaken
      case 3: self = .loginAlreadyHave
      case 4: self = .loginNotReplaceable
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .authFailure: return 1
      case .loginTaken: return 2
      case .loginAlreadyHave: return 3
      case .loginNotReplaceable: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_ReplaceLoginActionResponse.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Responses_ReplaceLoginActionResponse.Status] = [
    .unset,
    .authFailure,
    .loginTaken,
    .loginAlreadyHave,
    .loginNotReplaceable,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_RegisterPushNotificationResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RegisterPushNotificationResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.result)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_RegisterPushNotificationResponse, rhs: POGOProtos_Networking_Responses_RegisterPushNotificationResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_RegisterPushNotificationResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "NO_CHANGE"),
  ]
}

extension POGOProtos_Networking_Responses_UpdateNotificationStatusResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UpdateNotificationStatusResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "notification_ids"),
    2: .standard(proto: "create_timestamp_ms"),
    3: .same(proto: "state"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedStringField(value: &self.notificationIds)
      case 2: try decoder.decodeRepeatedInt64Field(value: &self.createTimestampMs)
      case 3: try decoder.decodeSingularEnumField(value: &self.state)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.notificationIds.isEmpty {
      try visitor.visitRepeatedStringField(value: self.notificationIds, fieldNumber: 1)
    }
    if !self.createTimestampMs.isEmpty {
      try visitor.visitPackedInt64Field(value: self.createTimestampMs, fieldNumber: 2)
    }
    if self.state != .unsetState {
      try visitor.visitSingularEnumField(value: self.state, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_UpdateNotificationStatusResponse, rhs: POGOProtos_Networking_Responses_UpdateNotificationStatusResponse) -> Bool {
    if lhs.notificationIds != rhs.notificationIds {return false}
    if lhs.createTimestampMs != rhs.createTimestampMs {return false}
    if lhs.state != rhs.state {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_UpdateNotificationStatusResponse.NotificationState: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET_STATE"),
    1: .same(proto: "VIEWED"),
  ]
}

extension POGOProtos_Networking_Responses_OptOutPushNotificationCategoryResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".OptOutPushNotificationCategoryResponse"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_OptOutPushNotificationCategoryResponse, rhs: POGOProtos_Networking_Responses_OptOutPushNotificationCategoryResponse) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_RedeemPasscodeResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RedeemPasscodeResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .standard(proto: "acquired_item"),
    3: .standard(proto: "acquired_items_proto"),
    4: .same(proto: "passcode"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.result)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.acquiredItem)
      case 3: try decoder.decodeSingularBytesField(value: &self.acquiredItemsProto)
      case 4: try decoder.decodeSingularStringField(value: &self.passcode)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    if !self.acquiredItem.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.acquiredItem, fieldNumber: 2)
    }
    if !self.acquiredItemsProto.isEmpty {
      try visitor.visitSingularBytesField(value: self.acquiredItemsProto, fieldNumber: 3)
    }
    if !self.passcode.isEmpty {
      try visitor.visitSingularStringField(value: self.passcode, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_RedeemPasscodeResponse, rhs: POGOProtos_Networking_Responses_RedeemPasscodeResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.acquiredItem != rhs.acquiredItem {return false}
    if lhs.acquiredItemsProto != rhs.acquiredItemsProto {return false}
    if lhs.passcode != rhs.passcode {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_RedeemPasscodeResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "NOT_AVAILABLE"),
    3: .same(proto: "OVER_INVENTORY_LIMIT"),
    4: .same(proto: "ALREADY_REDEEMED"),
  ]
}

extension POGOProtos_Networking_Responses_RedeemPasscodeResponse.AcquiredItem: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Networking_Responses_RedeemPasscodeResponse.protoMessageName + ".AcquiredItem"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "item"),
    2: .same(proto: "count"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.item)
      case 2: try decoder.decodeSingularInt64Field(value: &self.count)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.item.isEmpty {
      try visitor.visitSingularStringField(value: self.item, fieldNumber: 1)
    }
    if self.count != 0 {
      try visitor.visitSingularInt64Field(value: self.count, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_RedeemPasscodeResponse.AcquiredItem, rhs: POGOProtos_Networking_Responses_RedeemPasscodeResponse.AcquiredItem) -> Bool {
    if lhs.item != rhs.item {return false}
    if lhs.count != rhs.count {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_AddNewPoiResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AddNewPoiResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .same(proto: "message"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.status)
      case 2: try decoder.decodeRepeatedStringField(value: &self.message)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    if !self.message.isEmpty {
      try visitor.visitRepeatedStringField(value: self.message, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_AddNewPoiResponse, rhs: POGOProtos_Networking_Responses_AddNewPoiResponse) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.message != rhs.message {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_AddNewPoiResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "FAILURE"),
    3: .same(proto: "INTERNAL_ERROR"),
    4: .same(proto: "TOO_MANY_RECENT_SUBMISSIONS"),
    5: .same(proto: "INVALID_INPUT"),
  ]
}

extension POGOProtos_Networking_Responses_ProxySocialActionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProxySocialActionResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .standard(proto: "assigned_host"),
    3: .same(proto: "payload"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.status)
      case 2: try decoder.decodeSingularStringField(value: &self.assignedHost)
      case 3: try decoder.decodeSingularBytesField(value: &self.payload)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    if !self.assignedHost.isEmpty {
      try visitor.visitSingularStringField(value: self.assignedHost, fieldNumber: 2)
    }
    if !self.payload.isEmpty {
      try visitor.visitSingularBytesField(value: self.payload, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_ProxySocialActionResponse, rhs: POGOProtos_Networking_Responses_ProxySocialActionResponse) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.assignedHost != rhs.assignedHost {return false}
    if lhs.payload != rhs.payload {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_ProxySocialActionResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "COMPLETED"),
    2: .same(proto: "COMPLETED_AND_REASSIGNED"),
    3: .same(proto: "ACTION_NOT_FOUND"),
    4: .same(proto: "ASSIGNMENT_ERROR"),
    5: .same(proto: "PROXY_UNAUTHORIZED_ERROR"),
    6: .same(proto: "INTERNAL_ERROR"),
    7: .same(proto: "BAD_REQUEST"),
    8: .same(proto: "ACCESS_DENIED"),
    9: .same(proto: "TIMEOUT_ERROR"),
    10: .same(proto: "RATE_LIMITED"),
  ]
}

extension POGOProtos_Networking_Responses_GetAvailableSubmissionsResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GetAvailableSubmissionsResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "submissions_left"),
    2: .standard(proto: "min_player_level"),
    3: .standard(proto: "has_valid_email"),
    4: .standard(proto: "is_feature_enabled"),
    5: .standard(proto: "time_window_for_submissions_limit_ms"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.submissionsLeft)
      case 2: try decoder.decodeSingularInt32Field(value: &self.minPlayerLevel)
      case 3: try decoder.decodeSingularBoolField(value: &self.hasValidEmail_p)
      case 4: try decoder.decodeSingularBoolField(value: &self.isFeatureEnabled)
      case 5: try decoder.decodeSingularInt32Field(value: &self.timeWindowForSubmissionsLimitMs)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.submissionsLeft != 0 {
      try visitor.visitSingularInt32Field(value: self.submissionsLeft, fieldNumber: 1)
    }
    if self.minPlayerLevel != 0 {
      try visitor.visitSingularInt32Field(value: self.minPlayerLevel, fieldNumber: 2)
    }
    if self.hasValidEmail_p != false {
      try visitor.visitSingularBoolField(value: self.hasValidEmail_p, fieldNumber: 3)
    }
    if self.isFeatureEnabled != false {
      try visitor.visitSingularBoolField(value: self.isFeatureEnabled, fieldNumber: 4)
    }
    if self.timeWindowForSubmissionsLimitMs != 0 {
      try visitor.visitSingularInt32Field(value: self.timeWindowForSubmissionsLimitMs, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_GetAvailableSubmissionsResponse, rhs: POGOProtos_Networking_Responses_GetAvailableSubmissionsResponse) -> Bool {
    if lhs.submissionsLeft != rhs.submissionsLeft {return false}
    if lhs.minPlayerLevel != rhs.minPlayerLevel {return false}
    if lhs.hasValidEmail_p != rhs.hasValidEmail_p {return false}
    if lhs.isFeatureEnabled != rhs.isFeatureEnabled {return false}
    if lhs.timeWindowForSubmissionsLimitMs != rhs.timeWindowForSubmissionsLimitMs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_PushNotificationRegistryResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".PushNotificationRegistryResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.result)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .unset {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_PushNotificationRegistryResponse, rhs: POGOProtos_Networking_Responses_PushNotificationRegistryResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_PushNotificationRegistryResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "NO_CHANGE"),
  ]
}

extension POGOProtos_Networking_Responses_AddLoginActionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AddLoginActionResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "success"),
    2: .standard(proto: "login_detail"),
    3: .same(proto: "status"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self.success)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.loginDetail)
      case 3: try decoder.decodeSingularEnumField(value: &self.status)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.success != false {
      try visitor.visitSingularBoolField(value: self.success, fieldNumber: 1)
    }
    if !self.loginDetail.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.loginDetail, fieldNumber: 2)
    }
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_AddLoginActionResponse, rhs: POGOProtos_Networking_Responses_AddLoginActionResponse) -> Bool {
    if lhs.success != rhs.success {return false}
    if lhs.loginDetail != rhs.loginDetail {return false}
    if lhs.status != rhs.status {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_AddLoginActionResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "AUTH_FAILURE"),
    2: .same(proto: "LOGIN_TAKEN"),
  ]
}

extension POGOProtos_Networking_Responses_RemoveLoginActionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RemoveLoginActionResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "success"),
    2: .standard(proto: "login_detail"),
    3: .same(proto: "status"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self.success)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.loginDetail)
      case 3: try decoder.decodeSingularEnumField(value: &self.status)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.success != false {
      try visitor.visitSingularBoolField(value: self.success, fieldNumber: 1)
    }
    if !self.loginDetail.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.loginDetail, fieldNumber: 2)
    }
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_RemoveLoginActionResponse, rhs: POGOProtos_Networking_Responses_RemoveLoginActionResponse) -> Bool {
    if lhs.success != rhs.success {return false}
    if lhs.loginDetail != rhs.loginDetail {return false}
    if lhs.status != rhs.status {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_RemoveLoginActionResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "LOGIN_NOT_REMOVABLE"),
  ]
}

extension POGOProtos_Networking_Responses_SubmitNewPoiResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SubmitNewPoiResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.status)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_SubmitNewPoiResponse, rhs: POGOProtos_Networking_Responses_SubmitNewPoiResponse) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_SubmitNewPoiResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "FAILURE"),
    3: .same(proto: "INTERNAL_ERROR"),
    4: .same(proto: "TOO_MANY_RECENT_SUBMISSIONS"),
    5: .same(proto: "INVALID_INPUT"),
    6: .same(proto: "MINOR"),
    7: .same(proto: "NOT_AVAILABLE"),
  ]
}

extension POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UploadPoiPhotoByUrlResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.status)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse, rhs: POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse) -> Bool {
    if lhs.status != rhs.status {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_UploadPoiPhotoByUrlResponse.Result: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "FEATURE_DISABLED"),
    3: .same(proto: "ALREADY_UPLOADED"),
    4: .same(proto: "IMAGE_NOT_FOUND"),
    5: .same(proto: "IMAGE_TOO_BIG"),
    6: .same(proto: "IMAGE_NOT_SERVABLE"),
    7: .same(proto: "PORTAL_NOT_FOUND"),
  ]
}

extension POGOProtos_Networking_Responses_PingResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".PingResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "user_info"),
    2: .standard(proto: "server_info"),
    3: .standard(proto: "random_response_bytes"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.userInfo)
      case 2: try decoder.decodeSingularStringField(value: &self.serverInfo)
      case 3: try decoder.decodeSingularStringField(value: &self.randomResponseBytes)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.userInfo.isEmpty {
      try visitor.visitSingularStringField(value: self.userInfo, fieldNumber: 1)
    }
    if !self.serverInfo.isEmpty {
      try visitor.visitSingularStringField(value: self.serverInfo, fieldNumber: 2)
    }
    if !self.randomResponseBytes.isEmpty {
      try visitor.visitSingularStringField(value: self.randomResponseBytes, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_PingResponse, rhs: POGOProtos_Networking_Responses_PingResponse) -> Bool {
    if lhs.userInfo != rhs.userInfo {return false}
    if lhs.serverInfo != rhs.serverInfo {return false}
    if lhs.randomResponseBytes != rhs.randomResponseBytes {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_ReplaceLoginActionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ReplaceLoginActionResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "success"),
    2: .standard(proto: "login_detail"),
    3: .same(proto: "status"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self.success)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.loginDetail)
      case 3: try decoder.decodeSingularEnumField(value: &self.status)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.success != false {
      try visitor.visitSingularBoolField(value: self.success, fieldNumber: 1)
    }
    if !self.loginDetail.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.loginDetail, fieldNumber: 2)
    }
    if self.status != .unset {
      try visitor.visitSingularEnumField(value: self.status, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Responses_ReplaceLoginActionResponse, rhs: POGOProtos_Networking_Responses_ReplaceLoginActionResponse) -> Bool {
    if lhs.success != rhs.success {return false}
    if lhs.loginDetail != rhs.loginDetail {return false}
    if lhs.status != rhs.status {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_ReplaceLoginActionResponse.Status: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "AUTH_FAILURE"),
    2: .same(proto: "LOGIN_TAKEN"),
    3: .same(proto: "LOGIN_ALREADY_HAVE"),
    4: .same(proto: "LOGIN_NOT_REPLACEABLE"),
  ]
}
