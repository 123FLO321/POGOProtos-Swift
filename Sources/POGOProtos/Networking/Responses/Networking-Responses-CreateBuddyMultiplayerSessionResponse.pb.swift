// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/CreateBuddyMultiplayerSessionResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var plfeSessionID: String = String()

  public var arbeJoinToken: Data = Data()

  public var generationTimestamp: Int64 = 0

  public var maxPlayers: Int32 = 0

  public var result: POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse.Result = .createSuccess

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Result: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case createSuccess // = 0
    case createBuddyNotSet // = 1
    case createBuddyNotFound // = 2
    case createBadBuddy // = 3
    case createBuddyV2NotEnabled // = 4
    case createPlayerLevelTooLow // = 5
    case reateUnknownError // = 6
    case createU13NoPermission // = 7
    case UNRECOGNIZED(Int)

    public init() {
      self = .createSuccess
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .createSuccess
      case 1: self = .createBuddyNotSet
      case 2: self = .createBuddyNotFound
      case 3: self = .createBadBuddy
      case 4: self = .createBuddyV2NotEnabled
      case 5: self = .createPlayerLevelTooLow
      case 6: self = .reateUnknownError
      case 7: self = .createU13NoPermission
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .createSuccess: return 0
      case .createBuddyNotSet: return 1
      case .createBuddyNotFound: return 2
      case .createBadBuddy: return 3
      case .createBuddyV2NotEnabled: return 4
      case .createPlayerLevelTooLow: return 5
      case .reateUnknownError: return 6
      case .createU13NoPermission: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse.Result] = [
    .createSuccess,
    .createBuddyNotSet,
    .createBuddyNotFound,
    .createBadBuddy,
    .createBuddyV2NotEnabled,
    .createPlayerLevelTooLow,
    .reateUnknownError,
    .createU13NoPermission,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CreateBuddyMultiplayerSessionResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "plfe_session_id"),
    2: .standard(proto: "arbe_join_token"),
    3: .standard(proto: "generation_timestamp"),
    4: .standard(proto: "max_players"),
    5: .same(proto: "result"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.plfeSessionID) }()
      case 2: try { try decoder.decodeSingularBytesField(value: &self.arbeJoinToken) }()
      case 3: try { try decoder.decodeSingularInt64Field(value: &self.generationTimestamp) }()
      case 4: try { try decoder.decodeSingularInt32Field(value: &self.maxPlayers) }()
      case 5: try { try decoder.decodeSingularEnumField(value: &self.result) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.plfeSessionID.isEmpty {
      try visitor.visitSingularStringField(value: self.plfeSessionID, fieldNumber: 1)
    }
    if !self.arbeJoinToken.isEmpty {
      try visitor.visitSingularBytesField(value: self.arbeJoinToken, fieldNumber: 2)
    }
    if self.generationTimestamp != 0 {
      try visitor.visitSingularInt64Field(value: self.generationTimestamp, fieldNumber: 3)
    }
    if self.maxPlayers != 0 {
      try visitor.visitSingularInt32Field(value: self.maxPlayers, fieldNumber: 4)
    }
    if self.result != .createSuccess {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse, rhs: POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse) -> Bool {
    if lhs.plfeSessionID != rhs.plfeSessionID {return false}
    if lhs.arbeJoinToken != rhs.arbeJoinToken {return false}
    if lhs.generationTimestamp != rhs.generationTimestamp {return false}
    if lhs.maxPlayers != rhs.maxPlayers {return false}
    if lhs.result != rhs.result {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_CreateBuddyMultiplayerSessionResponse.Result: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "CREATE_SUCCESS"),
    1: .same(proto: "CREATE_BUDDY_NOT_SET"),
    2: .same(proto: "CREATE_BUDDY_NOT_FOUND"),
    3: .same(proto: "CREATE_BAD_BUDDY"),
    4: .same(proto: "CREATE_BUDDY_V2_NOT_ENABLED"),
    5: .same(proto: "CREATE_PLAYER_LEVEL_TOO_LOW"),
    6: .same(proto: "REATE_UNKNOWN_ERROR"),
    7: .same(proto: "CREATE_U13_NO_PERMISSION"),
  ]
}
