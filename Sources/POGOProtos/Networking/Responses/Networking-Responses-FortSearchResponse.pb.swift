// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Responses/FortSearchResponse.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Responses_FortSearchResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var result: POGOProtos_Networking_Responses_FortSearchResponse.Result = .noResultSet

  public var itemsAwarded: [POGOProtos_Inventory_Item_ItemAward] = []

  public var gemsAwarded: Int32 = 0

  public var pokemonDataEgg: POGOProtos_Data_PokemonData {
    get {return _pokemonDataEgg ?? POGOProtos_Data_PokemonData()}
    set {_pokemonDataEgg = newValue}
  }
  /// Returns true if `pokemonDataEgg` has been explicitly set.
  public var hasPokemonDataEgg: Bool {return self._pokemonDataEgg != nil}
  /// Clears the value of `pokemonDataEgg`. Subsequent reads from it will return its default value.
  public mutating func clearPokemonDataEgg() {self._pokemonDataEgg = nil}

  public var experienceAwarded: Int32 = 0

  public var cooldownCompleteTimestampMs: Int64 = 0

  public var chainHackSequenceNumber: Int32 = 0

  public var awardedGymBadge: POGOProtos_Data_Badge_AwardedGymBadge {
    get {return _awardedGymBadge ?? POGOProtos_Data_Badge_AwardedGymBadge()}
    set {_awardedGymBadge = newValue}
  }
  /// Returns true if `awardedGymBadge` has been explicitly set.
  public var hasAwardedGymBadge: Bool {return self._awardedGymBadge != nil}
  /// Clears the value of `awardedGymBadge`. Subsequent reads from it will return its default value.
  public mutating func clearAwardedGymBadge() {self._awardedGymBadge = nil}

  public var loot: POGOProtos_Inventory_Loot {
    get {return _loot ?? POGOProtos_Inventory_Loot()}
    set {_loot = newValue}
  }
  /// Returns true if `loot` has been explicitly set.
  public var hasLoot: Bool {return self._loot != nil}
  /// Clears the value of `loot`. Subsequent reads from it will return its default value.
  public mutating func clearLoot() {self._loot = nil}

  public var bonusLoot: POGOProtos_Inventory_Loot {
    get {return _bonusLoot ?? POGOProtos_Inventory_Loot()}
    set {_bonusLoot = newValue}
  }
  /// Returns true if `bonusLoot` has been explicitly set.
  public var hasBonusLoot: Bool {return self._bonusLoot != nil}
  /// Clears the value of `bonusLoot`. Subsequent reads from it will return its default value.
  public mutating func clearBonusLoot() {self._bonusLoot = nil}

  public var raidTickets: Int32 = 0

  public var teamBonusLoot: POGOProtos_Inventory_Loot {
    get {return _teamBonusLoot ?? POGOProtos_Inventory_Loot()}
    set {_teamBonusLoot = newValue}
  }
  /// Returns true if `teamBonusLoot` has been explicitly set.
  public var hasTeamBonusLoot: Bool {return self._teamBonusLoot != nil}
  /// Clears the value of `teamBonusLoot`. Subsequent reads from it will return its default value.
  public mutating func clearTeamBonusLoot() {self._teamBonusLoot = nil}

  public var fortID: String = String()

  public var challengeQuest: POGOProtos_Data_Quests_ClientQuest {
    get {return _challengeQuest ?? POGOProtos_Data_Quests_ClientQuest()}
    set {_challengeQuest = newValue}
  }
  /// Returns true if `challengeQuest` has been explicitly set.
  public var hasChallengeQuest: Bool {return self._challengeQuest != nil}
  /// Clears the value of `challengeQuest`. Subsequent reads from it will return its default value.
  public mutating func clearChallengeQuest() {self._challengeQuest = nil}

  public var giftBox: POGOProtos_Data_Gift_GiftBox {
    get {return _giftBox ?? POGOProtos_Data_Gift_GiftBox()}
    set {_giftBox = newValue}
  }
  /// Returns true if `giftBox` has been explicitly set.
  public var hasGiftBox: Bool {return self._giftBox != nil}
  /// Clears the value of `giftBox`. Subsequent reads from it will return its default value.
  public mutating func clearGiftBox() {self._giftBox = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum Result: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case noResultSet // = 0
    case success // = 1
    case outOfRange // = 2
    case inCooldownPeriod // = 3
    case inventoryFull // = 4
    case exceededDailyLimit // = 5
    case poiInaccessible // = 6
    case UNRECOGNIZED(Int)

    public init() {
      self = .noResultSet
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .noResultSet
      case 1: self = .success
      case 2: self = .outOfRange
      case 3: self = .inCooldownPeriod
      case 4: self = .inventoryFull
      case 5: self = .exceededDailyLimit
      case 6: self = .poiInaccessible
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .noResultSet: return 0
      case .success: return 1
      case .outOfRange: return 2
      case .inCooldownPeriod: return 3
      case .inventoryFull: return 4
      case .exceededDailyLimit: return 5
      case .poiInaccessible: return 6
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  fileprivate var _pokemonDataEgg: POGOProtos_Data_PokemonData? = nil
  fileprivate var _awardedGymBadge: POGOProtos_Data_Badge_AwardedGymBadge? = nil
  fileprivate var _loot: POGOProtos_Inventory_Loot? = nil
  fileprivate var _bonusLoot: POGOProtos_Inventory_Loot? = nil
  fileprivate var _teamBonusLoot: POGOProtos_Inventory_Loot? = nil
  fileprivate var _challengeQuest: POGOProtos_Data_Quests_ClientQuest? = nil
  fileprivate var _giftBox: POGOProtos_Data_Gift_GiftBox? = nil
}

#if swift(>=4.2)

extension POGOProtos_Networking_Responses_FortSearchResponse.Result: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Responses_FortSearchResponse.Result] = [
    .noResultSet,
    .success,
    .outOfRange,
    .inCooldownPeriod,
    .inventoryFull,
    .exceededDailyLimit,
    .poiInaccessible,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Responses"

extension POGOProtos_Networking_Responses_FortSearchResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".FortSearchResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "result"),
    2: .standard(proto: "items_awarded"),
    3: .standard(proto: "gems_awarded"),
    4: .standard(proto: "pokemon_data_egg"),
    5: .standard(proto: "experience_awarded"),
    6: .standard(proto: "cooldown_complete_timestamp_ms"),
    7: .standard(proto: "chain_hack_sequence_number"),
    8: .standard(proto: "awarded_gym_badge"),
    9: .same(proto: "loot"),
    10: .standard(proto: "bonus_loot"),
    11: .standard(proto: "raid_tickets"),
    12: .standard(proto: "team_bonus_loot"),
    13: .standard(proto: "fort_id"),
    14: .standard(proto: "challenge_quest"),
    15: .standard(proto: "gift_box"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.result)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.itemsAwarded)
      case 3: try decoder.decodeSingularInt32Field(value: &self.gemsAwarded)
      case 4: try decoder.decodeSingularMessageField(value: &self._pokemonDataEgg)
      case 5: try decoder.decodeSingularInt32Field(value: &self.experienceAwarded)
      case 6: try decoder.decodeSingularInt64Field(value: &self.cooldownCompleteTimestampMs)
      case 7: try decoder.decodeSingularInt32Field(value: &self.chainHackSequenceNumber)
      case 8: try decoder.decodeSingularMessageField(value: &self._awardedGymBadge)
      case 9: try decoder.decodeSingularMessageField(value: &self._loot)
      case 10: try decoder.decodeSingularMessageField(value: &self._bonusLoot)
      case 11: try decoder.decodeSingularInt32Field(value: &self.raidTickets)
      case 12: try decoder.decodeSingularMessageField(value: &self._teamBonusLoot)
      case 13: try decoder.decodeSingularStringField(value: &self.fortID)
      case 14: try decoder.decodeSingularMessageField(value: &self._challengeQuest)
      case 15: try decoder.decodeSingularMessageField(value: &self._giftBox)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.result != .noResultSet {
      try visitor.visitSingularEnumField(value: self.result, fieldNumber: 1)
    }
    if !self.itemsAwarded.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.itemsAwarded, fieldNumber: 2)
    }
    if self.gemsAwarded != 0 {
      try visitor.visitSingularInt32Field(value: self.gemsAwarded, fieldNumber: 3)
    }
    if let v = self._pokemonDataEgg {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if self.experienceAwarded != 0 {
      try visitor.visitSingularInt32Field(value: self.experienceAwarded, fieldNumber: 5)
    }
    if self.cooldownCompleteTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.cooldownCompleteTimestampMs, fieldNumber: 6)
    }
    if self.chainHackSequenceNumber != 0 {
      try visitor.visitSingularInt32Field(value: self.chainHackSequenceNumber, fieldNumber: 7)
    }
    if let v = self._awardedGymBadge {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    }
    if let v = self._loot {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
    }
    if let v = self._bonusLoot {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
    }
    if self.raidTickets != 0 {
      try visitor.visitSingularInt32Field(value: self.raidTickets, fieldNumber: 11)
    }
    if let v = self._teamBonusLoot {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
    }
    if !self.fortID.isEmpty {
      try visitor.visitSingularStringField(value: self.fortID, fieldNumber: 13)
    }
    if let v = self._challengeQuest {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
    }
    if let v = self._giftBox {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Responses_FortSearchResponse, rhs: POGOProtos_Networking_Responses_FortSearchResponse) -> Bool {
    if lhs.result != rhs.result {return false}
    if lhs.itemsAwarded != rhs.itemsAwarded {return false}
    if lhs.gemsAwarded != rhs.gemsAwarded {return false}
    if lhs._pokemonDataEgg != rhs._pokemonDataEgg {return false}
    if lhs.experienceAwarded != rhs.experienceAwarded {return false}
    if lhs.cooldownCompleteTimestampMs != rhs.cooldownCompleteTimestampMs {return false}
    if lhs.chainHackSequenceNumber != rhs.chainHackSequenceNumber {return false}
    if lhs._awardedGymBadge != rhs._awardedGymBadge {return false}
    if lhs._loot != rhs._loot {return false}
    if lhs._bonusLoot != rhs._bonusLoot {return false}
    if lhs.raidTickets != rhs.raidTickets {return false}
    if lhs._teamBonusLoot != rhs._teamBonusLoot {return false}
    if lhs.fortID != rhs.fortID {return false}
    if lhs._challengeQuest != rhs._challengeQuest {return false}
    if lhs._giftBox != rhs._giftBox {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Responses_FortSearchResponse.Result: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NO_RESULT_SET"),
    1: .same(proto: "SUCCESS"),
    2: .same(proto: "OUT_OF_RANGE"),
    3: .same(proto: "IN_COOLDOWN_PERIOD"),
    4: .same(proto: "INVENTORY_FULL"),
    5: .same(proto: "EXCEEDED_DAILY_LIMIT"),
    6: .same(proto: "POI_INACCESSIBLE"),
  ]
}
