// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/Messages/AttackRaidBattleMessage.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Requests_Messages_AttackRaidBattleMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var gymID: String {
    get {return _storage._gymID}
    set {_uniqueStorage()._gymID = newValue}
  }

  var battleID: String {
    get {return _storage._battleID}
    set {_uniqueStorage()._battleID = newValue}
  }

  var attackerActions: [POGOProtos_Data_Battle_BattleAction] {
    get {return _storage._attackerActions}
    set {_uniqueStorage()._attackerActions = newValue}
  }

  var lastRetrievedAction: POGOProtos_Data_Battle_BattleAction {
    get {return _storage._lastRetrievedAction ?? POGOProtos_Data_Battle_BattleAction()}
    set {_uniqueStorage()._lastRetrievedAction = newValue}
  }
  /// Returns true if `lastRetrievedAction` has been explicitly set.
  var hasLastRetrievedAction: Bool {return _storage._lastRetrievedAction != nil}
  /// Clears the value of `lastRetrievedAction`. Subsequent reads from it will return its default value.
  mutating func clearLastRetrievedAction() {_uniqueStorage()._lastRetrievedAction = nil}

  var timestampMs: Int64 {
    get {return _storage._timestampMs}
    set {_uniqueStorage()._timestampMs = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Requests.Messages"

extension POGOProtos_Networking_Requests_Messages_AttackRaidBattleMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".AttackRaidBattleMessage"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "gym_id"),
    2: .standard(proto: "battle_id"),
    3: .standard(proto: "attacker_actions"),
    4: .standard(proto: "last_retrieved_action"),
    5: .standard(proto: "timestamp_ms"),
  ]

  fileprivate class _StorageClass {
    var _gymID: String = String()
    var _battleID: String = String()
    var _attackerActions: [POGOProtos_Data_Battle_BattleAction] = []
    var _lastRetrievedAction: POGOProtos_Data_Battle_BattleAction? = nil
    var _timestampMs: Int64 = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _gymID = source._gymID
      _battleID = source._battleID
      _attackerActions = source._attackerActions
      _lastRetrievedAction = source._lastRetrievedAction
      _timestampMs = source._timestampMs
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._gymID)
        case 2: try decoder.decodeSingularStringField(value: &_storage._battleID)
        case 3: try decoder.decodeRepeatedMessageField(value: &_storage._attackerActions)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._lastRetrievedAction)
        case 5: try decoder.decodeSingularInt64Field(value: &_storage._timestampMs)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._gymID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._gymID, fieldNumber: 1)
      }
      if !_storage._battleID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._battleID, fieldNumber: 2)
      }
      if !_storage._attackerActions.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._attackerActions, fieldNumber: 3)
      }
      if let v = _storage._lastRetrievedAction {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if _storage._timestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._timestampMs, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Requests_Messages_AttackRaidBattleMessage, rhs: POGOProtos_Networking_Requests_Messages_AttackRaidBattleMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._gymID != rhs_storage._gymID {return false}
        if _storage._battleID != rhs_storage._battleID {return false}
        if _storage._attackerActions != rhs_storage._attackerActions {return false}
        if _storage._lastRetrievedAction != rhs_storage._lastRetrievedAction {return false}
        if _storage._timestampMs != rhs_storage._timestampMs {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
