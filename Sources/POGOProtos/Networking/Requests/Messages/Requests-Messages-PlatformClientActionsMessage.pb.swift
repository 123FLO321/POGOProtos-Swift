// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/Messages/PlatformClientActionsMessage.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var apnToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken {
    get {return _storage._apnToken ?? POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken()}
    set {_uniqueStorage()._apnToken = newValue}
  }
  /// Returns true if `apnToken` has been explicitly set.
  public var hasApnToken: Bool {return _storage._apnToken != nil}
  /// Clears the value of `apnToken`. Subsequent reads from it will return its default value.
  public mutating func clearApnToken() {_uniqueStorage()._apnToken = nil}

  public var gcmToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken {
    get {return _storage._gcmToken ?? POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken()}
    set {_uniqueStorage()._gcmToken = newValue}
  }
  /// Returns true if `gcmToken` has been explicitly set.
  public var hasGcmToken: Bool {return _storage._gcmToken != nil}
  /// Clears the value of `gcmToken`. Subsequent reads from it will return its default value.
  public mutating func clearGcmToken() {_uniqueStorage()._gcmToken = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct ApnToken {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var registrationID: String = String()

    public var bundleIdentifier: String = String()

    public var payloadByteSize: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct GcmToken {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var registrationID: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Networking_Requests_Messages_UpdateNotificationStatusMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var notificationIds: [String] = []

  public var createTimestampMs: [Int64] = []

  public var state: POGOProtos_Enums_NotificationState = .unsetState

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_OptOutPushNotificationCategoryMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var categories: [String] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_RedeemPasscodeMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var passcode: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_AddNewPoiMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var longDescription: String {
    get {return _storage._longDescription}
    set {_uniqueStorage()._longDescription = newValue}
  }

  public var imageGsFilePath: String {
    get {return _storage._imageGsFilePath}
    set {_uniqueStorage()._imageGsFilePath = newValue}
  }

  public var latE6: Int32 {
    get {return _storage._latE6}
    set {_uniqueStorage()._latE6 = newValue}
  }

  public var lngE6: Int32 {
    get {return _storage._lngE6}
    set {_uniqueStorage()._lngE6 = newValue}
  }

  public var imageServingURL: String {
    get {return _storage._imageServingURL}
    set {_uniqueStorage()._imageServingURL = newValue}
  }

  public var userID: String {
    get {return _storage._userID}
    set {_uniqueStorage()._userID = newValue}
  }

  public var playerLanguage: String {
    get {return _storage._playerLanguage}
    set {_uniqueStorage()._playerLanguage = newValue}
  }

  public var gameUniqueID: String {
    get {return _storage._gameUniqueID}
    set {_uniqueStorage()._gameUniqueID = newValue}
  }

  public var appID: String {
    get {return _storage._appID}
    set {_uniqueStorage()._appID = newValue}
  }

  public var playerReputation: POGOProtos_Data_Player_PlayerReputation {
    get {return _storage._playerReputation ?? POGOProtos_Data_Player_PlayerReputation()}
    set {_uniqueStorage()._playerReputation = newValue}
  }
  /// Returns true if `playerReputation` has been explicitly set.
  public var hasPlayerReputation: Bool {return _storage._playerReputation != nil}
  /// Clears the value of `playerReputation`. Subsequent reads from it will return its default value.
  public mutating func clearPlayerReputation() {_uniqueStorage()._playerReputation = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Networking_Requests_Messages_ProxySocialActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var action: UInt32 = 0

  public var host: String = String()

  public var payload: Data = SwiftProtobuf.Internal.emptyData

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_ProxySocialSideChannelActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var action: UInt32 = 0

  public var host: String = String()

  public var payload: Data = SwiftProtobuf.Internal.emptyData

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_GetAvailableSubmissionsMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_PushNotificationRegistryMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var apnToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken {
    get {return _storage._apnToken ?? POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken()}
    set {_uniqueStorage()._apnToken = newValue}
  }
  /// Returns true if `apnToken` has been explicitly set.
  public var hasApnToken: Bool {return _storage._apnToken != nil}
  /// Clears the value of `apnToken`. Subsequent reads from it will return its default value.
  public mutating func clearApnToken() {_uniqueStorage()._apnToken = nil}

  public var gcmToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken {
    get {return _storage._gcmToken ?? POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken()}
    set {_uniqueStorage()._gcmToken = newValue}
  }
  /// Returns true if `gcmToken` has been explicitly set.
  public var hasGcmToken: Bool {return _storage._gcmToken != nil}
  /// Clears the value of `gcmToken`. Subsequent reads from it will return its default value.
  public mutating func clearGcmToken() {_uniqueStorage()._gcmToken = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Networking_Requests_Messages_AddLoginActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var identityProvider: POGOProtos_Enums_IdentityProvider = .unsetIdentityProvider

  public var innerMessage: Data = SwiftProtobuf.Internal.emptyData

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_RemoveLoginActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var identityProvider: POGOProtos_Enums_IdentityProvider = .unsetIdentityProvider

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_SubmitNewPoiMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var title: String = String()

  public var longDescription: String = String()

  public var latE6: Int32 = 0

  public var lngE6: Int32 = 0

  public var supportingStatement: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_UploadPoiPhotoByUrlMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var requestID: String = String()

  public var imageURL: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_PingMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var responseSizeBytes: Int32 = 0

  public var randomRequestBytes: String = String()

  public var useCacheForRandomRequestBytes: Bool = false

  public var returnValue: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_ReplaceLoginActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var existingIdentityProvider: POGOProtos_Enums_IdentityProvider {
    get {return _storage._existingIdentityProvider}
    set {_uniqueStorage()._existingIdentityProvider = newValue}
  }

  public var newLogin: POGOProtos_Networking_Requests_Messages_AddLoginActionMessage {
    get {return _storage._newLogin ?? POGOProtos_Networking_Requests_Messages_AddLoginActionMessage()}
    set {_uniqueStorage()._newLogin = newValue}
  }
  /// Returns true if `newLogin` has been explicitly set.
  public var hasNewLogin: Bool {return _storage._newLogin != nil}
  /// Clears the value of `newLogin`. Subsequent reads from it will return its default value.
  public mutating func clearNewLogin() {_uniqueStorage()._newLogin = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Networking_Requests_Messages_ListLoginActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_GetWebTokenActionMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var clientID: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_SubmitPoiImageMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var poiID: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct POGOProtos_Networking_Requests_Messages_SubmitPoiLocationUpdateMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var poiID: String {
    get {return _storage._poiID}
    set {_uniqueStorage()._poiID = newValue}
  }

  public var location: POGOProtos_Data_Route_RouteCheckpoint.LocationE6 {
    get {return _storage._location ?? POGOProtos_Data_Route_RouteCheckpoint.LocationE6()}
    set {_uniqueStorage()._location = newValue}
  }
  /// Returns true if `location` has been explicitly set.
  public var hasLocation: Bool {return _storage._location != nil}
  /// Clears the value of `location`. Subsequent reads from it will return its default value.
  public mutating func clearLocation() {_uniqueStorage()._location = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var poiID: String = String()

  public var invalidReason: POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage.PoiInvalidReason = .invalidReasonUnspecified

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum PoiInvalidReason: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case invalidReasonUnspecified // = 0
    case noPedestrianAccess // = 1
    case obstructsEmergencyServices // = 2
    case privateResidentialProperty // = 3
    case school // = 4
    case permanentlyRemoved // = 5
    case duplicate // = 6
    case UNRECOGNIZED(Int)

    public init() {
      self = .invalidReasonUnspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .invalidReasonUnspecified
      case 1: self = .noPedestrianAccess
      case 2: self = .obstructsEmergencyServices
      case 3: self = .privateResidentialProperty
      case 4: self = .school
      case 5: self = .permanentlyRemoved
      case 6: self = .duplicate
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .invalidReasonUnspecified: return 0
      case .noPedestrianAccess: return 1
      case .obstructsEmergencyServices: return 2
      case .privateResidentialProperty: return 3
      case .school: return 4
      case .permanentlyRemoved: return 5
      case .duplicate: return 6
      case .UNRECOGNIZED(let i): return i; default: print("[ERROR] \(#file) is not up to date!"); return 0
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage.PoiInvalidReason: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage.PoiInvalidReason] = [
    .invalidReasonUnspecified,
    .noPedestrianAccess,
    .obstructsEmergencyServices,
    .privateResidentialProperty,
    .school,
    .permanentlyRemoved,
    .duplicate,
  ]
}

#endif  // swift(>=4.2)

public struct POGOProtos_Networking_Requests_Messages_SubmitPoiTextMetadataUpdateMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var poiID: String = String()

  public var title: String = String()

  public var description_p: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Requests.Messages"

extension POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RegisterPushNotificationMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "apn_token"),
    2: .standard(proto: "gcm_token"),
  ]

  fileprivate class _StorageClass {
    var _apnToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken? = nil
    var _gcmToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _apnToken = source._apnToken
      _gcmToken = source._gcmToken
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._apnToken)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._gcmToken)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._apnToken {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._gcmToken {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage, rhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._apnToken != rhs_storage._apnToken {return false}
        if _storage._gcmToken != rhs_storage._gcmToken {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.protoMessageName + ".ApnToken"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "registration_id"),
    2: .standard(proto: "bundle_identifier"),
    3: .standard(proto: "payload_byte_size"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.registrationID)
      case 2: try decoder.decodeSingularStringField(value: &self.bundleIdentifier)
      case 3: try decoder.decodeSingularInt32Field(value: &self.payloadByteSize)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.registrationID.isEmpty {
      try visitor.visitSingularStringField(value: self.registrationID, fieldNumber: 1)
    }
    if !self.bundleIdentifier.isEmpty {
      try visitor.visitSingularStringField(value: self.bundleIdentifier, fieldNumber: 2)
    }
    if self.payloadByteSize != 0 {
      try visitor.visitSingularInt32Field(value: self.payloadByteSize, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken, rhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken) -> Bool {
    if lhs.registrationID != rhs.registrationID {return false}
    if lhs.bundleIdentifier != rhs.bundleIdentifier {return false}
    if lhs.payloadByteSize != rhs.payloadByteSize {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.protoMessageName + ".GcmToken"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "registration_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.registrationID)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.registrationID.isEmpty {
      try visitor.visitSingularStringField(value: self.registrationID, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken, rhs: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken) -> Bool {
    if lhs.registrationID != rhs.registrationID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_UpdateNotificationStatusMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".UpdateNotificationStatusMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "notification_ids"),
    2: .standard(proto: "create_timestamp_ms"),
    3: .same(proto: "state"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedStringField(value: &self.notificationIds)
      case 2: try decoder.decodeRepeatedInt64Field(value: &self.createTimestampMs)
      case 3: try decoder.decodeSingularEnumField(value: &self.state)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.notificationIds.isEmpty {
      try visitor.visitRepeatedStringField(value: self.notificationIds, fieldNumber: 1)
    }
    if !self.createTimestampMs.isEmpty {
      try visitor.visitPackedInt64Field(value: self.createTimestampMs, fieldNumber: 2)
    }
    if self.state != .unsetState {
      try visitor.visitSingularEnumField(value: self.state, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_UpdateNotificationStatusMessage, rhs: POGOProtos_Networking_Requests_Messages_UpdateNotificationStatusMessage) -> Bool {
    if lhs.notificationIds != rhs.notificationIds {return false}
    if lhs.createTimestampMs != rhs.createTimestampMs {return false}
    if lhs.state != rhs.state {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_OptOutPushNotificationCategoryMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".OptOutPushNotificationCategoryMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "categories"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedStringField(value: &self.categories)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.categories.isEmpty {
      try visitor.visitRepeatedStringField(value: self.categories, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_OptOutPushNotificationCategoryMessage, rhs: POGOProtos_Networking_Requests_Messages_OptOutPushNotificationCategoryMessage) -> Bool {
    if lhs.categories != rhs.categories {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_RedeemPasscodeMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RedeemPasscodeMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "passcode"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.passcode)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.passcode.isEmpty {
      try visitor.visitSingularStringField(value: self.passcode, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_RedeemPasscodeMessage, rhs: POGOProtos_Networking_Requests_Messages_RedeemPasscodeMessage) -> Bool {
    if lhs.passcode != rhs.passcode {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_AddNewPoiMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".AddNewPoiMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "title"),
    2: .standard(proto: "long_description"),
    3: .standard(proto: "image_gs_file_path"),
    4: .standard(proto: "lat_e6"),
    5: .standard(proto: "lng_e6"),
    6: .standard(proto: "image_serving_url"),
    7: .standard(proto: "user_id"),
    8: .standard(proto: "player_language"),
    9: .standard(proto: "game_unique_id"),
    10: .standard(proto: "app_id"),
    11: .standard(proto: "player_reputation"),
  ]

  fileprivate class _StorageClass {
    var _title: String = String()
    var _longDescription: String = String()
    var _imageGsFilePath: String = String()
    var _latE6: Int32 = 0
    var _lngE6: Int32 = 0
    var _imageServingURL: String = String()
    var _userID: String = String()
    var _playerLanguage: String = String()
    var _gameUniqueID: String = String()
    var _appID: String = String()
    var _playerReputation: POGOProtos_Data_Player_PlayerReputation? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _title = source._title
      _longDescription = source._longDescription
      _imageGsFilePath = source._imageGsFilePath
      _latE6 = source._latE6
      _lngE6 = source._lngE6
      _imageServingURL = source._imageServingURL
      _userID = source._userID
      _playerLanguage = source._playerLanguage
      _gameUniqueID = source._gameUniqueID
      _appID = source._appID
      _playerReputation = source._playerReputation
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._title)
        case 2: try decoder.decodeSingularStringField(value: &_storage._longDescription)
        case 3: try decoder.decodeSingularStringField(value: &_storage._imageGsFilePath)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._latE6)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._lngE6)
        case 6: try decoder.decodeSingularStringField(value: &_storage._imageServingURL)
        case 7: try decoder.decodeSingularStringField(value: &_storage._userID)
        case 8: try decoder.decodeSingularStringField(value: &_storage._playerLanguage)
        case 9: try decoder.decodeSingularStringField(value: &_storage._gameUniqueID)
        case 10: try decoder.decodeSingularStringField(value: &_storage._appID)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._playerReputation)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 1)
      }
      if !_storage._longDescription.isEmpty {
        try visitor.visitSingularStringField(value: _storage._longDescription, fieldNumber: 2)
      }
      if !_storage._imageGsFilePath.isEmpty {
        try visitor.visitSingularStringField(value: _storage._imageGsFilePath, fieldNumber: 3)
      }
      if _storage._latE6 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._latE6, fieldNumber: 4)
      }
      if _storage._lngE6 != 0 {
        try visitor.visitSingularInt32Field(value: _storage._lngE6, fieldNumber: 5)
      }
      if !_storage._imageServingURL.isEmpty {
        try visitor.visitSingularStringField(value: _storage._imageServingURL, fieldNumber: 6)
      }
      if !_storage._userID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._userID, fieldNumber: 7)
      }
      if !_storage._playerLanguage.isEmpty {
        try visitor.visitSingularStringField(value: _storage._playerLanguage, fieldNumber: 8)
      }
      if !_storage._gameUniqueID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._gameUniqueID, fieldNumber: 9)
      }
      if !_storage._appID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._appID, fieldNumber: 10)
      }
      if let v = _storage._playerReputation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_AddNewPoiMessage, rhs: POGOProtos_Networking_Requests_Messages_AddNewPoiMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._title != rhs_storage._title {return false}
        if _storage._longDescription != rhs_storage._longDescription {return false}
        if _storage._imageGsFilePath != rhs_storage._imageGsFilePath {return false}
        if _storage._latE6 != rhs_storage._latE6 {return false}
        if _storage._lngE6 != rhs_storage._lngE6 {return false}
        if _storage._imageServingURL != rhs_storage._imageServingURL {return false}
        if _storage._userID != rhs_storage._userID {return false}
        if _storage._playerLanguage != rhs_storage._playerLanguage {return false}
        if _storage._gameUniqueID != rhs_storage._gameUniqueID {return false}
        if _storage._appID != rhs_storage._appID {return false}
        if _storage._playerReputation != rhs_storage._playerReputation {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_ProxySocialActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProxySocialActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "action"),
    2: .same(proto: "host"),
    3: .same(proto: "payload"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularUInt32Field(value: &self.action)
      case 2: try decoder.decodeSingularStringField(value: &self.host)
      case 3: try decoder.decodeSingularBytesField(value: &self.payload)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.action != 0 {
      try visitor.visitSingularUInt32Field(value: self.action, fieldNumber: 1)
    }
    if !self.host.isEmpty {
      try visitor.visitSingularStringField(value: self.host, fieldNumber: 2)
    }
    if !self.payload.isEmpty {
      try visitor.visitSingularBytesField(value: self.payload, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_ProxySocialActionMessage, rhs: POGOProtos_Networking_Requests_Messages_ProxySocialActionMessage) -> Bool {
    if lhs.action != rhs.action {return false}
    if lhs.host != rhs.host {return false}
    if lhs.payload != rhs.payload {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_ProxySocialSideChannelActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ProxySocialSideChannelActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "action"),
    2: .same(proto: "host"),
    3: .same(proto: "payload"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularUInt32Field(value: &self.action)
      case 2: try decoder.decodeSingularStringField(value: &self.host)
      case 3: try decoder.decodeSingularBytesField(value: &self.payload)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.action != 0 {
      try visitor.visitSingularUInt32Field(value: self.action, fieldNumber: 1)
    }
    if !self.host.isEmpty {
      try visitor.visitSingularStringField(value: self.host, fieldNumber: 2)
    }
    if !self.payload.isEmpty {
      try visitor.visitSingularBytesField(value: self.payload, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_ProxySocialSideChannelActionMessage, rhs: POGOProtos_Networking_Requests_Messages_ProxySocialSideChannelActionMessage) -> Bool {
    if lhs.action != rhs.action {return false}
    if lhs.host != rhs.host {return false}
    if lhs.payload != rhs.payload {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_GetAvailableSubmissionsMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetAvailableSubmissionsMessage"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_GetAvailableSubmissionsMessage, rhs: POGOProtos_Networking_Requests_Messages_GetAvailableSubmissionsMessage) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_PushNotificationRegistryMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PushNotificationRegistryMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "apn_token"),
    2: .standard(proto: "gcm_token"),
  ]

  fileprivate class _StorageClass {
    var _apnToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.ApnToken? = nil
    var _gcmToken: POGOProtos_Networking_Requests_Messages_RegisterPushNotificationMessage.GcmToken? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _apnToken = source._apnToken
      _gcmToken = source._gcmToken
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._apnToken)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._gcmToken)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._apnToken {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._gcmToken {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_PushNotificationRegistryMessage, rhs: POGOProtos_Networking_Requests_Messages_PushNotificationRegistryMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._apnToken != rhs_storage._apnToken {return false}
        if _storage._gcmToken != rhs_storage._gcmToken {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_AddLoginActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".AddLoginActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "identity_provider"),
    2: .standard(proto: "inner_message"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.identityProvider)
      case 2: try decoder.decodeSingularBytesField(value: &self.innerMessage)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.identityProvider != .unsetIdentityProvider {
      try visitor.visitSingularEnumField(value: self.identityProvider, fieldNumber: 1)
    }
    if !self.innerMessage.isEmpty {
      try visitor.visitSingularBytesField(value: self.innerMessage, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_AddLoginActionMessage, rhs: POGOProtos_Networking_Requests_Messages_AddLoginActionMessage) -> Bool {
    if lhs.identityProvider != rhs.identityProvider {return false}
    if lhs.innerMessage != rhs.innerMessage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_RemoveLoginActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RemoveLoginActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "identity_provider"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.identityProvider)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.identityProvider != .unsetIdentityProvider {
      try visitor.visitSingularEnumField(value: self.identityProvider, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_RemoveLoginActionMessage, rhs: POGOProtos_Networking_Requests_Messages_RemoveLoginActionMessage) -> Bool {
    if lhs.identityProvider != rhs.identityProvider {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_SubmitNewPoiMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitNewPoiMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "title"),
    2: .standard(proto: "long_description"),
    4: .standard(proto: "lat_e6"),
    5: .standard(proto: "lng_e6"),
    14: .standard(proto: "supporting_statement"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.title)
      case 2: try decoder.decodeSingularStringField(value: &self.longDescription)
      case 4: try decoder.decodeSingularInt32Field(value: &self.latE6)
      case 5: try decoder.decodeSingularInt32Field(value: &self.lngE6)
      case 14: try decoder.decodeSingularStringField(value: &self.supportingStatement)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 1)
    }
    if !self.longDescription.isEmpty {
      try visitor.visitSingularStringField(value: self.longDescription, fieldNumber: 2)
    }
    if self.latE6 != 0 {
      try visitor.visitSingularInt32Field(value: self.latE6, fieldNumber: 4)
    }
    if self.lngE6 != 0 {
      try visitor.visitSingularInt32Field(value: self.lngE6, fieldNumber: 5)
    }
    if !self.supportingStatement.isEmpty {
      try visitor.visitSingularStringField(value: self.supportingStatement, fieldNumber: 14)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_SubmitNewPoiMessage, rhs: POGOProtos_Networking_Requests_Messages_SubmitNewPoiMessage) -> Bool {
    if lhs.title != rhs.title {return false}
    if lhs.longDescription != rhs.longDescription {return false}
    if lhs.latE6 != rhs.latE6 {return false}
    if lhs.lngE6 != rhs.lngE6 {return false}
    if lhs.supportingStatement != rhs.supportingStatement {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_UploadPoiPhotoByUrlMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".UploadPoiPhotoByUrlMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "request_id"),
    2: .standard(proto: "image_url"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.requestID)
      case 2: try decoder.decodeSingularStringField(value: &self.imageURL)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.requestID.isEmpty {
      try visitor.visitSingularStringField(value: self.requestID, fieldNumber: 1)
    }
    if !self.imageURL.isEmpty {
      try visitor.visitSingularStringField(value: self.imageURL, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_UploadPoiPhotoByUrlMessage, rhs: POGOProtos_Networking_Requests_Messages_UploadPoiPhotoByUrlMessage) -> Bool {
    if lhs.requestID != rhs.requestID {return false}
    if lhs.imageURL != rhs.imageURL {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_PingMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PingMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "response_size_bytes"),
    2: .standard(proto: "random_request_bytes"),
    3: .standard(proto: "use_cache_for_random_request_bytes"),
    4: .standard(proto: "return_value"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.responseSizeBytes)
      case 2: try decoder.decodeSingularStringField(value: &self.randomRequestBytes)
      case 3: try decoder.decodeSingularBoolField(value: &self.useCacheForRandomRequestBytes)
      case 4: try decoder.decodeSingularStringField(value: &self.returnValue)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.responseSizeBytes != 0 {
      try visitor.visitSingularInt32Field(value: self.responseSizeBytes, fieldNumber: 1)
    }
    if !self.randomRequestBytes.isEmpty {
      try visitor.visitSingularStringField(value: self.randomRequestBytes, fieldNumber: 2)
    }
    if self.useCacheForRandomRequestBytes != false {
      try visitor.visitSingularBoolField(value: self.useCacheForRandomRequestBytes, fieldNumber: 3)
    }
    if !self.returnValue.isEmpty {
      try visitor.visitSingularStringField(value: self.returnValue, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_PingMessage, rhs: POGOProtos_Networking_Requests_Messages_PingMessage) -> Bool {
    if lhs.responseSizeBytes != rhs.responseSizeBytes {return false}
    if lhs.randomRequestBytes != rhs.randomRequestBytes {return false}
    if lhs.useCacheForRandomRequestBytes != rhs.useCacheForRandomRequestBytes {return false}
    if lhs.returnValue != rhs.returnValue {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_ReplaceLoginActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ReplaceLoginActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "existing_identity_provider"),
    2: .standard(proto: "new_login"),
  ]

  fileprivate class _StorageClass {
    var _existingIdentityProvider: POGOProtos_Enums_IdentityProvider = .unsetIdentityProvider
    var _newLogin: POGOProtos_Networking_Requests_Messages_AddLoginActionMessage? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _existingIdentityProvider = source._existingIdentityProvider
      _newLogin = source._newLogin
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._existingIdentityProvider)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._newLogin)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._existingIdentityProvider != .unsetIdentityProvider {
        try visitor.visitSingularEnumField(value: _storage._existingIdentityProvider, fieldNumber: 1)
      }
      if let v = _storage._newLogin {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_ReplaceLoginActionMessage, rhs: POGOProtos_Networking_Requests_Messages_ReplaceLoginActionMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._existingIdentityProvider != rhs_storage._existingIdentityProvider {return false}
        if _storage._newLogin != rhs_storage._newLogin {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_ListLoginActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ListLoginActionMessage"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_ListLoginActionMessage, rhs: POGOProtos_Networking_Requests_Messages_ListLoginActionMessage) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_GetWebTokenActionMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetWebTokenActionMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "client_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.clientID)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.clientID.isEmpty {
      try visitor.visitSingularStringField(value: self.clientID, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_GetWebTokenActionMessage, rhs: POGOProtos_Networking_Requests_Messages_GetWebTokenActionMessage) -> Bool {
    if lhs.clientID != rhs.clientID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_SubmitPoiImageMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitPoiImageMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "poi_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.poiID)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.poiID.isEmpty {
      try visitor.visitSingularStringField(value: self.poiID, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_SubmitPoiImageMessage, rhs: POGOProtos_Networking_Requests_Messages_SubmitPoiImageMessage) -> Bool {
    if lhs.poiID != rhs.poiID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_SubmitPoiLocationUpdateMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitPoiLocationUpdateMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "poi_id"),
    2: .same(proto: "location"),
  ]

  fileprivate class _StorageClass {
    var _poiID: String = String()
    var _location: POGOProtos_Data_Route_RouteCheckpoint.LocationE6? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _poiID = source._poiID
      _location = source._location
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._poiID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._location)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._poiID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._poiID, fieldNumber: 1)
      }
      if let v = _storage._location {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_SubmitPoiLocationUpdateMessage, rhs: POGOProtos_Networking_Requests_Messages_SubmitPoiLocationUpdateMessage) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._poiID != rhs_storage._poiID {return false}
        if _storage._location != rhs_storage._location {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitPoiTakedownRequestMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "poi_id"),
    2: .standard(proto: "invalid_reason"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.poiID)
      case 2: try decoder.decodeSingularEnumField(value: &self.invalidReason)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.poiID.isEmpty {
      try visitor.visitSingularStringField(value: self.poiID, fieldNumber: 1)
    }
    if self.invalidReason != .invalidReasonUnspecified {
      try visitor.visitSingularEnumField(value: self.invalidReason, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage, rhs: POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage) -> Bool {
    if lhs.poiID != rhs.poiID {return false}
    if lhs.invalidReason != rhs.invalidReason {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_SubmitPoiTakedownRequestMessage.PoiInvalidReason: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "INVALID_REASON_UNSPECIFIED"),
    1: .same(proto: "NO_PEDESTRIAN_ACCESS"),
    2: .same(proto: "OBSTRUCTS_EMERGENCY_SERVICES"),
    3: .same(proto: "PRIVATE_RESIDENTIAL_PROPERTY"),
    4: .same(proto: "SCHOOL"),
    5: .same(proto: "PERMANENTLY_REMOVED"),
    6: .same(proto: "DUPLICATE"),
  ]
}

extension POGOProtos_Networking_Requests_Messages_SubmitPoiTextMetadataUpdateMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitPoiTextMetadataUpdateMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "poi_id"),
    2: .same(proto: "title"),
    3: .same(proto: "description"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.poiID)
      case 2: try decoder.decodeSingularStringField(value: &self.title)
      case 3: try decoder.decodeSingularStringField(value: &self.description_p)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.poiID.isEmpty {
      try visitor.visitSingularStringField(value: self.poiID, fieldNumber: 1)
    }
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 2)
    }
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_SubmitPoiTextMetadataUpdateMessage, rhs: POGOProtos_Networking_Requests_Messages_SubmitPoiTextMetadataUpdateMessage) -> Bool {
    if lhs.poiID != rhs.poiID {return false}
    if lhs.title != rhs.title {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
