// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/Messages/InvasionBattleUpdateMessage.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var incidentLookup: POGOProtos_Map_Fort_IncidentLookup {
    get {return _incidentLookup ?? POGOProtos_Map_Fort_IncidentLookup()}
    set {_incidentLookup = newValue}
  }
  /// Returns true if `incidentLookup` has been explicitly set.
  public var hasIncidentLookup: Bool {return self._incidentLookup != nil}
  /// Clears the value of `incidentLookup`. Subsequent reads from it will return its default value.
  public mutating func clearIncidentLookup() {self._incidentLookup = nil}

  public var step: Int32 = 0

  public var healthUpdate: [POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.PokemonStaminaUpdate] = []

  public var completeBattle: Bool = false

  public var updateType: POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.UpdateType = .pokemonHealth

  public var lobbyJoinTimeMs: Int64 = 0

  public var combatQuestUpdate: POGOProtos_Data_Combat_CombatQuestUpdate {
    get {return _combatQuestUpdate ?? POGOProtos_Data_Combat_CombatQuestUpdate()}
    set {_combatQuestUpdate = newValue}
  }
  /// Returns true if `combatQuestUpdate` has been explicitly set.
  public var hasCombatQuestUpdate: Bool {return self._combatQuestUpdate != nil}
  /// Clears the value of `combatQuestUpdate`. Subsequent reads from it will return its default value.
  public mutating func clearCombatQuestUpdate() {self._combatQuestUpdate = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum UpdateType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case pokemonHealth // = 0
    case winBattle // = 1
    case loseBattle // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .pokemonHealth
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .pokemonHealth
      case 1: self = .winBattle
      case 2: self = .loseBattle
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .pokemonHealth: return 0
      case .winBattle: return 1
      case .loseBattle: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public struct PokemonStaminaUpdate {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var pokemonID: UInt64 = 0

    public var updatedStamina: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _incidentLookup: POGOProtos_Map_Fort_IncidentLookup? = nil
  fileprivate var _combatQuestUpdate: POGOProtos_Data_Combat_CombatQuestUpdate? = nil
}

#if swift(>=4.2)

extension POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.UpdateType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.UpdateType] = [
    .pokemonHealth,
    .winBattle,
    .loseBattle,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Requests.Messages"

extension POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".InvasionBattleUpdateMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "incident_lookup"),
    2: .same(proto: "step"),
    3: .standard(proto: "health_update"),
    4: .standard(proto: "complete_battle"),
    5: .standard(proto: "update_type"),
    6: .standard(proto: "lobby_join_time_ms"),
    7: .standard(proto: "combat_quest_update"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._incidentLookup) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.step) }()
      case 3: try { try decoder.decodeRepeatedMessageField(value: &self.healthUpdate) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.completeBattle) }()
      case 5: try { try decoder.decodeSingularEnumField(value: &self.updateType) }()
      case 6: try { try decoder.decodeSingularInt64Field(value: &self.lobbyJoinTimeMs) }()
      case 7: try { try decoder.decodeSingularMessageField(value: &self._combatQuestUpdate) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._incidentLookup {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if self.step != 0 {
      try visitor.visitSingularInt32Field(value: self.step, fieldNumber: 2)
    }
    if !self.healthUpdate.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.healthUpdate, fieldNumber: 3)
    }
    if self.completeBattle != false {
      try visitor.visitSingularBoolField(value: self.completeBattle, fieldNumber: 4)
    }
    if self.updateType != .pokemonHealth {
      try visitor.visitSingularEnumField(value: self.updateType, fieldNumber: 5)
    }
    if self.lobbyJoinTimeMs != 0 {
      try visitor.visitSingularInt64Field(value: self.lobbyJoinTimeMs, fieldNumber: 6)
    }
    if let v = self._combatQuestUpdate {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage, rhs: POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage) -> Bool {
    if lhs._incidentLookup != rhs._incidentLookup {return false}
    if lhs.step != rhs.step {return false}
    if lhs.healthUpdate != rhs.healthUpdate {return false}
    if lhs.completeBattle != rhs.completeBattle {return false}
    if lhs.updateType != rhs.updateType {return false}
    if lhs.lobbyJoinTimeMs != rhs.lobbyJoinTimeMs {return false}
    if lhs._combatQuestUpdate != rhs._combatQuestUpdate {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.UpdateType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "POKEMON_HEALTH"),
    1: .same(proto: "WIN_BATTLE"),
    2: .same(proto: "LOSE_BATTLE"),
  ]
}

extension POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.PokemonStaminaUpdate: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.protoMessageName + ".PokemonStaminaUpdate"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
    2: .standard(proto: "updated_stamina"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularFixed64Field(value: &self.pokemonID) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.updatedStamina) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.pokemonID != 0 {
      try visitor.visitSingularFixed64Field(value: self.pokemonID, fieldNumber: 1)
    }
    if self.updatedStamina != 0 {
      try visitor.visitSingularInt32Field(value: self.updatedStamina, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.PokemonStaminaUpdate, rhs: POGOProtos_Networking_Requests_Messages_InvasionBattleUpdateMessage.PokemonStaminaUpdate) -> Bool {
    if lhs.pokemonID != rhs.pokemonID {return false}
    if lhs.updatedStamina != rhs.updatedStamina {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
