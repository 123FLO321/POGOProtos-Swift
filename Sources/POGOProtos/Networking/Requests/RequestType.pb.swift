// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/RequestType.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum POGOProtos_Networking_Requests_RequestType: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case methodUnset // = 0
  case getPlayer // = 2
  case getHoloholoInventory // = 4
  case downloadSettings // = 5
  case downloadItemTemplates // = 6
  case downloadRemoteConfigVersion // = 7
  case registerBackgroundDevice // = 8
  case getPlayerDay // = 9
  case acknowledgePunishment // = 10
  case fortSearch // = 101
  case encounter // = 102
  case catchPokemon // = 103
  case fortDetails // = 104
  case getMapObjects // = 106
  case fortDeployPokemon // = 110
  case fortRecallPokemon // = 111
  case releasePokemon // = 112
  case useItemPotion // = 113
  case useItemCapture // = 114
  case useItemFlee // = 115
  case useItemRevive // = 116
  case getPlayerProfile // = 121
  case evolvePokemon // = 125
  case getHatchedEggs // = 126
  case encounterTutorialComplete // = 127
  case levelUpRewards // = 128
  case checkAwardedBadges // = 129
  case recycleInventoryItem // = 137
  case collectDailyBonus // = 138
  case useItemXpBoost // = 139
  case useItemEggIncubator // = 140
  case useIncense // = 141
  case getIncensePokemon // = 142
  case incenseEncounter // = 143
  case addFortModifier // = 144
  case diskEncounter // = 145
  case upgradePokemon // = 147
  case setFavoritePokemon // = 148
  case nicknamePokemon // = 149
  case equipBadge // = 150
  case setContactSettings // = 151
  case setBuddyPokemon // = 152
  case getBuddyWalked // = 153
  case useItemEncounter // = 154
  case gymDeploy // = 155
  case gymGetInfo // = 156
  case gymStartSession // = 157
  case gymBattleAttack // = 158
  case joinLobby // = 159
  case leaveLobby // = 160
  case setLobbyVisibility // = 161
  case setLobbyPokemon // = 162
  case getRaidDetails // = 163
  case gymFeedPokemon // = 164
  case startRaidBattle // = 165
  case attackRaid // = 166
  case awardPokecoin // = 167
  case useItemStardustBoost // = 168
  case getAssetDigest // = 300
  case getDownloadUrls // = 301
  case claimCodename // = 403
  case setAvatar // = 404
  case setPlayerTeam // = 405
  case markTutorialComplete // = 406
  case updatePerformanceMetrics // = 407
  case checkChallenge // = 600
  case verifyChallenge // = 601
  case echo // = 666
  case sfidaRegistration // = 800
  case sfidaActionLog // = 801
  case sfidaCertification // = 802
  case sfidaUpdate // = 803
  case sfidaAction // = 804
  case sfidaDowser // = 805
  case sfidaCapture // = 806
  case listAvatarCustomizations // = 807
  case setAvatarItemAsViewed // = 808
  case getInbox // = 809
  case listGymBadges // = 811
  case getGymBadgeDetails // = 812
  case useItemMoveReroll // = 813
  case useItemRareCandy // = 814
  case awardFreeRaidTicket // = 815
  case fetchAllNews // = 816
  case markReadNewsArticle // = 817
  case getPlayerDisplayInfo // = 818
  case getNewQuests // = 900
  case getQuestDetails // = 901
  case completeQuest // = 902
  case removeQuest // = 903
  case questEncounter // = 904
  case completeQuestStampCard // = 905
  case sendGift // = 950
  case openGift // = 951
  case giftDetails // = 952
  case deleteGift // = 953
  case savePlayerSnapshot // = 954
  case getFriendshipMilestoneRewards // = 955
  case checkSendGift // = 956
  case setFriendNickname // = 957
  case deleteGiftFromInventory // = 958
  case saveSocialPlayerSettings // = 959
  case shareExRaidPass // = 960
  case checkShareExRaidPass // = 961
  case declineSharedExRaidPass // = 962
  case openTrading // = 970
  case updateTrading // = 971
  case confirmTrading // = 972
  case cancelTrading // = 973
  case getTrading // = 974
  case UNRECOGNIZED(Int)

  init() {
    self = .methodUnset
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .methodUnset
    case 2: self = .getPlayer
    case 4: self = .getHoloholoInventory
    case 5: self = .downloadSettings
    case 6: self = .downloadItemTemplates
    case 7: self = .downloadRemoteConfigVersion
    case 8: self = .registerBackgroundDevice
    case 9: self = .getPlayerDay
    case 10: self = .acknowledgePunishment
    case 101: self = .fortSearch
    case 102: self = .encounter
    case 103: self = .catchPokemon
    case 104: self = .fortDetails
    case 106: self = .getMapObjects
    case 110: self = .fortDeployPokemon
    case 111: self = .fortRecallPokemon
    case 112: self = .releasePokemon
    case 113: self = .useItemPotion
    case 114: self = .useItemCapture
    case 115: self = .useItemFlee
    case 116: self = .useItemRevive
    case 121: self = .getPlayerProfile
    case 125: self = .evolvePokemon
    case 126: self = .getHatchedEggs
    case 127: self = .encounterTutorialComplete
    case 128: self = .levelUpRewards
    case 129: self = .checkAwardedBadges
    case 137: self = .recycleInventoryItem
    case 138: self = .collectDailyBonus
    case 139: self = .useItemXpBoost
    case 140: self = .useItemEggIncubator
    case 141: self = .useIncense
    case 142: self = .getIncensePokemon
    case 143: self = .incenseEncounter
    case 144: self = .addFortModifier
    case 145: self = .diskEncounter
    case 147: self = .upgradePokemon
    case 148: self = .setFavoritePokemon
    case 149: self = .nicknamePokemon
    case 150: self = .equipBadge
    case 151: self = .setContactSettings
    case 152: self = .setBuddyPokemon
    case 153: self = .getBuddyWalked
    case 154: self = .useItemEncounter
    case 155: self = .gymDeploy
    case 156: self = .gymGetInfo
    case 157: self = .gymStartSession
    case 158: self = .gymBattleAttack
    case 159: self = .joinLobby
    case 160: self = .leaveLobby
    case 161: self = .setLobbyVisibility
    case 162: self = .setLobbyPokemon
    case 163: self = .getRaidDetails
    case 164: self = .gymFeedPokemon
    case 165: self = .startRaidBattle
    case 166: self = .attackRaid
    case 167: self = .awardPokecoin
    case 168: self = .useItemStardustBoost
    case 300: self = .getAssetDigest
    case 301: self = .getDownloadUrls
    case 403: self = .claimCodename
    case 404: self = .setAvatar
    case 405: self = .setPlayerTeam
    case 406: self = .markTutorialComplete
    case 407: self = .updatePerformanceMetrics
    case 600: self = .checkChallenge
    case 601: self = .verifyChallenge
    case 666: self = .echo
    case 800: self = .sfidaRegistration
    case 801: self = .sfidaActionLog
    case 802: self = .sfidaCertification
    case 803: self = .sfidaUpdate
    case 804: self = .sfidaAction
    case 805: self = .sfidaDowser
    case 806: self = .sfidaCapture
    case 807: self = .listAvatarCustomizations
    case 808: self = .setAvatarItemAsViewed
    case 809: self = .getInbox
    case 811: self = .listGymBadges
    case 812: self = .getGymBadgeDetails
    case 813: self = .useItemMoveReroll
    case 814: self = .useItemRareCandy
    case 815: self = .awardFreeRaidTicket
    case 816: self = .fetchAllNews
    case 817: self = .markReadNewsArticle
    case 818: self = .getPlayerDisplayInfo
    case 900: self = .getNewQuests
    case 901: self = .getQuestDetails
    case 902: self = .completeQuest
    case 903: self = .removeQuest
    case 904: self = .questEncounter
    case 905: self = .completeQuestStampCard
    case 950: self = .sendGift
    case 951: self = .openGift
    case 952: self = .giftDetails
    case 953: self = .deleteGift
    case 954: self = .savePlayerSnapshot
    case 955: self = .getFriendshipMilestoneRewards
    case 956: self = .checkSendGift
    case 957: self = .setFriendNickname
    case 958: self = .deleteGiftFromInventory
    case 959: self = .saveSocialPlayerSettings
    case 960: self = .shareExRaidPass
    case 961: self = .checkShareExRaidPass
    case 962: self = .declineSharedExRaidPass
    case 970: self = .openTrading
    case 971: self = .updateTrading
    case 972: self = .confirmTrading
    case 973: self = .cancelTrading
    case 974: self = .getTrading
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .methodUnset: return 0
    case .getPlayer: return 2
    case .getHoloholoInventory: return 4
    case .downloadSettings: return 5
    case .downloadItemTemplates: return 6
    case .downloadRemoteConfigVersion: return 7
    case .registerBackgroundDevice: return 8
    case .getPlayerDay: return 9
    case .acknowledgePunishment: return 10
    case .fortSearch: return 101
    case .encounter: return 102
    case .catchPokemon: return 103
    case .fortDetails: return 104
    case .getMapObjects: return 106
    case .fortDeployPokemon: return 110
    case .fortRecallPokemon: return 111
    case .releasePokemon: return 112
    case .useItemPotion: return 113
    case .useItemCapture: return 114
    case .useItemFlee: return 115
    case .useItemRevive: return 116
    case .getPlayerProfile: return 121
    case .evolvePokemon: return 125
    case .getHatchedEggs: return 126
    case .encounterTutorialComplete: return 127
    case .levelUpRewards: return 128
    case .checkAwardedBadges: return 129
    case .recycleInventoryItem: return 137
    case .collectDailyBonus: return 138
    case .useItemXpBoost: return 139
    case .useItemEggIncubator: return 140
    case .useIncense: return 141
    case .getIncensePokemon: return 142
    case .incenseEncounter: return 143
    case .addFortModifier: return 144
    case .diskEncounter: return 145
    case .upgradePokemon: return 147
    case .setFavoritePokemon: return 148
    case .nicknamePokemon: return 149
    case .equipBadge: return 150
    case .setContactSettings: return 151
    case .setBuddyPokemon: return 152
    case .getBuddyWalked: return 153
    case .useItemEncounter: return 154
    case .gymDeploy: return 155
    case .gymGetInfo: return 156
    case .gymStartSession: return 157
    case .gymBattleAttack: return 158
    case .joinLobby: return 159
    case .leaveLobby: return 160
    case .setLobbyVisibility: return 161
    case .setLobbyPokemon: return 162
    case .getRaidDetails: return 163
    case .gymFeedPokemon: return 164
    case .startRaidBattle: return 165
    case .attackRaid: return 166
    case .awardPokecoin: return 167
    case .useItemStardustBoost: return 168
    case .getAssetDigest: return 300
    case .getDownloadUrls: return 301
    case .claimCodename: return 403
    case .setAvatar: return 404
    case .setPlayerTeam: return 405
    case .markTutorialComplete: return 406
    case .updatePerformanceMetrics: return 407
    case .checkChallenge: return 600
    case .verifyChallenge: return 601
    case .echo: return 666
    case .sfidaRegistration: return 800
    case .sfidaActionLog: return 801
    case .sfidaCertification: return 802
    case .sfidaUpdate: return 803
    case .sfidaAction: return 804
    case .sfidaDowser: return 805
    case .sfidaCapture: return 806
    case .listAvatarCustomizations: return 807
    case .setAvatarItemAsViewed: return 808
    case .getInbox: return 809
    case .listGymBadges: return 811
    case .getGymBadgeDetails: return 812
    case .useItemMoveReroll: return 813
    case .useItemRareCandy: return 814
    case .awardFreeRaidTicket: return 815
    case .fetchAllNews: return 816
    case .markReadNewsArticle: return 817
    case .getPlayerDisplayInfo: return 818
    case .getNewQuests: return 900
    case .getQuestDetails: return 901
    case .completeQuest: return 902
    case .removeQuest: return 903
    case .questEncounter: return 904
    case .completeQuestStampCard: return 905
    case .sendGift: return 950
    case .openGift: return 951
    case .giftDetails: return 952
    case .deleteGift: return 953
    case .savePlayerSnapshot: return 954
    case .getFriendshipMilestoneRewards: return 955
    case .checkSendGift: return 956
    case .setFriendNickname: return 957
    case .deleteGiftFromInventory: return 958
    case .saveSocialPlayerSettings: return 959
    case .shareExRaidPass: return 960
    case .checkShareExRaidPass: return 961
    case .declineSharedExRaidPass: return 962
    case .openTrading: return 970
    case .updateTrading: return 971
    case .confirmTrading: return 972
    case .cancelTrading: return 973
    case .getTrading: return 974
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension POGOProtos_Networking_Requests_RequestType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Networking_Requests_RequestType] = [
    .methodUnset,
    .getPlayer,
    .getHoloholoInventory,
    .downloadSettings,
    .downloadItemTemplates,
    .downloadRemoteConfigVersion,
    .registerBackgroundDevice,
    .getPlayerDay,
    .acknowledgePunishment,
    .fortSearch,
    .encounter,
    .catchPokemon,
    .fortDetails,
    .getMapObjects,
    .fortDeployPokemon,
    .fortRecallPokemon,
    .releasePokemon,
    .useItemPotion,
    .useItemCapture,
    .useItemFlee,
    .useItemRevive,
    .getPlayerProfile,
    .evolvePokemon,
    .getHatchedEggs,
    .encounterTutorialComplete,
    .levelUpRewards,
    .checkAwardedBadges,
    .recycleInventoryItem,
    .collectDailyBonus,
    .useItemXpBoost,
    .useItemEggIncubator,
    .useIncense,
    .getIncensePokemon,
    .incenseEncounter,
    .addFortModifier,
    .diskEncounter,
    .upgradePokemon,
    .setFavoritePokemon,
    .nicknamePokemon,
    .equipBadge,
    .setContactSettings,
    .setBuddyPokemon,
    .getBuddyWalked,
    .useItemEncounter,
    .gymDeploy,
    .gymGetInfo,
    .gymStartSession,
    .gymBattleAttack,
    .joinLobby,
    .leaveLobby,
    .setLobbyVisibility,
    .setLobbyPokemon,
    .getRaidDetails,
    .gymFeedPokemon,
    .startRaidBattle,
    .attackRaid,
    .awardPokecoin,
    .useItemStardustBoost,
    .getAssetDigest,
    .getDownloadUrls,
    .claimCodename,
    .setAvatar,
    .setPlayerTeam,
    .markTutorialComplete,
    .updatePerformanceMetrics,
    .checkChallenge,
    .verifyChallenge,
    .echo,
    .sfidaRegistration,
    .sfidaActionLog,
    .sfidaCertification,
    .sfidaUpdate,
    .sfidaAction,
    .sfidaDowser,
    .sfidaCapture,
    .listAvatarCustomizations,
    .setAvatarItemAsViewed,
    .getInbox,
    .listGymBadges,
    .getGymBadgeDetails,
    .useItemMoveReroll,
    .useItemRareCandy,
    .awardFreeRaidTicket,
    .fetchAllNews,
    .markReadNewsArticle,
    .getPlayerDisplayInfo,
    .getNewQuests,
    .getQuestDetails,
    .completeQuest,
    .removeQuest,
    .questEncounter,
    .completeQuestStampCard,
    .sendGift,
    .openGift,
    .giftDetails,
    .deleteGift,
    .savePlayerSnapshot,
    .getFriendshipMilestoneRewards,
    .checkSendGift,
    .setFriendNickname,
    .deleteGiftFromInventory,
    .saveSocialPlayerSettings,
    .shareExRaidPass,
    .checkShareExRaidPass,
    .declineSharedExRaidPass,
    .openTrading,
    .updateTrading,
    .confirmTrading,
    .cancelTrading,
    .getTrading,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension POGOProtos_Networking_Requests_RequestType: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "METHOD_UNSET"),
    2: .same(proto: "GET_PLAYER"),
    4: .same(proto: "GET_HOLOHOLO_INVENTORY"),
    5: .same(proto: "DOWNLOAD_SETTINGS"),
    6: .same(proto: "DOWNLOAD_ITEM_TEMPLATES"),
    7: .same(proto: "DOWNLOAD_REMOTE_CONFIG_VERSION"),
    8: .same(proto: "REGISTER_BACKGROUND_DEVICE"),
    9: .same(proto: "GET_PLAYER_DAY"),
    10: .same(proto: "ACKNOWLEDGE_PUNISHMENT"),
    101: .same(proto: "FORT_SEARCH"),
    102: .same(proto: "ENCOUNTER"),
    103: .same(proto: "CATCH_POKEMON"),
    104: .same(proto: "FORT_DETAILS"),
    106: .same(proto: "GET_MAP_OBJECTS"),
    110: .same(proto: "FORT_DEPLOY_POKEMON"),
    111: .same(proto: "FORT_RECALL_POKEMON"),
    112: .same(proto: "RELEASE_POKEMON"),
    113: .same(proto: "USE_ITEM_POTION"),
    114: .same(proto: "USE_ITEM_CAPTURE"),
    115: .same(proto: "USE_ITEM_FLEE"),
    116: .same(proto: "USE_ITEM_REVIVE"),
    121: .same(proto: "GET_PLAYER_PROFILE"),
    125: .same(proto: "EVOLVE_POKEMON"),
    126: .same(proto: "GET_HATCHED_EGGS"),
    127: .same(proto: "ENCOUNTER_TUTORIAL_COMPLETE"),
    128: .same(proto: "LEVEL_UP_REWARDS"),
    129: .same(proto: "CHECK_AWARDED_BADGES"),
    137: .same(proto: "RECYCLE_INVENTORY_ITEM"),
    138: .same(proto: "COLLECT_DAILY_BONUS"),
    139: .same(proto: "USE_ITEM_XP_BOOST"),
    140: .same(proto: "USE_ITEM_EGG_INCUBATOR"),
    141: .same(proto: "USE_INCENSE"),
    142: .same(proto: "GET_INCENSE_POKEMON"),
    143: .same(proto: "INCENSE_ENCOUNTER"),
    144: .same(proto: "ADD_FORT_MODIFIER"),
    145: .same(proto: "DISK_ENCOUNTER"),
    147: .same(proto: "UPGRADE_POKEMON"),
    148: .same(proto: "SET_FAVORITE_POKEMON"),
    149: .same(proto: "NICKNAME_POKEMON"),
    150: .same(proto: "EQUIP_BADGE"),
    151: .same(proto: "SET_CONTACT_SETTINGS"),
    152: .same(proto: "SET_BUDDY_POKEMON"),
    153: .same(proto: "GET_BUDDY_WALKED"),
    154: .same(proto: "USE_ITEM_ENCOUNTER"),
    155: .same(proto: "GYM_DEPLOY"),
    156: .same(proto: "GYM_GET_INFO"),
    157: .same(proto: "GYM_START_SESSION"),
    158: .same(proto: "GYM_BATTLE_ATTACK"),
    159: .same(proto: "JOIN_LOBBY"),
    160: .same(proto: "LEAVE_LOBBY"),
    161: .same(proto: "SET_LOBBY_VISIBILITY"),
    162: .same(proto: "SET_LOBBY_POKEMON"),
    163: .same(proto: "GET_RAID_DETAILS"),
    164: .same(proto: "GYM_FEED_POKEMON"),
    165: .same(proto: "START_RAID_BATTLE"),
    166: .same(proto: "ATTACK_RAID"),
    167: .same(proto: "AWARD_POKECOIN"),
    168: .same(proto: "USE_ITEM_STARDUST_BOOST"),
    300: .same(proto: "GET_ASSET_DIGEST"),
    301: .same(proto: "GET_DOWNLOAD_URLS"),
    403: .same(proto: "CLAIM_CODENAME"),
    404: .same(proto: "SET_AVATAR"),
    405: .same(proto: "SET_PLAYER_TEAM"),
    406: .same(proto: "MARK_TUTORIAL_COMPLETE"),
    407: .same(proto: "UPDATE_PERFORMANCE_METRICS"),
    600: .same(proto: "CHECK_CHALLENGE"),
    601: .same(proto: "VERIFY_CHALLENGE"),
    666: .same(proto: "ECHO"),
    800: .same(proto: "SFIDA_REGISTRATION"),
    801: .same(proto: "SFIDA_ACTION_LOG"),
    802: .same(proto: "SFIDA_CERTIFICATION"),
    803: .same(proto: "SFIDA_UPDATE"),
    804: .same(proto: "SFIDA_ACTION"),
    805: .same(proto: "SFIDA_DOWSER"),
    806: .same(proto: "SFIDA_CAPTURE"),
    807: .same(proto: "LIST_AVATAR_CUSTOMIZATIONS"),
    808: .same(proto: "SET_AVATAR_ITEM_AS_VIEWED"),
    809: .same(proto: "GET_INBOX"),
    811: .same(proto: "LIST_GYM_BADGES"),
    812: .same(proto: "GET_GYM_BADGE_DETAILS"),
    813: .same(proto: "USE_ITEM_MOVE_REROLL"),
    814: .same(proto: "USE_ITEM_RARE_CANDY"),
    815: .same(proto: "AWARD_FREE_RAID_TICKET"),
    816: .same(proto: "FETCH_ALL_NEWS"),
    817: .same(proto: "MARK_READ_NEWS_ARTICLE"),
    818: .same(proto: "GET_PLAYER_DISPLAY_INFO"),
    900: .same(proto: "GET_NEW_QUESTS"),
    901: .same(proto: "GET_QUEST_DETAILS"),
    902: .same(proto: "COMPLETE_QUEST"),
    903: .same(proto: "REMOVE_QUEST"),
    904: .same(proto: "QUEST_ENCOUNTER"),
    905: .same(proto: "COMPLETE_QUEST_STAMP_CARD"),
    950: .same(proto: "SEND_GIFT"),
    951: .same(proto: "OPEN_GIFT"),
    952: .same(proto: "GIFT_DETAILS"),
    953: .same(proto: "DELETE_GIFT"),
    954: .same(proto: "SAVE_PLAYER_SNAPSHOT"),
    955: .same(proto: "GET_FRIENDSHIP_MILESTONE_REWARDS"),
    956: .same(proto: "CHECK_SEND_GIFT"),
    957: .same(proto: "SET_FRIEND_NICKNAME"),
    958: .same(proto: "DELETE_GIFT_FROM_INVENTORY"),
    959: .same(proto: "SAVE_SOCIAL_PLAYER_SETTINGS"),
    960: .same(proto: "SHARE_EX_RAID_PASS"),
    961: .same(proto: "CHECK_SHARE_EX_RAID_PASS"),
    962: .same(proto: "DECLINE_SHARED_EX_RAID_PASS"),
    970: .same(proto: "OPEN_TRADING"),
    971: .same(proto: "UPDATE_TRADING"),
    972: .same(proto: "CONFIRM_TRADING"),
    973: .same(proto: "CANCEL_TRADING"),
    974: .same(proto: "GET_TRADING"),
  ]
}
