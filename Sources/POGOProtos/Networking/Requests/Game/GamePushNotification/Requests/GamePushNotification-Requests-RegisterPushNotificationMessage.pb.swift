// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/Game/GamePushNotification/Requests/RegisterPushNotificationMessage.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var apnToken: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken {
    get {return _apnToken ?? POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken()}
    set {_apnToken = newValue}
  }
  /// Returns true if `apnToken` has been explicitly set.
  public var hasApnToken: Bool {return self._apnToken != nil}
  /// Clears the value of `apnToken`. Subsequent reads from it will return its default value.
  public mutating func clearApnToken() {self._apnToken = nil}

  public var gcmToken: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken {
    get {return _gcmToken ?? POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken()}
    set {_gcmToken = newValue}
  }
  /// Returns true if `gcmToken` has been explicitly set.
  public var hasGcmToken: Bool {return self._gcmToken != nil}
  /// Clears the value of `gcmToken`. Subsequent reads from it will return its default value.
  public mutating func clearGcmToken() {self._gcmToken = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct ApnToken {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var registrationID: String = String()

    public var bundleIdentifier: String = String()

    public var payloadByteSize: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct GcmToken {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var registrationID: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _apnToken: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken? = nil
  fileprivate var _gcmToken: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Requests.Game.GamePushNotification.Requests"

extension POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RegisterPushNotificationMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "apn_token"),
    2: .standard(proto: "gcm_token"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._apnToken) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._gcmToken) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._apnToken {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._gcmToken {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage, rhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage) -> Bool {
    if lhs._apnToken != rhs._apnToken {return false}
    if lhs._gcmToken != rhs._gcmToken {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.protoMessageName + ".ApnToken"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "registration_id"),
    2: .standard(proto: "bundle_identifier"),
    3: .standard(proto: "payload_byte_size"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.registrationID) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.bundleIdentifier) }()
      case 3: try { try decoder.decodeSingularInt32Field(value: &self.payloadByteSize) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.registrationID.isEmpty {
      try visitor.visitSingularStringField(value: self.registrationID, fieldNumber: 1)
    }
    if !self.bundleIdentifier.isEmpty {
      try visitor.visitSingularStringField(value: self.bundleIdentifier, fieldNumber: 2)
    }
    if self.payloadByteSize != 0 {
      try visitor.visitSingularInt32Field(value: self.payloadByteSize, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken, rhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.ApnToken) -> Bool {
    if lhs.registrationID != rhs.registrationID {return false}
    if lhs.bundleIdentifier != rhs.bundleIdentifier {return false}
    if lhs.payloadByteSize != rhs.payloadByteSize {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.protoMessageName + ".GcmToken"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "registration_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.registrationID) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.registrationID.isEmpty {
      try visitor.visitSingularStringField(value: self.registrationID, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken, rhs: POGOProtos_Networking_Requests_Game_GamePushNotification_Requests_RegisterPushNotificationMessage.GcmToken) -> Bool {
    if lhs.registrationID != rhs.registrationID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
