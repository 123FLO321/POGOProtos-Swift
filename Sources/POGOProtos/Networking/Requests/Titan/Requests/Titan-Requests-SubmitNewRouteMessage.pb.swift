// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Requests/Titan/Requests/SubmitNewRouteMessage.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var routeSubmissionID: String = String()

  public var title: String = String()

  public var description_p: String = String()

  ///repeated RoutePoi pois = 4;
  public var visitOrder: POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage.RouteVisitOrder = .unspecified

  public var checkpoints: [POGOProtos_Data_Route_RouteCheckpoint] = []

  public var mainImage: POGOProtos_Data_Route_RouteCheckpoint.RouteImage {
    get {return _mainImage ?? POGOProtos_Data_Route_RouteCheckpoint.RouteImage()}
    set {_mainImage = newValue}
  }
  /// Returns true if `mainImage` has been explicitly set.
  public var hasMainImage: Bool {return self._mainImage != nil}
  /// Clears the value of `mainImage`. Subsequent reads from it will return its default value.
  public mutating func clearMainImage() {self._mainImage = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum RouteVisitOrder: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unspecified // = 0
    case inOrder // = 1
    case unordered // = 2
    case reversible // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .inOrder
      case 2: self = .unordered
      case 3: self = .reversible
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .inOrder: return 1
      case .unordered: return 2
      case .reversible: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  fileprivate var _mainImage: POGOProtos_Data_Route_RouteCheckpoint.RouteImage? = nil
}

#if swift(>=4.2)

extension POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage.RouteVisitOrder: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage.RouteVisitOrder] = [
    .unspecified,
    .inOrder,
    .unordered,
    .reversible,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Requests.Titan.Requests"

extension POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SubmitNewRouteMessage"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "route_submission_id"),
    2: .same(proto: "title"),
    3: .same(proto: "description"),
    5: .standard(proto: "visit_order"),
    6: .same(proto: "checkpoints"),
    7: .standard(proto: "main_image"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.routeSubmissionID) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.title) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.description_p) }()
      case 5: try { try decoder.decodeSingularEnumField(value: &self.visitOrder) }()
      case 6: try { try decoder.decodeRepeatedMessageField(value: &self.checkpoints) }()
      case 7: try { try decoder.decodeSingularMessageField(value: &self._mainImage) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.routeSubmissionID.isEmpty {
      try visitor.visitSingularStringField(value: self.routeSubmissionID, fieldNumber: 1)
    }
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 2)
    }
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 3)
    }
    if self.visitOrder != .unspecified {
      try visitor.visitSingularEnumField(value: self.visitOrder, fieldNumber: 5)
    }
    if !self.checkpoints.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.checkpoints, fieldNumber: 6)
    }
    if let v = self._mainImage {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage, rhs: POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage) -> Bool {
    if lhs.routeSubmissionID != rhs.routeSubmissionID {return false}
    if lhs.title != rhs.title {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.visitOrder != rhs.visitOrder {return false}
    if lhs.checkpoints != rhs.checkpoints {return false}
    if lhs._mainImage != rhs._mainImage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Requests_Titan_Requests_SubmitNewRouteMessage.RouteVisitOrder: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ROUTE_VISIT_ORDER_UNSPECIFIED"),
    1: .same(proto: "IN_ORDER"),
    2: .same(proto: "UNORDERED"),
    3: .same(proto: "REVERSIBLE"),
  ]
}
