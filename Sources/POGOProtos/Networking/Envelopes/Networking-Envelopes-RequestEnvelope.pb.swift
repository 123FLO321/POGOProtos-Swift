// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Envelopes/RequestEnvelope.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Networking_Envelopes_RequestEnvelope {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var statusCode: Int32 = 0

  public var requestID: UInt64 = 0

  public var requests: [POGOProtos_Networking_Requests_Request] = []

  ///Untested maybe needs a good index order
  ///repeated SocialRequest social_requests = 5;
  public var platformRequests: [POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest] = []

  public var latitude: Double = 0

  public var longitude: Double = 0

  public var accuracy: Double = 0

  public var authInfo: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo {
    get {return _authInfo ?? POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo()}
    set {_authInfo = newValue}
  }
  /// Returns true if `authInfo` has been explicitly set.
  public var hasAuthInfo: Bool {return self._authInfo != nil}
  /// Clears the value of `authInfo`. Subsequent reads from it will return its default value.
  public mutating func clearAuthInfo() {self._authInfo = nil}

  public var authTicket: POGOProtos_Networking_Envelopes_AuthTicket {
    get {return _authTicket ?? POGOProtos_Networking_Envelopes_AuthTicket()}
    set {_authTicket = newValue}
  }
  /// Returns true if `authTicket` has been explicitly set.
  public var hasAuthTicket: Bool {return self._authTicket != nil}
  /// Clears the value of `authTicket`. Subsequent reads from it will return its default value.
  public mutating func clearAuthTicket() {self._authTicket = nil}

  public var msSinceLastLocationfix: Int64 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct AuthInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var provider: String = String()

    public var token: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT {
      get {return _token ?? POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT()}
      set {_token = newValue}
    }
    /// Returns true if `token` has been explicitly set.
    public var hasToken: Bool {return self._token != nil}
    /// Clears the value of `token`. Subsequent reads from it will return its default value.
    public mutating func clearToken() {self._token = nil}

    public var options: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions {
      get {return _options ?? POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions()}
      set {_options = newValue}
    }
    /// Returns true if `options` has been explicitly set.
    public var hasOptions: Bool {return self._options != nil}
    /// Clears the value of `options`. Subsequent reads from it will return its default value.
    public mutating func clearOptions() {self._options = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public struct JWT {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      public var contents: String = String()

      public var unknown2: Int32 = 0

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    public struct AuthOptions {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      public var preventAccountCreation: Bool = false

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public init() {}
    }

    public init() {}

    fileprivate var _token: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT? = nil
    fileprivate var _options: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions? = nil
  }

  public struct PlatformRequest {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var type: POGOProtos_Networking_Platform_PlatformRequestType = .unknownPlatformClientAction

    public var requestMessage: Data = SwiftProtobuf.Internal.emptyData

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _authInfo: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo? = nil
  fileprivate var _authTicket: POGOProtos_Networking_Envelopes_AuthTicket? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Envelopes"

extension POGOProtos_Networking_Envelopes_RequestEnvelope: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RequestEnvelope"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "status_code"),
    3: .standard(proto: "request_id"),
    4: .same(proto: "requests"),
    6: .standard(proto: "platform_requests"),
    7: .same(proto: "latitude"),
    8: .same(proto: "longitude"),
    9: .same(proto: "accuracy"),
    10: .standard(proto: "auth_info"),
    11: .standard(proto: "auth_ticket"),
    12: .standard(proto: "ms_since_last_locationfix"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.statusCode)
      case 3: try decoder.decodeSingularUInt64Field(value: &self.requestID)
      case 4: try decoder.decodeRepeatedMessageField(value: &self.requests)
      case 6: try decoder.decodeRepeatedMessageField(value: &self.platformRequests)
      case 7: try decoder.decodeSingularDoubleField(value: &self.latitude)
      case 8: try decoder.decodeSingularDoubleField(value: &self.longitude)
      case 9: try decoder.decodeSingularDoubleField(value: &self.accuracy)
      case 10: try decoder.decodeSingularMessageField(value: &self._authInfo)
      case 11: try decoder.decodeSingularMessageField(value: &self._authTicket)
      case 12: try decoder.decodeSingularInt64Field(value: &self.msSinceLastLocationfix)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.statusCode != 0 {
      try visitor.visitSingularInt32Field(value: self.statusCode, fieldNumber: 1)
    }
    if self.requestID != 0 {
      try visitor.visitSingularUInt64Field(value: self.requestID, fieldNumber: 3)
    }
    if !self.requests.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.requests, fieldNumber: 4)
    }
    if !self.platformRequests.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.platformRequests, fieldNumber: 6)
    }
    if self.latitude != 0 {
      try visitor.visitSingularDoubleField(value: self.latitude, fieldNumber: 7)
    }
    if self.longitude != 0 {
      try visitor.visitSingularDoubleField(value: self.longitude, fieldNumber: 8)
    }
    if self.accuracy != 0 {
      try visitor.visitSingularDoubleField(value: self.accuracy, fieldNumber: 9)
    }
    if let v = self._authInfo {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
    }
    if let v = self._authTicket {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
    }
    if self.msSinceLastLocationfix != 0 {
      try visitor.visitSingularInt64Field(value: self.msSinceLastLocationfix, fieldNumber: 12)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope) -> Bool {
    if lhs.statusCode != rhs.statusCode {return false}
    if lhs.requestID != rhs.requestID {return false}
    if lhs.requests != rhs.requests {return false}
    if lhs.platformRequests != rhs.platformRequests {return false}
    if lhs.latitude != rhs.latitude {return false}
    if lhs.longitude != rhs.longitude {return false}
    if lhs.accuracy != rhs.accuracy {return false}
    if lhs._authInfo != rhs._authInfo {return false}
    if lhs._authTicket != rhs._authTicket {return false}
    if lhs.msSinceLastLocationfix != rhs.msSinceLastLocationfix {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.protoMessageName + ".AuthInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "provider"),
    2: .same(proto: "token"),
    3: .same(proto: "options"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.provider)
      case 2: try decoder.decodeSingularMessageField(value: &self._token)
      case 3: try decoder.decodeSingularMessageField(value: &self._options)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.provider.isEmpty {
      try visitor.visitSingularStringField(value: self.provider, fieldNumber: 1)
    }
    if let v = self._token {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._options {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo) -> Bool {
    if lhs.provider != rhs.provider {return false}
    if lhs._token != rhs._token {return false}
    if lhs._options != rhs._options {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.protoMessageName + ".JWT"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "contents"),
    2: .same(proto: "unknown2"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.contents)
      case 2: try decoder.decodeSingularInt32Field(value: &self.unknown2)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.contents.isEmpty {
      try visitor.visitSingularStringField(value: self.contents, fieldNumber: 1)
    }
    if self.unknown2 != 0 {
      try visitor.visitSingularInt32Field(value: self.unknown2, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT) -> Bool {
    if lhs.contents != rhs.contents {return false}
    if lhs.unknown2 != rhs.unknown2 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.protoMessageName + ".AuthOptions"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "prevent_account_creation"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self.preventAccountCreation)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.preventAccountCreation != false {
      try visitor.visitSingularBoolField(value: self.preventAccountCreation, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.AuthOptions) -> Bool {
    if lhs.preventAccountCreation != rhs.preventAccountCreation {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.protoMessageName + ".PlatformRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .standard(proto: "request_message"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.type)
      case 2: try decoder.decodeSingularBytesField(value: &self.requestMessage)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.type != .unknownPlatformClientAction {
      try visitor.visitSingularEnumField(value: self.type, fieldNumber: 1)
    }
    if !self.requestMessage.isEmpty {
      try visitor.visitSingularBytesField(value: self.requestMessage, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest) -> Bool {
    if lhs.type != rhs.type {return false}
    if lhs.requestMessage != rhs.requestMessage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
