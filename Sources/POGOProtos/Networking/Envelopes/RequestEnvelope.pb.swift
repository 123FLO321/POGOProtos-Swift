// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Envelopes/RequestEnvelope.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Networking_Envelopes_RequestEnvelope {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var statusCode: Int32 {
    get {return _storage._statusCode}
    set {_uniqueStorage()._statusCode = newValue}
  }

  var requestID: UInt64 {
    get {return _storage._requestID}
    set {_uniqueStorage()._requestID = newValue}
  }

  var requests: [POGOProtos_Networking_Requests_Request] {
    get {return _storage._requests}
    set {_uniqueStorage()._requests = newValue}
  }

  var platformRequests: [POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest] {
    get {return _storage._platformRequests}
    set {_uniqueStorage()._platformRequests = newValue}
  }

  var latitude: Double {
    get {return _storage._latitude}
    set {_uniqueStorage()._latitude = newValue}
  }

  var longitude: Double {
    get {return _storage._longitude}
    set {_uniqueStorage()._longitude = newValue}
  }

  var accuracy: Double {
    get {return _storage._accuracy}
    set {_uniqueStorage()._accuracy = newValue}
  }

  var authInfo: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo {
    get {return _storage._authInfo ?? POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo()}
    set {_uniqueStorage()._authInfo = newValue}
  }
  /// Returns true if `authInfo` has been explicitly set.
  var hasAuthInfo: Bool {return _storage._authInfo != nil}
  /// Clears the value of `authInfo`. Subsequent reads from it will return its default value.
  mutating func clearAuthInfo() {_uniqueStorage()._authInfo = nil}

  var authTicket: POGOProtos_Networking_Envelopes_AuthTicket {
    get {return _storage._authTicket ?? POGOProtos_Networking_Envelopes_AuthTicket()}
    set {_uniqueStorage()._authTicket = newValue}
  }
  /// Returns true if `authTicket` has been explicitly set.
  var hasAuthTicket: Bool {return _storage._authTicket != nil}
  /// Clears the value of `authTicket`. Subsequent reads from it will return its default value.
  mutating func clearAuthTicket() {_uniqueStorage()._authTicket = nil}

  var msSinceLastLocationfix: Int64 {
    get {return _storage._msSinceLastLocationfix}
    set {_uniqueStorage()._msSinceLastLocationfix = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  struct AuthInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var provider: String {
      get {return _storage._provider}
      set {_uniqueStorage()._provider = newValue}
    }

    var token: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT {
      get {return _storage._token ?? POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT()}
      set {_uniqueStorage()._token = newValue}
    }
    /// Returns true if `token` has been explicitly set.
    var hasToken: Bool {return _storage._token != nil}
    /// Clears the value of `token`. Subsequent reads from it will return its default value.
    mutating func clearToken() {_uniqueStorage()._token = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    struct JWT {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      var contents: String = String()

      var unknown2: Int32 = 0

      var unknownFields = SwiftProtobuf.UnknownStorage()

      init() {}
    }

    init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  struct PlatformRequest {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var type: POGOProtos_Networking_Platform_PlatformRequestType = .methodUnset

    var requestMessage: Data = SwiftProtobuf.Internal.emptyData

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Networking.Envelopes"

extension POGOProtos_Networking_Envelopes_RequestEnvelope: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".RequestEnvelope"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "status_code"),
    3: .standard(proto: "request_id"),
    4: .same(proto: "requests"),
    6: .standard(proto: "platform_requests"),
    7: .same(proto: "latitude"),
    8: .same(proto: "longitude"),
    9: .same(proto: "accuracy"),
    10: .standard(proto: "auth_info"),
    11: .standard(proto: "auth_ticket"),
    12: .standard(proto: "ms_since_last_locationfix"),
  ]

  fileprivate class _StorageClass {
    var _statusCode: Int32 = 0
    var _requestID: UInt64 = 0
    var _requests: [POGOProtos_Networking_Requests_Request] = []
    var _platformRequests: [POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest] = []
    var _latitude: Double = 0
    var _longitude: Double = 0
    var _accuracy: Double = 0
    var _authInfo: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo? = nil
    var _authTicket: POGOProtos_Networking_Envelopes_AuthTicket? = nil
    var _msSinceLastLocationfix: Int64 = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _statusCode = source._statusCode
      _requestID = source._requestID
      _requests = source._requests
      _platformRequests = source._platformRequests
      _latitude = source._latitude
      _longitude = source._longitude
      _accuracy = source._accuracy
      _authInfo = source._authInfo
      _authTicket = source._authTicket
      _msSinceLastLocationfix = source._msSinceLastLocationfix
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._statusCode)
        case 3: try decoder.decodeSingularUInt64Field(value: &_storage._requestID)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._requests)
        case 6: try decoder.decodeRepeatedMessageField(value: &_storage._platformRequests)
        case 7: try decoder.decodeSingularDoubleField(value: &_storage._latitude)
        case 8: try decoder.decodeSingularDoubleField(value: &_storage._longitude)
        case 9: try decoder.decodeSingularDoubleField(value: &_storage._accuracy)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._authInfo)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._authTicket)
        case 12: try decoder.decodeSingularInt64Field(value: &_storage._msSinceLastLocationfix)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._statusCode != 0 {
        try visitor.visitSingularInt32Field(value: _storage._statusCode, fieldNumber: 1)
      }
      if _storage._requestID != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._requestID, fieldNumber: 3)
      }
      if !_storage._requests.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._requests, fieldNumber: 4)
      }
      if !_storage._platformRequests.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._platformRequests, fieldNumber: 6)
      }
      if _storage._latitude != 0 {
        try visitor.visitSingularDoubleField(value: _storage._latitude, fieldNumber: 7)
      }
      if _storage._longitude != 0 {
        try visitor.visitSingularDoubleField(value: _storage._longitude, fieldNumber: 8)
      }
      if _storage._accuracy != 0 {
        try visitor.visitSingularDoubleField(value: _storage._accuracy, fieldNumber: 9)
      }
      if let v = _storage._authInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._authTicket {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if _storage._msSinceLastLocationfix != 0 {
        try visitor.visitSingularInt64Field(value: _storage._msSinceLastLocationfix, fieldNumber: 12)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._statusCode != rhs_storage._statusCode {return false}
        if _storage._requestID != rhs_storage._requestID {return false}
        if _storage._requests != rhs_storage._requests {return false}
        if _storage._platformRequests != rhs_storage._platformRequests {return false}
        if _storage._latitude != rhs_storage._latitude {return false}
        if _storage._longitude != rhs_storage._longitude {return false}
        if _storage._accuracy != rhs_storage._accuracy {return false}
        if _storage._authInfo != rhs_storage._authInfo {return false}
        if _storage._authTicket != rhs_storage._authTicket {return false}
        if _storage._msSinceLastLocationfix != rhs_storage._msSinceLastLocationfix {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.protoMessageName + ".AuthInfo"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "provider"),
    2: .same(proto: "token"),
  ]

  fileprivate class _StorageClass {
    var _provider: String = String()
    var _token: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _provider = source._provider
      _token = source._token
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._provider)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._token)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._provider.isEmpty {
        try visitor.visitSingularStringField(value: _storage._provider, fieldNumber: 1)
      }
      if let v = _storage._token {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._provider != rhs_storage._provider {return false}
        if _storage._token != rhs_storage._token {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.protoMessageName + ".JWT"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "contents"),
    2: .same(proto: "unknown2"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.contents)
      case 2: try decoder.decodeSingularInt32Field(value: &self.unknown2)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.contents.isEmpty {
      try visitor.visitSingularStringField(value: self.contents, fieldNumber: 1)
    }
    if self.unknown2 != 0 {
      try visitor.visitSingularInt32Field(value: self.unknown2, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.AuthInfo.JWT) -> Bool {
    if lhs.contents != rhs.contents {return false}
    if lhs.unknown2 != rhs.unknown2 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Networking_Envelopes_RequestEnvelope.protoMessageName + ".PlatformRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .standard(proto: "request_message"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.type)
      case 2: try decoder.decodeSingularBytesField(value: &self.requestMessage)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.type != .methodUnset {
      try visitor.visitSingularEnumField(value: self.type, fieldNumber: 1)
    }
    if !self.requestMessage.isEmpty {
      try visitor.visitSingularBytesField(value: self.requestMessage, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest, rhs: POGOProtos_Networking_Envelopes_RequestEnvelope.PlatformRequest) -> Bool {
    if lhs.type != rhs.type {return false}
    if lhs.requestMessage != rhs.requestMessage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
