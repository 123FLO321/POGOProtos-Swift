// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Networking/Platform/PlatformRequestType.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum POGOProtos_Networking_Platform_PlatformRequestType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// No implementation required
  case unknown // = 0

  /// ???
  case mapQueryRequest // = 1

  /// Implemented
  case purchaseSku // = 2

  /// Implemented
  case redeemGoogleReceipt // = 3

  /// ???
  case redeemAppleReceipt // = 4

  /// Implemented
  case getAvailableSkusAndBalances // = 5

  /// Implemented
  case sendEncryptedSignature // = 6

  /// ???
  case redeemDesktopReceipt // = 7

  /// Implemented
  case downloadPlatformClientSettings // = 8

  /// Implemented
  case redeemPasscode // = 9

  /// Implemented
  case registerPushNotification // = 10

  /// ???
  case unregisterPushNotification // = 11

  /// Implemented
  case updateNotificationStatus // = 12

  /// Implemented
  case addNewPoi // = 13

  /// Implemented
  case addLoginAction // = 14

  /// Implemented
  case removeLoginAction // = 15

  /// Implemented
  case listLoginAction // = 16

  /// ???
  case collectClientTelemetry // = 17

  /// ???
  case getSignedURLForPhotoUpload // = 18

  /// Implemented
  case replaceLoginAction // = 19

  /// ???
  case challenge // = 20

  /// ???
  case safetyNetChallenge // = 21

  /// Implemented
  case updateFitnessMetrics // = 22

  /// Implemented
  case getFitnessReport // = 23

  /// Implemented
  case setInGameCurrencyExchangeRate // = 24

  /// Implemented
  case registerDownstreamServerActions // = 30

  /// ???
  case downstreamServerActions // = 31

  /// ???
  case tempTestResult // = 101

  /// Implemented
  case getGmapSettings // = 5036
  case UNRECOGNIZED(Int)

  public init() {
    self = .unknown
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unknown
    case 1: self = .mapQueryRequest
    case 2: self = .purchaseSku
    case 3: self = .redeemGoogleReceipt
    case 4: self = .redeemAppleReceipt
    case 5: self = .getAvailableSkusAndBalances
    case 6: self = .sendEncryptedSignature
    case 7: self = .redeemDesktopReceipt
    case 8: self = .downloadPlatformClientSettings
    case 9: self = .redeemPasscode
    case 10: self = .registerPushNotification
    case 11: self = .unregisterPushNotification
    case 12: self = .updateNotificationStatus
    case 13: self = .addNewPoi
    case 14: self = .addLoginAction
    case 15: self = .removeLoginAction
    case 16: self = .listLoginAction
    case 17: self = .collectClientTelemetry
    case 18: self = .getSignedURLForPhotoUpload
    case 19: self = .replaceLoginAction
    case 20: self = .challenge
    case 21: self = .safetyNetChallenge
    case 22: self = .updateFitnessMetrics
    case 23: self = .getFitnessReport
    case 24: self = .setInGameCurrencyExchangeRate
    case 30: self = .registerDownstreamServerActions
    case 31: self = .downstreamServerActions
    case 101: self = .tempTestResult
    case 5036: self = .getGmapSettings
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unknown: return 0
    case .mapQueryRequest: return 1
    case .purchaseSku: return 2
    case .redeemGoogleReceipt: return 3
    case .redeemAppleReceipt: return 4
    case .getAvailableSkusAndBalances: return 5
    case .sendEncryptedSignature: return 6
    case .redeemDesktopReceipt: return 7
    case .downloadPlatformClientSettings: return 8
    case .redeemPasscode: return 9
    case .registerPushNotification: return 10
    case .unregisterPushNotification: return 11
    case .updateNotificationStatus: return 12
    case .addNewPoi: return 13
    case .addLoginAction: return 14
    case .removeLoginAction: return 15
    case .listLoginAction: return 16
    case .collectClientTelemetry: return 17
    case .getSignedURLForPhotoUpload: return 18
    case .replaceLoginAction: return 19
    case .challenge: return 20
    case .safetyNetChallenge: return 21
    case .updateFitnessMetrics: return 22
    case .getFitnessReport: return 23
    case .setInGameCurrencyExchangeRate: return 24
    case .registerDownstreamServerActions: return 30
    case .downstreamServerActions: return 31
    case .tempTestResult: return 101
    case .getGmapSettings: return 5036
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension POGOProtos_Networking_Platform_PlatformRequestType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Networking_Platform_PlatformRequestType] = [
    .unknown,
    .mapQueryRequest,
    .purchaseSku,
    .redeemGoogleReceipt,
    .redeemAppleReceipt,
    .getAvailableSkusAndBalances,
    .sendEncryptedSignature,
    .redeemDesktopReceipt,
    .downloadPlatformClientSettings,
    .redeemPasscode,
    .registerPushNotification,
    .unregisterPushNotification,
    .updateNotificationStatus,
    .addNewPoi,
    .addLoginAction,
    .removeLoginAction,
    .listLoginAction,
    .collectClientTelemetry,
    .getSignedURLForPhotoUpload,
    .replaceLoginAction,
    .challenge,
    .safetyNetChallenge,
    .updateFitnessMetrics,
    .getFitnessReport,
    .setInGameCurrencyExchangeRate,
    .registerDownstreamServerActions,
    .downstreamServerActions,
    .tempTestResult,
    .getGmapSettings,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension POGOProtos_Networking_Platform_PlatformRequestType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN"),
    1: .same(proto: "MAP_QUERY_REQUEST"),
    2: .same(proto: "PURCHASE_SKU"),
    3: .same(proto: "REDEEM_GOOGLE_RECEIPT"),
    4: .same(proto: "REDEEM_APPLE_RECEIPT"),
    5: .same(proto: "GET_AVAILABLE_SKUS_AND_BALANCES"),
    6: .same(proto: "SEND_ENCRYPTED_SIGNATURE"),
    7: .same(proto: "REDEEM_DESKTOP_RECEIPT"),
    8: .same(proto: "DOWNLOAD_PLATFORM_CLIENT_SETTINGS"),
    9: .same(proto: "REDEEM_PASSCODE"),
    10: .same(proto: "REGISTER_PUSH_NOTIFICATION"),
    11: .same(proto: "UNREGISTER_PUSH_NOTIFICATION"),
    12: .same(proto: "UPDATE_NOTIFICATION_STATUS"),
    13: .same(proto: "ADD_NEW_POI"),
    14: .same(proto: "ADD_LOGIN_ACTION"),
    15: .same(proto: "REMOVE_LOGIN_ACTION"),
    16: .same(proto: "LIST_LOGIN_ACTION"),
    17: .same(proto: "COLLECT_CLIENT_TELEMETRY"),
    18: .same(proto: "GET_SIGNED_URL_FOR_PHOTO_UPLOAD"),
    19: .same(proto: "REPLACE_LOGIN_ACTION"),
    20: .same(proto: "CHALLENGE"),
    21: .same(proto: "SAFETY_NET_CHALLENGE"),
    22: .same(proto: "UPDATE_FITNESS_METRICS"),
    23: .same(proto: "GET_FITNESS_REPORT"),
    24: .same(proto: "SET_IN_GAME_CURRENCY_EXCHANGE_RATE"),
    30: .same(proto: "REGISTER_DOWNSTREAM_SERVER_ACTIONS"),
    31: .same(proto: "DOWNSTREAM_SERVER_ACTIONS"),
    101: .same(proto: "TEMP_TEST_RESULT"),
    5036: .same(proto: "GET_GMAP_SETTINGS"),
  ]
}
