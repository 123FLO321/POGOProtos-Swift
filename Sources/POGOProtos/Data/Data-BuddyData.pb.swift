// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/BuddyData.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_BuddyData {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var buddyPokemonID: UInt64 {
    get {return _storage._buddyPokemonID}
    set {_uniqueStorage()._buddyPokemonID = newValue}
  }

  public var currentPointsEarned: Int32 {
    get {return _storage._currentPointsEarned}
    set {_uniqueStorage()._currentPointsEarned = newValue}
  }

  public var highestPointsEarned: Int32 {
    get {return _storage._highestPointsEarned}
    set {_uniqueStorage()._highestPointsEarned = newValue}
  }

  public var lastFedMs: Int64 {
    get {return _storage._lastFedMs}
    set {_uniqueStorage()._lastFedMs = newValue}
  }

  public var lastGroomedMs: Int64 {
    get {return _storage._lastGroomedMs}
    set {_uniqueStorage()._lastGroomedMs = newValue}
  }

  public var feedingExpirationMs: Int64 {
    get {return _storage._feedingExpirationMs}
    set {_uniqueStorage()._feedingExpirationMs = newValue}
  }

  public var mapExpirationMs: Int64 {
    get {return _storage._mapExpirationMs}
    set {_uniqueStorage()._mapExpirationMs = newValue}
  }

  public var statsToday: POGOProtos_Data_BuddyStats {
    get {return _storage._statsToday ?? POGOProtos_Data_BuddyStats()}
    set {_uniqueStorage()._statsToday = newValue}
  }
  /// Returns true if `statsToday` has been explicitly set.
  public var hasStatsToday: Bool {return _storage._statsToday != nil}
  /// Clears the value of `statsToday`. Subsequent reads from it will return its default value.
  public mutating func clearStatsToday() {_uniqueStorage()._statsToday = nil}

  public var statsTotal: POGOProtos_Data_BuddyStats {
    get {return _storage._statsTotal ?? POGOProtos_Data_BuddyStats()}
    set {_uniqueStorage()._statsTotal = newValue}
  }
  /// Returns true if `statsTotal` has been explicitly set.
  public var hasStatsTotal: Bool {return _storage._statsTotal != nil}
  /// Clears the value of `statsTotal`. Subsequent reads from it will return its default value.
  public mutating func clearStatsTotal() {_uniqueStorage()._statsTotal = nil}

  public var dailyActivityCounters: POGOProtos_Data_BuddyData.DailyActivityCounters {
    get {return _storage._dailyActivityCounters ?? POGOProtos_Data_BuddyData.DailyActivityCounters()}
    set {_uniqueStorage()._dailyActivityCounters = newValue}
  }
  /// Returns true if `dailyActivityCounters` has been explicitly set.
  public var hasDailyActivityCounters: Bool {return _storage._dailyActivityCounters != nil}
  /// Clears the value of `dailyActivityCounters`. Subsequent reads from it will return its default value.
  public mutating func clearDailyActivityCounters() {_uniqueStorage()._dailyActivityCounters = nil}

  public var dailyCategoryCounters: POGOProtos_Data_BuddyData.DailyCategoryCounters {
    get {return _storage._dailyCategoryCounters ?? POGOProtos_Data_BuddyData.DailyCategoryCounters()}
    set {_uniqueStorage()._dailyCategoryCounters = newValue}
  }
  /// Returns true if `dailyCategoryCounters` has been explicitly set.
  public var hasDailyCategoryCounters: Bool {return _storage._dailyCategoryCounters != nil}
  /// Clears the value of `dailyCategoryCounters`. Subsequent reads from it will return its default value.
  public mutating func clearDailyCategoryCounters() {_uniqueStorage()._dailyCategoryCounters = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct DailyActivityCounters {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var berriesFedToday: POGOProtos_Data_Quests_Quest.DailyCounter {
      get {return _storage._berriesFedToday ?? POGOProtos_Data_Quests_Quest.DailyCounter()}
      set {_uniqueStorage()._berriesFedToday = newValue}
    }
    /// Returns true if `berriesFedToday` has been explicitly set.
    public var hasBerriesFedToday: Bool {return _storage._berriesFedToday != nil}
    /// Clears the value of `berriesFedToday`. Subsequent reads from it will return its default value.
    public mutating func clearBerriesFedToday() {_uniqueStorage()._berriesFedToday = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  public struct DailyCategoryCounters {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var snackBucket: POGOProtos_Data_Quests_Quest.DailyCounter {
      get {return _storage._snackBucket ?? POGOProtos_Data_Quests_Quest.DailyCounter()}
      set {_uniqueStorage()._snackBucket = newValue}
    }
    /// Returns true if `snackBucket` has been explicitly set.
    public var hasSnackBucket: Bool {return _storage._snackBucket != nil}
    /// Clears the value of `snackBucket`. Subsequent reads from it will return its default value.
    public mutating func clearSnackBucket() {_uniqueStorage()._snackBucket = nil}

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data"

extension POGOProtos_Data_BuddyData: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BuddyData"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "buddy_pokemon_id"),
    2: .standard(proto: "current_points_earned"),
    3: .standard(proto: "highest_points_earned"),
    4: .standard(proto: "last_fed_ms"),
    5: .standard(proto: "last_groomed_ms"),
    6: .standard(proto: "feeding_expiration_ms"),
    7: .standard(proto: "map_expiration_ms"),
    8: .standard(proto: "stats_today"),
    9: .standard(proto: "stats_total"),
    10: .standard(proto: "daily_activity_counters"),
    11: .standard(proto: "daily_category_counters"),
  ]

  fileprivate class _StorageClass {
    var _buddyPokemonID: UInt64 = 0
    var _currentPointsEarned: Int32 = 0
    var _highestPointsEarned: Int32 = 0
    var _lastFedMs: Int64 = 0
    var _lastGroomedMs: Int64 = 0
    var _feedingExpirationMs: Int64 = 0
    var _mapExpirationMs: Int64 = 0
    var _statsToday: POGOProtos_Data_BuddyStats? = nil
    var _statsTotal: POGOProtos_Data_BuddyStats? = nil
    var _dailyActivityCounters: POGOProtos_Data_BuddyData.DailyActivityCounters? = nil
    var _dailyCategoryCounters: POGOProtos_Data_BuddyData.DailyCategoryCounters? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _buddyPokemonID = source._buddyPokemonID
      _currentPointsEarned = source._currentPointsEarned
      _highestPointsEarned = source._highestPointsEarned
      _lastFedMs = source._lastFedMs
      _lastGroomedMs = source._lastGroomedMs
      _feedingExpirationMs = source._feedingExpirationMs
      _mapExpirationMs = source._mapExpirationMs
      _statsToday = source._statsToday
      _statsTotal = source._statsTotal
      _dailyActivityCounters = source._dailyActivityCounters
      _dailyCategoryCounters = source._dailyCategoryCounters
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularFixed64Field(value: &_storage._buddyPokemonID)
        case 2: try decoder.decodeSingularInt32Field(value: &_storage._currentPointsEarned)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._highestPointsEarned)
        case 4: try decoder.decodeSingularInt64Field(value: &_storage._lastFedMs)
        case 5: try decoder.decodeSingularInt64Field(value: &_storage._lastGroomedMs)
        case 6: try decoder.decodeSingularInt64Field(value: &_storage._feedingExpirationMs)
        case 7: try decoder.decodeSingularInt64Field(value: &_storage._mapExpirationMs)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._statsToday)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._statsTotal)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._dailyActivityCounters)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._dailyCategoryCounters)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._buddyPokemonID != 0 {
        try visitor.visitSingularFixed64Field(value: _storage._buddyPokemonID, fieldNumber: 1)
      }
      if _storage._currentPointsEarned != 0 {
        try visitor.visitSingularInt32Field(value: _storage._currentPointsEarned, fieldNumber: 2)
      }
      if _storage._highestPointsEarned != 0 {
        try visitor.visitSingularInt32Field(value: _storage._highestPointsEarned, fieldNumber: 3)
      }
      if _storage._lastFedMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastFedMs, fieldNumber: 4)
      }
      if _storage._lastGroomedMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastGroomedMs, fieldNumber: 5)
      }
      if _storage._feedingExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._feedingExpirationMs, fieldNumber: 6)
      }
      if _storage._mapExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._mapExpirationMs, fieldNumber: 7)
      }
      if let v = _storage._statsToday {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._statsTotal {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._dailyActivityCounters {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._dailyCategoryCounters {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_BuddyData, rhs: POGOProtos_Data_BuddyData) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._buddyPokemonID != rhs_storage._buddyPokemonID {return false}
        if _storage._currentPointsEarned != rhs_storage._currentPointsEarned {return false}
        if _storage._highestPointsEarned != rhs_storage._highestPointsEarned {return false}
        if _storage._lastFedMs != rhs_storage._lastFedMs {return false}
        if _storage._lastGroomedMs != rhs_storage._lastGroomedMs {return false}
        if _storage._feedingExpirationMs != rhs_storage._feedingExpirationMs {return false}
        if _storage._mapExpirationMs != rhs_storage._mapExpirationMs {return false}
        if _storage._statsToday != rhs_storage._statsToday {return false}
        if _storage._statsTotal != rhs_storage._statsTotal {return false}
        if _storage._dailyActivityCounters != rhs_storage._dailyActivityCounters {return false}
        if _storage._dailyCategoryCounters != rhs_storage._dailyCategoryCounters {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_BuddyData.DailyActivityCounters: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_BuddyData.protoMessageName + ".DailyActivityCounters"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "berries_fed_today"),
  ]

  fileprivate class _StorageClass {
    var _berriesFedToday: POGOProtos_Data_Quests_Quest.DailyCounter? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _berriesFedToday = source._berriesFedToday
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._berriesFedToday)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._berriesFedToday {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_BuddyData.DailyActivityCounters, rhs: POGOProtos_Data_BuddyData.DailyActivityCounters) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._berriesFedToday != rhs_storage._berriesFedToday {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_BuddyData.DailyCategoryCounters: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_BuddyData.protoMessageName + ".DailyCategoryCounters"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "snack_bucket"),
  ]

  fileprivate class _StorageClass {
    var _snackBucket: POGOProtos_Data_Quests_Quest.DailyCounter? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _snackBucket = source._snackBucket
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._snackBucket)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._snackBucket {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_BuddyData.DailyCategoryCounters, rhs: POGOProtos_Data_BuddyData.DailyCategoryCounters) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._snackBucket != rhs_storage._snackBucket {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
