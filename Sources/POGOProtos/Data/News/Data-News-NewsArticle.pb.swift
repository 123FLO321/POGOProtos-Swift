// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/News/NewsArticle.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_News_NewsArticle {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var id: String = String()

  public var imageURL: [String] = []

  public var headerKey: String = String()

  public var subheaderKey: String = String()

  public var mainTextKey: String = String()

  public var timestamp: Int64 = 0

  public var template: POGOProtos_Data_News_NewsArticle.NewsTemplate = .unset

  public var enabled: Bool = false

  public var articleRead: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum NewsTemplate: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case defaultTemplate // = 1
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .defaultTemplate
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .defaultTemplate: return 1
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Data_News_NewsArticle.NewsTemplate: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_News_NewsArticle.NewsTemplate] = [
    .unset,
    .defaultTemplate,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.News"

extension POGOProtos_Data_News_NewsArticle: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".NewsArticle"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "image_url"),
    3: .standard(proto: "header_key"),
    4: .standard(proto: "subheader_key"),
    5: .standard(proto: "main_text_key"),
    6: .same(proto: "timestamp"),
    7: .same(proto: "template"),
    8: .same(proto: "enabled"),
    9: .standard(proto: "article_read"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.id) }()
      case 2: try { try decoder.decodeRepeatedStringField(value: &self.imageURL) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.headerKey) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.subheaderKey) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.mainTextKey) }()
      case 6: try { try decoder.decodeSingularInt64Field(value: &self.timestamp) }()
      case 7: try { try decoder.decodeSingularEnumField(value: &self.template) }()
      case 8: try { try decoder.decodeSingularBoolField(value: &self.enabled) }()
      case 9: try { try decoder.decodeSingularBoolField(value: &self.articleRead) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.id.isEmpty {
      try visitor.visitSingularStringField(value: self.id, fieldNumber: 1)
    }
    if !self.imageURL.isEmpty {
      try visitor.visitRepeatedStringField(value: self.imageURL, fieldNumber: 2)
    }
    if !self.headerKey.isEmpty {
      try visitor.visitSingularStringField(value: self.headerKey, fieldNumber: 3)
    }
    if !self.subheaderKey.isEmpty {
      try visitor.visitSingularStringField(value: self.subheaderKey, fieldNumber: 4)
    }
    if !self.mainTextKey.isEmpty {
      try visitor.visitSingularStringField(value: self.mainTextKey, fieldNumber: 5)
    }
    if self.timestamp != 0 {
      try visitor.visitSingularInt64Field(value: self.timestamp, fieldNumber: 6)
    }
    if self.template != .unset {
      try visitor.visitSingularEnumField(value: self.template, fieldNumber: 7)
    }
    if self.enabled != false {
      try visitor.visitSingularBoolField(value: self.enabled, fieldNumber: 8)
    }
    if self.articleRead != false {
      try visitor.visitSingularBoolField(value: self.articleRead, fieldNumber: 9)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_News_NewsArticle, rhs: POGOProtos_Data_News_NewsArticle) -> Bool {
    if lhs.id != rhs.id {return false}
    if lhs.imageURL != rhs.imageURL {return false}
    if lhs.headerKey != rhs.headerKey {return false}
    if lhs.subheaderKey != rhs.subheaderKey {return false}
    if lhs.mainTextKey != rhs.mainTextKey {return false}
    if lhs.timestamp != rhs.timestamp {return false}
    if lhs.template != rhs.template {return false}
    if lhs.enabled != rhs.enabled {return false}
    if lhs.articleRead != rhs.articleRead {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_News_NewsArticle.NewsTemplate: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "DEFAULT_TEMPLATE"),
  ]
}
