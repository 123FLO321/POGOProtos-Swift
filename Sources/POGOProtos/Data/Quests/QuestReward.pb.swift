// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Quests/QuestReward.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Data_Quests_QuestReward {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var type: POGOProtos_Data_Quests_QuestReward.TypeEnum {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  var exp: Int32 {
    get {return _storage._exp}
    set {_uniqueStorage()._exp = newValue}
  }

  var item: POGOProtos_Data_Quests_QuestReward.ItemReward {
    get {return _storage._item ?? POGOProtos_Data_Quests_QuestReward.ItemReward()}
    set {_uniqueStorage()._item = newValue}
  }
  /// Returns true if `item` has been explicitly set.
  var hasItem: Bool {return _storage._item != nil}
  /// Clears the value of `item`. Subsequent reads from it will return its default value.
  mutating func clearItem() {_uniqueStorage()._item = nil}

  var stardust: Int32 {
    get {return _storage._stardust}
    set {_uniqueStorage()._stardust = newValue}
  }

  var candy: POGOProtos_Data_Quests_QuestReward.PokemonCandyReward {
    get {return _storage._candy ?? POGOProtos_Data_Quests_QuestReward.PokemonCandyReward()}
    set {_uniqueStorage()._candy = newValue}
  }
  /// Returns true if `candy` has been explicitly set.
  var hasCandy: Bool {return _storage._candy != nil}
  /// Clears the value of `candy`. Subsequent reads from it will return its default value.
  mutating func clearCandy() {_uniqueStorage()._candy = nil}

  var avatarTemplateID: String {
    get {return _storage._avatarTemplateID}
    set {_uniqueStorage()._avatarTemplateID = newValue}
  }

  var questTemplateID: String {
    get {return _storage._questTemplateID}
    set {_uniqueStorage()._questTemplateID = newValue}
  }

  var pokemonEncounter: POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward {
    get {return _storage._pokemonEncounter ?? POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward()}
    set {_uniqueStorage()._pokemonEncounter = newValue}
  }
  /// Returns true if `pokemonEncounter` has been explicitly set.
  var hasPokemonEncounter: Bool {return _storage._pokemonEncounter != nil}
  /// Clears the value of `pokemonEncounter`. Subsequent reads from it will return its default value.
  mutating func clearPokemonEncounter() {_uniqueStorage()._pokemonEncounter = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum TypeEnum: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case unset // = 0
    case experience // = 1
    case item // = 2
    case stardust // = 3
    case candy // = 4
    case avatarClothing // = 5
    case quest // = 6
    case pokemonEncounter // = 7
    case UNRECOGNIZED(Int)

    init() {
      self = .unset
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .experience
      case 2: self = .item
      case 3: self = .stardust
      case 4: self = .candy
      case 5: self = .avatarClothing
      case 6: self = .quest
      case 7: self = .pokemonEncounter
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .unset: return 0
      case .experience: return 1
      case .item: return 2
      case .stardust: return 3
      case .candy: return 4
      case .avatarClothing: return 5
      case .quest: return 6
      case .pokemonEncounter: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  struct ItemReward {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var item: POGOProtos_Inventory_Item_ItemId = .itemUnknown

    var amount: Int32 = 0

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  struct PokemonCandyReward {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var pokemonID: POGOProtos_Enums_PokemonId = .missingno

    var amount: Int32 = 0

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}
  }

  struct PokemonEncounterReward {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    var pokemonID: POGOProtos_Enums_PokemonId {
      get {return _storage._pokemonID}
      set {_uniqueStorage()._pokemonID = newValue}
    }

    var useQuestPokemonEncounterDistribuition: Bool {
      get {return _storage._useQuestPokemonEncounterDistribuition}
      set {_uniqueStorage()._useQuestPokemonEncounterDistribuition = newValue}
    }

    var pokemonDisplay: POGOProtos_Data_PokemonDisplay {
      get {return _storage._pokemonDisplay ?? POGOProtos_Data_PokemonDisplay()}
      set {_uniqueStorage()._pokemonDisplay = newValue}
    }
    /// Returns true if `pokemonDisplay` has been explicitly set.
    var hasPokemonDisplay: Bool {return _storage._pokemonDisplay != nil}
    /// Clears the value of `pokemonDisplay`. Subsequent reads from it will return its default value.
    mutating func clearPokemonDisplay() {_uniqueStorage()._pokemonDisplay = nil}

    var isHiddenDitto: Bool {
      get {return _storage._isHiddenDitto}
      set {_uniqueStorage()._isHiddenDitto = newValue}
    }

    var dittoDisplay: POGOProtos_Data_PokemonDisplay {
      get {return _storage._dittoDisplay ?? POGOProtos_Data_PokemonDisplay()}
      set {_uniqueStorage()._dittoDisplay = newValue}
    }
    /// Returns true if `dittoDisplay` has been explicitly set.
    var hasDittoDisplay: Bool {return _storage._dittoDisplay != nil}
    /// Clears the value of `dittoDisplay`. Subsequent reads from it will return its default value.
    mutating func clearDittoDisplay() {_uniqueStorage()._dittoDisplay = nil}

    var unknownFields = SwiftProtobuf.UnknownStorage()

    init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension POGOProtos_Data_Quests_QuestReward.TypeEnum: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  static var allCases: [POGOProtos_Data_Quests_QuestReward.TypeEnum] = [
    .unset,
    .experience,
    .item,
    .stardust,
    .candy,
    .avatarClothing,
    .quest,
    .pokemonEncounter,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Quests"

extension POGOProtos_Data_Quests_QuestReward: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".QuestReward"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .same(proto: "exp"),
    3: .same(proto: "item"),
    4: .same(proto: "stardust"),
    5: .same(proto: "candy"),
    6: .standard(proto: "avatar_template_id"),
    7: .standard(proto: "quest_template_id"),
    8: .standard(proto: "pokemon_encounter"),
  ]

  fileprivate class _StorageClass {
    var _type: POGOProtos_Data_Quests_QuestReward.TypeEnum = .unset
    var _exp: Int32 = 0
    var _item: POGOProtos_Data_Quests_QuestReward.ItemReward? = nil
    var _stardust: Int32 = 0
    var _candy: POGOProtos_Data_Quests_QuestReward.PokemonCandyReward? = nil
    var _avatarTemplateID: String = String()
    var _questTemplateID: String = String()
    var _pokemonEncounter: POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _type = source._type
      _exp = source._exp
      _item = source._item
      _stardust = source._stardust
      _candy = source._candy
      _avatarTemplateID = source._avatarTemplateID
      _questTemplateID = source._questTemplateID
      _pokemonEncounter = source._pokemonEncounter
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._type)
        case 2: try decoder.decodeSingularInt32Field(value: &_storage._exp)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._item)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._stardust)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._candy)
        case 6: try decoder.decodeSingularStringField(value: &_storage._avatarTemplateID)
        case 7: try decoder.decodeSingularStringField(value: &_storage._questTemplateID)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._pokemonEncounter)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._type != .unset {
        try visitor.visitSingularEnumField(value: _storage._type, fieldNumber: 1)
      }
      if _storage._exp != 0 {
        try visitor.visitSingularInt32Field(value: _storage._exp, fieldNumber: 2)
      }
      if let v = _storage._item {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if _storage._stardust != 0 {
        try visitor.visitSingularInt32Field(value: _storage._stardust, fieldNumber: 4)
      }
      if let v = _storage._candy {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if !_storage._avatarTemplateID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._avatarTemplateID, fieldNumber: 6)
      }
      if !_storage._questTemplateID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._questTemplateID, fieldNumber: 7)
      }
      if let v = _storage._pokemonEncounter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Quests_QuestReward, rhs: POGOProtos_Data_Quests_QuestReward) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._type != rhs_storage._type {return false}
        if _storage._exp != rhs_storage._exp {return false}
        if _storage._item != rhs_storage._item {return false}
        if _storage._stardust != rhs_storage._stardust {return false}
        if _storage._candy != rhs_storage._candy {return false}
        if _storage._avatarTemplateID != rhs_storage._avatarTemplateID {return false}
        if _storage._questTemplateID != rhs_storage._questTemplateID {return false}
        if _storage._pokemonEncounter != rhs_storage._pokemonEncounter {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestReward.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "EXPERIENCE"),
    2: .same(proto: "ITEM"),
    3: .same(proto: "STARDUST"),
    4: .same(proto: "CANDY"),
    5: .same(proto: "AVATAR_CLOTHING"),
    6: .same(proto: "QUEST"),
    7: .same(proto: "POKEMON_ENCOUNTER"),
  ]
}

extension POGOProtos_Data_Quests_QuestReward.ItemReward: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Data_Quests_QuestReward.protoMessageName + ".ItemReward"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "item"),
    2: .same(proto: "amount"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.item)
      case 2: try decoder.decodeSingularInt32Field(value: &self.amount)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.item != .itemUnknown {
      try visitor.visitSingularEnumField(value: self.item, fieldNumber: 1)
    }
    if self.amount != 0 {
      try visitor.visitSingularInt32Field(value: self.amount, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Quests_QuestReward.ItemReward, rhs: POGOProtos_Data_Quests_QuestReward.ItemReward) -> Bool {
    if lhs.item != rhs.item {return false}
    if lhs.amount != rhs.amount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestReward.PokemonCandyReward: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Data_Quests_QuestReward.protoMessageName + ".PokemonCandyReward"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
    2: .same(proto: "amount"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.pokemonID)
      case 2: try decoder.decodeSingularInt32Field(value: &self.amount)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.pokemonID != .missingno {
      try visitor.visitSingularEnumField(value: self.pokemonID, fieldNumber: 1)
    }
    if self.amount != 0 {
      try visitor.visitSingularInt32Field(value: self.amount, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Quests_QuestReward.PokemonCandyReward, rhs: POGOProtos_Data_Quests_QuestReward.PokemonCandyReward) -> Bool {
    if lhs.pokemonID != rhs.pokemonID {return false}
    if lhs.amount != rhs.amount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = POGOProtos_Data_Quests_QuestReward.protoMessageName + ".PokemonEncounterReward"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
    2: .standard(proto: "use_quest_pokemon_encounter_distribuition"),
    3: .standard(proto: "pokemon_display"),
    4: .standard(proto: "is_hidden_ditto"),
    5: .standard(proto: "ditto_display"),
  ]

  fileprivate class _StorageClass {
    var _pokemonID: POGOProtos_Enums_PokemonId = .missingno
    var _useQuestPokemonEncounterDistribuition: Bool = false
    var _pokemonDisplay: POGOProtos_Data_PokemonDisplay? = nil
    var _isHiddenDitto: Bool = false
    var _dittoDisplay: POGOProtos_Data_PokemonDisplay? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _pokemonID = source._pokemonID
      _useQuestPokemonEncounterDistribuition = source._useQuestPokemonEncounterDistribuition
      _pokemonDisplay = source._pokemonDisplay
      _isHiddenDitto = source._isHiddenDitto
      _dittoDisplay = source._dittoDisplay
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._pokemonID)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._useQuestPokemonEncounterDistribuition)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._pokemonDisplay)
        case 4: try decoder.decodeSingularBoolField(value: &_storage._isHiddenDitto)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._dittoDisplay)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._pokemonID != .missingno {
        try visitor.visitSingularEnumField(value: _storage._pokemonID, fieldNumber: 1)
      }
      if _storage._useQuestPokemonEncounterDistribuition != false {
        try visitor.visitSingularBoolField(value: _storage._useQuestPokemonEncounterDistribuition, fieldNumber: 2)
      }
      if let v = _storage._pokemonDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if _storage._isHiddenDitto != false {
        try visitor.visitSingularBoolField(value: _storage._isHiddenDitto, fieldNumber: 4)
      }
      if let v = _storage._dittoDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward, rhs: POGOProtos_Data_Quests_QuestReward.PokemonEncounterReward) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._pokemonID != rhs_storage._pokemonID {return false}
        if _storage._useQuestPokemonEncounterDistribuition != rhs_storage._useQuestPokemonEncounterDistribuition {return false}
        if _storage._pokemonDisplay != rhs_storage._pokemonDisplay {return false}
        if _storage._isHiddenDitto != rhs_storage._isHiddenDitto {return false}
        if _storage._dittoDisplay != rhs_storage._dittoDisplay {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
