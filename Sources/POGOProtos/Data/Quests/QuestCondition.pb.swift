// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Quests/QuestCondition.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Quests_QuestCondition {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var type: POGOProtos_Data_Quests_QuestCondition.ConditionType {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var withPokemonType: POGOProtos_Data_Quests_QuestCondition.WithPokemonType {
    get {return _storage._withPokemonType ?? POGOProtos_Data_Quests_QuestCondition.WithPokemonType()}
    set {_uniqueStorage()._withPokemonType = newValue}
  }
  /// Returns true if `withPokemonType` has been explicitly set.
  public var hasWithPokemonType: Bool {return _storage._withPokemonType != nil}
  /// Clears the value of `withPokemonType`. Subsequent reads from it will return its default value.
  public mutating func clearWithPokemonType() {_uniqueStorage()._withPokemonType = nil}

  public var withPokemonCategory: POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory {
    get {return _storage._withPokemonCategory ?? POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory()}
    set {_uniqueStorage()._withPokemonCategory = newValue}
  }
  /// Returns true if `withPokemonCategory` has been explicitly set.
  public var hasWithPokemonCategory: Bool {return _storage._withPokemonCategory != nil}
  /// Clears the value of `withPokemonCategory`. Subsequent reads from it will return its default value.
  public mutating func clearWithPokemonCategory() {_uniqueStorage()._withPokemonCategory = nil}

  public var withWeatherBoost: POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost {
    get {return _storage._withWeatherBoost ?? POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost()}
    set {_uniqueStorage()._withWeatherBoost = newValue}
  }
  /// Returns true if `withWeatherBoost` has been explicitly set.
  public var hasWithWeatherBoost: Bool {return _storage._withWeatherBoost != nil}
  /// Clears the value of `withWeatherBoost`. Subsequent reads from it will return its default value.
  public mutating func clearWithWeatherBoost() {_uniqueStorage()._withWeatherBoost = nil}

  public var withDailyCaptureBonus: POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus {
    get {return _storage._withDailyCaptureBonus ?? POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus()}
    set {_uniqueStorage()._withDailyCaptureBonus = newValue}
  }
  /// Returns true if `withDailyCaptureBonus` has been explicitly set.
  public var hasWithDailyCaptureBonus: Bool {return _storage._withDailyCaptureBonus != nil}
  /// Clears the value of `withDailyCaptureBonus`. Subsequent reads from it will return its default value.
  public mutating func clearWithDailyCaptureBonus() {_uniqueStorage()._withDailyCaptureBonus = nil}

  public var withDailySpinBonus: POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus {
    get {return _storage._withDailySpinBonus ?? POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus()}
    set {_uniqueStorage()._withDailySpinBonus = newValue}
  }
  /// Returns true if `withDailySpinBonus` has been explicitly set.
  public var hasWithDailySpinBonus: Bool {return _storage._withDailySpinBonus != nil}
  /// Clears the value of `withDailySpinBonus`. Subsequent reads from it will return its default value.
  public mutating func clearWithDailySpinBonus() {_uniqueStorage()._withDailySpinBonus = nil}

  public var withWinRaidStatus: POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus {
    get {return _storage._withWinRaidStatus ?? POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus()}
    set {_uniqueStorage()._withWinRaidStatus = newValue}
  }
  /// Returns true if `withWinRaidStatus` has been explicitly set.
  public var hasWithWinRaidStatus: Bool {return _storage._withWinRaidStatus != nil}
  /// Clears the value of `withWinRaidStatus`. Subsequent reads from it will return its default value.
  public mutating func clearWithWinRaidStatus() {_uniqueStorage()._withWinRaidStatus = nil}

  public var withRaidLevel: POGOProtos_Data_Quests_QuestCondition.WithRaidLevel {
    get {return _storage._withRaidLevel ?? POGOProtos_Data_Quests_QuestCondition.WithRaidLevel()}
    set {_uniqueStorage()._withRaidLevel = newValue}
  }
  /// Returns true if `withRaidLevel` has been explicitly set.
  public var hasWithRaidLevel: Bool {return _storage._withRaidLevel != nil}
  /// Clears the value of `withRaidLevel`. Subsequent reads from it will return its default value.
  public mutating func clearWithRaidLevel() {_uniqueStorage()._withRaidLevel = nil}

  public var withThrowType: POGOProtos_Data_Quests_QuestCondition.WithThrowType {
    get {return _storage._withThrowType ?? POGOProtos_Data_Quests_QuestCondition.WithThrowType()}
    set {_uniqueStorage()._withThrowType = newValue}
  }
  /// Returns true if `withThrowType` has been explicitly set.
  public var hasWithThrowType: Bool {return _storage._withThrowType != nil}
  /// Clears the value of `withThrowType`. Subsequent reads from it will return its default value.
  public mutating func clearWithThrowType() {_uniqueStorage()._withThrowType = nil}

  public var withWinGymBattleStatus: POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus {
    get {return _storage._withWinGymBattleStatus ?? POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus()}
    set {_uniqueStorage()._withWinGymBattleStatus = newValue}
  }
  /// Returns true if `withWinGymBattleStatus` has been explicitly set.
  public var hasWithWinGymBattleStatus: Bool {return _storage._withWinGymBattleStatus != nil}
  /// Clears the value of `withWinGymBattleStatus`. Subsequent reads from it will return its default value.
  public mutating func clearWithWinGymBattleStatus() {_uniqueStorage()._withWinGymBattleStatus = nil}

  public var withSuperEffectiveChargeMove: POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove {
    get {return _storage._withSuperEffectiveChargeMove ?? POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove()}
    set {_uniqueStorage()._withSuperEffectiveChargeMove = newValue}
  }
  /// Returns true if `withSuperEffectiveChargeMove` has been explicitly set.
  public var hasWithSuperEffectiveChargeMove: Bool {return _storage._withSuperEffectiveChargeMove != nil}
  /// Clears the value of `withSuperEffectiveChargeMove`. Subsequent reads from it will return its default value.
  public mutating func clearWithSuperEffectiveChargeMove() {_uniqueStorage()._withSuperEffectiveChargeMove = nil}

  public var withItem: POGOProtos_Data_Quests_QuestCondition.WithItem {
    get {return _storage._withItem ?? POGOProtos_Data_Quests_QuestCondition.WithItem()}
    set {_uniqueStorage()._withItem = newValue}
  }
  /// Returns true if `withItem` has been explicitly set.
  public var hasWithItem: Bool {return _storage._withItem != nil}
  /// Clears the value of `withItem`. Subsequent reads from it will return its default value.
  public mutating func clearWithItem() {_uniqueStorage()._withItem = nil}

  public var withUniquePokestop: POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop {
    get {return _storage._withUniquePokestop ?? POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop()}
    set {_uniqueStorage()._withUniquePokestop = newValue}
  }
  /// Returns true if `withUniquePokestop` has been explicitly set.
  public var hasWithUniquePokestop: Bool {return _storage._withUniquePokestop != nil}
  /// Clears the value of `withUniquePokestop`. Subsequent reads from it will return its default value.
  public mutating func clearWithUniquePokestop() {_uniqueStorage()._withUniquePokestop = nil}

  public var withQuestContext: POGOProtos_Data_Quests_QuestCondition.WithQuestContext {
    get {return _storage._withQuestContext ?? POGOProtos_Data_Quests_QuestCondition.WithQuestContext()}
    set {_uniqueStorage()._withQuestContext = newValue}
  }
  /// Returns true if `withQuestContext` has been explicitly set.
  public var hasWithQuestContext: Bool {return _storage._withQuestContext != nil}
  /// Clears the value of `withQuestContext`. Subsequent reads from it will return its default value.
  public mutating func clearWithQuestContext() {_uniqueStorage()._withQuestContext = nil}

  public var withBadgeType: POGOProtos_Data_Quests_QuestCondition.WithBadgeType {
    get {return _storage._withBadgeType ?? POGOProtos_Data_Quests_QuestCondition.WithBadgeType()}
    set {_uniqueStorage()._withBadgeType = newValue}
  }
  /// Returns true if `withBadgeType` has been explicitly set.
  public var hasWithBadgeType: Bool {return _storage._withBadgeType != nil}
  /// Clears the value of `withBadgeType`. Subsequent reads from it will return its default value.
  public mutating func clearWithBadgeType() {_uniqueStorage()._withBadgeType = nil}

  public var withPlayerLevel: POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel {
    get {return _storage._withPlayerLevel ?? POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel()}
    set {_uniqueStorage()._withPlayerLevel = newValue}
  }
  /// Returns true if `withPlayerLevel` has been explicitly set.
  public var hasWithPlayerLevel: Bool {return _storage._withPlayerLevel != nil}
  /// Clears the value of `withPlayerLevel`. Subsequent reads from it will return its default value.
  public mutating func clearWithPlayerLevel() {_uniqueStorage()._withPlayerLevel = nil}

  public var withWinBattleStatus: POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus {
    get {return _storage._withWinBattleStatus ?? POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus()}
    set {_uniqueStorage()._withWinBattleStatus = newValue}
  }
  /// Returns true if `withWinBattleStatus` has been explicitly set.
  public var hasWithWinBattleStatus: Bool {return _storage._withWinBattleStatus != nil}
  /// Clears the value of `withWinBattleStatus`. Subsequent reads from it will return its default value.
  public mutating func clearWithWinBattleStatus() {_uniqueStorage()._withWinBattleStatus = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ConditionType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case withPokemonType // = 1
    case withPokemonCategory // = 2
    case withWeatherBoost // = 3
    case withDailyCaptureBonus // = 4
    case withDailySpinBonus // = 5
    case withWinRaidStatus // = 6
    case withRaidLevel // = 7
    case withThrowType // = 8
    case withWinGymBattleStatus // = 9
    case withSuperEffectiveCharge // = 10
    case withItem // = 11
    case withUniquePokestop // = 12
    case withQuestContext // = 13
    case withThrowTypeInARow // = 14
    case withCurveBall // = 15
    case withBadgeType // = 16
    case withPlayerLevel // = 17
    case withWinBattleStatus // = 18
    case withNewFriend // = 19
    case withDaysInARow // = 20
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .withPokemonType
      case 2: self = .withPokemonCategory
      case 3: self = .withWeatherBoost
      case 4: self = .withDailyCaptureBonus
      case 5: self = .withDailySpinBonus
      case 6: self = .withWinRaidStatus
      case 7: self = .withRaidLevel
      case 8: self = .withThrowType
      case 9: self = .withWinGymBattleStatus
      case 10: self = .withSuperEffectiveCharge
      case 11: self = .withItem
      case 12: self = .withUniquePokestop
      case 13: self = .withQuestContext
      case 14: self = .withThrowTypeInARow
      case 15: self = .withCurveBall
      case 16: self = .withBadgeType
      case 17: self = .withPlayerLevel
      case 18: self = .withWinBattleStatus
      case 19: self = .withNewFriend
      case 20: self = .withDaysInARow
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .withPokemonType: return 1
      case .withPokemonCategory: return 2
      case .withWeatherBoost: return 3
      case .withDailyCaptureBonus: return 4
      case .withDailySpinBonus: return 5
      case .withWinRaidStatus: return 6
      case .withRaidLevel: return 7
      case .withThrowType: return 8
      case .withWinGymBattleStatus: return 9
      case .withSuperEffectiveCharge: return 10
      case .withItem: return 11
      case .withUniquePokestop: return 12
      case .withQuestContext: return 13
      case .withThrowTypeInARow: return 14
      case .withCurveBall: return 15
      case .withBadgeType: return 16
      case .withPlayerLevel: return 17
      case .withWinBattleStatus: return 18
      case .withNewFriend: return 19
      case .withDaysInARow: return 20
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public struct WithPokemonType {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var pokemonType: [POGOProtos_Enums_PokemonType] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithWeatherBoost {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithPokemonCategory {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var categoryName: String = String()

    public var pokemonIds: [POGOProtos_Enums_PokemonId] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithDailyCaptureBonus {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithDailySpinBonus {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithWinRaidStatus {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithRaidLevel {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var raidLevel: [POGOProtos_Enums_RaidLevel] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithThrowType {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var throwType: POGOProtos_Enums_ActivityType = .activityUnknown

    public var hit: Bool = false

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithCurveBall {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithWinGymBattleStatus {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithSuperEffectiveChargeMove {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithItem {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var item: POGOProtos_Inventory_Item_ItemId = .itemUnknown

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithUniquePokestop {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithQuestContext {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var context: POGOProtos_Data_Quests_QuestCondition.WithQuestContext.Context = .unset

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum Context: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unset // = 0
      case storyQuest // = 1
      case challengeQuest // = 2
      case UNRECOGNIZED(Int)

      public init() {
        self = .unset
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unset
        case 1: self = .storyQuest
        case 2: self = .challengeQuest
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unset: return 0
        case .storyQuest: return 1
        case .challengeQuest: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}
  }

  public struct WithBadgeType {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var badgeType: [POGOProtos_Enums_BadgeType] = []

    public var badgeRank: Int32 = 0

    public var amount: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithPlayerLevel {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var level: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct WithWinBattleStatus {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension POGOProtos_Data_Quests_QuestCondition.ConditionType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Quests_QuestCondition.ConditionType] = [
    .unset,
    .withPokemonType,
    .withPokemonCategory,
    .withWeatherBoost,
    .withDailyCaptureBonus,
    .withDailySpinBonus,
    .withWinRaidStatus,
    .withRaidLevel,
    .withThrowType,
    .withWinGymBattleStatus,
    .withSuperEffectiveCharge,
    .withItem,
    .withUniquePokestop,
    .withQuestContext,
    .withThrowTypeInARow,
    .withCurveBall,
    .withBadgeType,
    .withPlayerLevel,
    .withWinBattleStatus,
    .withNewFriend,
    .withDaysInARow,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Quests"

extension POGOProtos_Data_Quests_QuestCondition: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".QuestCondition"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .standard(proto: "with_pokemon_type"),
    3: .standard(proto: "with_pokemon_category"),
    4: .standard(proto: "with_weather_boost"),
    5: .standard(proto: "with_daily_capture_bonus"),
    6: .standard(proto: "with_daily_spin_bonus"),
    7: .standard(proto: "with_win_raid_status"),
    8: .standard(proto: "with_raid_level"),
    9: .standard(proto: "with_throw_type"),
    10: .standard(proto: "with_win_gym_battle_status"),
    11: .standard(proto: "with_super_effective_charge_move"),
    12: .standard(proto: "with_item"),
    13: .standard(proto: "with_unique_pokestop"),
    14: .standard(proto: "with_quest_context"),
    15: .standard(proto: "with_badge_type"),
    16: .standard(proto: "with_player_level"),
    17: .standard(proto: "with_win_battle_status"),
  ]

  fileprivate class _StorageClass {
    var _type: POGOProtos_Data_Quests_QuestCondition.ConditionType = .unset
    var _withPokemonType: POGOProtos_Data_Quests_QuestCondition.WithPokemonType? = nil
    var _withPokemonCategory: POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory? = nil
    var _withWeatherBoost: POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost? = nil
    var _withDailyCaptureBonus: POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus? = nil
    var _withDailySpinBonus: POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus? = nil
    var _withWinRaidStatus: POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus? = nil
    var _withRaidLevel: POGOProtos_Data_Quests_QuestCondition.WithRaidLevel? = nil
    var _withThrowType: POGOProtos_Data_Quests_QuestCondition.WithThrowType? = nil
    var _withWinGymBattleStatus: POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus? = nil
    var _withSuperEffectiveChargeMove: POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove? = nil
    var _withItem: POGOProtos_Data_Quests_QuestCondition.WithItem? = nil
    var _withUniquePokestop: POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop? = nil
    var _withQuestContext: POGOProtos_Data_Quests_QuestCondition.WithQuestContext? = nil
    var _withBadgeType: POGOProtos_Data_Quests_QuestCondition.WithBadgeType? = nil
    var _withPlayerLevel: POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel? = nil
    var _withWinBattleStatus: POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _type = source._type
      _withPokemonType = source._withPokemonType
      _withPokemonCategory = source._withPokemonCategory
      _withWeatherBoost = source._withWeatherBoost
      _withDailyCaptureBonus = source._withDailyCaptureBonus
      _withDailySpinBonus = source._withDailySpinBonus
      _withWinRaidStatus = source._withWinRaidStatus
      _withRaidLevel = source._withRaidLevel
      _withThrowType = source._withThrowType
      _withWinGymBattleStatus = source._withWinGymBattleStatus
      _withSuperEffectiveChargeMove = source._withSuperEffectiveChargeMove
      _withItem = source._withItem
      _withUniquePokestop = source._withUniquePokestop
      _withQuestContext = source._withQuestContext
      _withBadgeType = source._withBadgeType
      _withPlayerLevel = source._withPlayerLevel
      _withWinBattleStatus = source._withWinBattleStatus
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._type)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._withPokemonType)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._withPokemonCategory)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._withWeatherBoost)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._withDailyCaptureBonus)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._withDailySpinBonus)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._withWinRaidStatus)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._withRaidLevel)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._withThrowType)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._withWinGymBattleStatus)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._withSuperEffectiveChargeMove)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._withItem)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._withUniquePokestop)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._withQuestContext)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._withBadgeType)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._withPlayerLevel)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._withWinBattleStatus)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._type != .unset {
        try visitor.visitSingularEnumField(value: _storage._type, fieldNumber: 1)
      }
      if let v = _storage._withPokemonType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._withPokemonCategory {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._withWeatherBoost {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._withDailyCaptureBonus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._withDailySpinBonus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._withWinRaidStatus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._withRaidLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._withThrowType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._withWinGymBattleStatus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._withSuperEffectiveChargeMove {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._withItem {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._withUniquePokestop {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._withQuestContext {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._withBadgeType {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._withPlayerLevel {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._withWinBattleStatus {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition, rhs: POGOProtos_Data_Quests_QuestCondition) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._type != rhs_storage._type {return false}
        if _storage._withPokemonType != rhs_storage._withPokemonType {return false}
        if _storage._withPokemonCategory != rhs_storage._withPokemonCategory {return false}
        if _storage._withWeatherBoost != rhs_storage._withWeatherBoost {return false}
        if _storage._withDailyCaptureBonus != rhs_storage._withDailyCaptureBonus {return false}
        if _storage._withDailySpinBonus != rhs_storage._withDailySpinBonus {return false}
        if _storage._withWinRaidStatus != rhs_storage._withWinRaidStatus {return false}
        if _storage._withRaidLevel != rhs_storage._withRaidLevel {return false}
        if _storage._withThrowType != rhs_storage._withThrowType {return false}
        if _storage._withWinGymBattleStatus != rhs_storage._withWinGymBattleStatus {return false}
        if _storage._withSuperEffectiveChargeMove != rhs_storage._withSuperEffectiveChargeMove {return false}
        if _storage._withItem != rhs_storage._withItem {return false}
        if _storage._withUniquePokestop != rhs_storage._withUniquePokestop {return false}
        if _storage._withQuestContext != rhs_storage._withQuestContext {return false}
        if _storage._withBadgeType != rhs_storage._withBadgeType {return false}
        if _storage._withPlayerLevel != rhs_storage._withPlayerLevel {return false}
        if _storage._withWinBattleStatus != rhs_storage._withWinBattleStatus {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.ConditionType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "WITH_POKEMON_TYPE"),
    2: .same(proto: "WITH_POKEMON_CATEGORY"),
    3: .same(proto: "WITH_WEATHER_BOOST"),
    4: .same(proto: "WITH_DAILY_CAPTURE_BONUS"),
    5: .same(proto: "WITH_DAILY_SPIN_BONUS"),
    6: .same(proto: "WITH_WIN_RAID_STATUS"),
    7: .same(proto: "WITH_RAID_LEVEL"),
    8: .same(proto: "WITH_THROW_TYPE"),
    9: .same(proto: "WITH_WIN_GYM_BATTLE_STATUS"),
    10: .same(proto: "WITH_SUPER_EFFECTIVE_CHARGE"),
    11: .same(proto: "WITH_ITEM"),
    12: .same(proto: "WITH_UNIQUE_POKESTOP"),
    13: .same(proto: "WITH_QUEST_CONTEXT"),
    14: .same(proto: "WITH_THROW_TYPE_IN_A_ROW"),
    15: .same(proto: "WITH_CURVE_BALL"),
    16: .same(proto: "WITH_BADGE_TYPE"),
    17: .same(proto: "WITH_PLAYER_LEVEL"),
    18: .same(proto: "WITH_WIN_BATTLE_STATUS"),
    19: .same(proto: "WITH_NEW_FRIEND"),
    20: .same(proto: "WITH_DAYS_IN_A_ROW"),
  ]
}

extension POGOProtos_Data_Quests_QuestCondition.WithPokemonType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithPokemonType"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_type"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedEnumField(value: &self.pokemonType)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.pokemonType.isEmpty {
      try visitor.visitPackedEnumField(value: self.pokemonType, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithPokemonType, rhs: POGOProtos_Data_Quests_QuestCondition.WithPokemonType) -> Bool {
    if lhs.pokemonType != rhs.pokemonType {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithWeatherBoost"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost, rhs: POGOProtos_Data_Quests_QuestCondition.WithWeatherBoost) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithPokemonCategory"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "category_name"),
    2: .standard(proto: "pokemon_ids"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.categoryName)
      case 2: try decoder.decodeRepeatedEnumField(value: &self.pokemonIds)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.categoryName.isEmpty {
      try visitor.visitSingularStringField(value: self.categoryName, fieldNumber: 1)
    }
    if !self.pokemonIds.isEmpty {
      try visitor.visitPackedEnumField(value: self.pokemonIds, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory, rhs: POGOProtos_Data_Quests_QuestCondition.WithPokemonCategory) -> Bool {
    if lhs.categoryName != rhs.categoryName {return false}
    if lhs.pokemonIds != rhs.pokemonIds {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithDailyCaptureBonus"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus, rhs: POGOProtos_Data_Quests_QuestCondition.WithDailyCaptureBonus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithDailySpinBonus"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus, rhs: POGOProtos_Data_Quests_QuestCondition.WithDailySpinBonus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithWinRaidStatus"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus, rhs: POGOProtos_Data_Quests_QuestCondition.WithWinRaidStatus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithRaidLevel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithRaidLevel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "raid_level"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedEnumField(value: &self.raidLevel)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.raidLevel.isEmpty {
      try visitor.visitPackedEnumField(value: self.raidLevel, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithRaidLevel, rhs: POGOProtos_Data_Quests_QuestCondition.WithRaidLevel) -> Bool {
    if lhs.raidLevel != rhs.raidLevel {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithThrowType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithThrowType"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "throw_type"),
    2: .same(proto: "hit"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.throwType)
      case 2: try decoder.decodeSingularBoolField(value: &self.hit)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.throwType != .activityUnknown {
      try visitor.visitSingularEnumField(value: self.throwType, fieldNumber: 1)
    }
    if self.hit != false {
      try visitor.visitSingularBoolField(value: self.hit, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithThrowType, rhs: POGOProtos_Data_Quests_QuestCondition.WithThrowType) -> Bool {
    if lhs.throwType != rhs.throwType {return false}
    if lhs.hit != rhs.hit {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithCurveBall: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithCurveBall"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithCurveBall, rhs: POGOProtos_Data_Quests_QuestCondition.WithCurveBall) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithWinGymBattleStatus"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus, rhs: POGOProtos_Data_Quests_QuestCondition.WithWinGymBattleStatus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithSuperEffectiveChargeMove"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove, rhs: POGOProtos_Data_Quests_QuestCondition.WithSuperEffectiveChargeMove) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithItem: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithItem"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "item"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.item)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.item != .itemUnknown {
      try visitor.visitSingularEnumField(value: self.item, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithItem, rhs: POGOProtos_Data_Quests_QuestCondition.WithItem) -> Bool {
    if lhs.item != rhs.item {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithUniquePokestop"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop, rhs: POGOProtos_Data_Quests_QuestCondition.WithUniquePokestop) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithQuestContext: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithQuestContext"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "context"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.context)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.context != .unset {
      try visitor.visitSingularEnumField(value: self.context, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithQuestContext, rhs: POGOProtos_Data_Quests_QuestCondition.WithQuestContext) -> Bool {
    if lhs.context != rhs.context {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithQuestContext.Context: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "STORY_QUEST"),
    2: .same(proto: "CHALLENGE_QUEST"),
  ]
}

extension POGOProtos_Data_Quests_QuestCondition.WithBadgeType: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithBadgeType"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "badge_type"),
    2: .standard(proto: "badge_rank"),
    3: .same(proto: "amount"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedEnumField(value: &self.badgeType)
      case 2: try decoder.decodeSingularInt32Field(value: &self.badgeRank)
      case 3: try decoder.decodeSingularInt32Field(value: &self.amount)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.badgeType.isEmpty {
      try visitor.visitPackedEnumField(value: self.badgeType, fieldNumber: 1)
    }
    if self.badgeRank != 0 {
      try visitor.visitSingularInt32Field(value: self.badgeRank, fieldNumber: 2)
    }
    if self.amount != 0 {
      try visitor.visitSingularInt32Field(value: self.amount, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithBadgeType, rhs: POGOProtos_Data_Quests_QuestCondition.WithBadgeType) -> Bool {
    if lhs.badgeType != rhs.badgeType {return false}
    if lhs.badgeRank != rhs.badgeRank {return false}
    if lhs.amount != rhs.amount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithPlayerLevel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "level"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.level)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.level != 0 {
      try visitor.visitSingularInt32Field(value: self.level, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel, rhs: POGOProtos_Data_Quests_QuestCondition.WithPlayerLevel) -> Bool {
    if lhs.level != rhs.level {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Quests_QuestCondition.protoMessageName + ".WithWinBattleStatus"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus, rhs: POGOProtos_Data_Quests_QuestCondition.WithWinBattleStatus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
