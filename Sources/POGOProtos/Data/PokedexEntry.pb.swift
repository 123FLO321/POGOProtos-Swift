// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/PokedexEntry.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_PokedexEntry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var pokemonID: POGOProtos_Enums_PokemonId = .missingno

  public var timesEncountered: Int32 = 0

  public var timesCaptured: Int32 = 0

  public var evolutionStonePieces: Int32 = 0

  public var evolutionStones: Int32 = 0

  public var capturedCostumes: [POGOProtos_Enums_Costume] = []

  public var capturedForms: [POGOProtos_Enums_Form] = []

  public var capturedGenders: [POGOProtos_Enums_Gender] = []

  public var capturedShiny: Bool = false

  public var encounteredCostumes: [POGOProtos_Enums_Costume] = []

  public var encounteredForms: [POGOProtos_Enums_Form] = []

  public var encounteredGenders: [POGOProtos_Enums_Gender] = []

  public var encounteredShiny: Bool = false

  public var timesLuckyReceived: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data"

extension POGOProtos_Data_PokedexEntry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PokedexEntry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
    2: .standard(proto: "times_encountered"),
    3: .standard(proto: "times_captured"),
    4: .standard(proto: "evolution_stone_pieces"),
    5: .standard(proto: "evolution_stones"),
    6: .standard(proto: "captured_costumes"),
    7: .standard(proto: "captured_forms"),
    8: .standard(proto: "captured_genders"),
    9: .standard(proto: "captured_shiny"),
    10: .standard(proto: "encountered_costumes"),
    11: .standard(proto: "encountered_forms"),
    12: .standard(proto: "encountered_genders"),
    13: .standard(proto: "encountered_shiny"),
    14: .standard(proto: "times_lucky_received"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.pokemonID)
      case 2: try decoder.decodeSingularInt32Field(value: &self.timesEncountered)
      case 3: try decoder.decodeSingularInt32Field(value: &self.timesCaptured)
      case 4: try decoder.decodeSingularInt32Field(value: &self.evolutionStonePieces)
      case 5: try decoder.decodeSingularInt32Field(value: &self.evolutionStones)
      case 6: try decoder.decodeRepeatedEnumField(value: &self.capturedCostumes)
      case 7: try decoder.decodeRepeatedEnumField(value: &self.capturedForms)
      case 8: try decoder.decodeRepeatedEnumField(value: &self.capturedGenders)
      case 9: try decoder.decodeSingularBoolField(value: &self.capturedShiny)
      case 10: try decoder.decodeRepeatedEnumField(value: &self.encounteredCostumes)
      case 11: try decoder.decodeRepeatedEnumField(value: &self.encounteredForms)
      case 12: try decoder.decodeRepeatedEnumField(value: &self.encounteredGenders)
      case 13: try decoder.decodeSingularBoolField(value: &self.encounteredShiny)
      case 14: try decoder.decodeSingularInt32Field(value: &self.timesLuckyReceived)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.pokemonID != .missingno {
      try visitor.visitSingularEnumField(value: self.pokemonID, fieldNumber: 1)
    }
    if self.timesEncountered != 0 {
      try visitor.visitSingularInt32Field(value: self.timesEncountered, fieldNumber: 2)
    }
    if self.timesCaptured != 0 {
      try visitor.visitSingularInt32Field(value: self.timesCaptured, fieldNumber: 3)
    }
    if self.evolutionStonePieces != 0 {
      try visitor.visitSingularInt32Field(value: self.evolutionStonePieces, fieldNumber: 4)
    }
    if self.evolutionStones != 0 {
      try visitor.visitSingularInt32Field(value: self.evolutionStones, fieldNumber: 5)
    }
    if !self.capturedCostumes.isEmpty {
      try visitor.visitPackedEnumField(value: self.capturedCostumes, fieldNumber: 6)
    }
    if !self.capturedForms.isEmpty {
      try visitor.visitPackedEnumField(value: self.capturedForms, fieldNumber: 7)
    }
    if !self.capturedGenders.isEmpty {
      try visitor.visitPackedEnumField(value: self.capturedGenders, fieldNumber: 8)
    }
    if self.capturedShiny != false {
      try visitor.visitSingularBoolField(value: self.capturedShiny, fieldNumber: 9)
    }
    if !self.encounteredCostumes.isEmpty {
      try visitor.visitPackedEnumField(value: self.encounteredCostumes, fieldNumber: 10)
    }
    if !self.encounteredForms.isEmpty {
      try visitor.visitPackedEnumField(value: self.encounteredForms, fieldNumber: 11)
    }
    if !self.encounteredGenders.isEmpty {
      try visitor.visitPackedEnumField(value: self.encounteredGenders, fieldNumber: 12)
    }
    if self.encounteredShiny != false {
      try visitor.visitSingularBoolField(value: self.encounteredShiny, fieldNumber: 13)
    }
    if self.timesLuckyReceived != 0 {
      try visitor.visitSingularInt32Field(value: self.timesLuckyReceived, fieldNumber: 14)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_PokedexEntry, rhs: POGOProtos_Data_PokedexEntry) -> Bool {
    if lhs.pokemonID != rhs.pokemonID {return false}
    if lhs.timesEncountered != rhs.timesEncountered {return false}
    if lhs.timesCaptured != rhs.timesCaptured {return false}
    if lhs.evolutionStonePieces != rhs.evolutionStonePieces {return false}
    if lhs.evolutionStones != rhs.evolutionStones {return false}
    if lhs.capturedCostumes != rhs.capturedCostumes {return false}
    if lhs.capturedForms != rhs.capturedForms {return false}
    if lhs.capturedGenders != rhs.capturedGenders {return false}
    if lhs.capturedShiny != rhs.capturedShiny {return false}
    if lhs.encounteredCostumes != rhs.encounteredCostumes {return false}
    if lhs.encounteredForms != rhs.encounteredForms {return false}
    if lhs.encounteredGenders != rhs.encounteredGenders {return false}
    if lhs.encounteredShiny != rhs.encounteredShiny {return false}
    if lhs.timesLuckyReceived != rhs.timesLuckyReceived {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
