// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Redeem/RedeemPasscodeReward.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Redeem_RedeemPasscodeReward {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var items: [POGOProtos_Data_Redeem_RedeemedItem] = []

  public var avatarItems: [POGOProtos_Data_Redeem_RedeemedAvatarItem] = []

  public var eggPokemon: [POGOProtos_Data_PokemonData] = []

  public var pokemon: [POGOProtos_Data_PokemonData] = []

  public var pokeCandy: [POGOProtos_Data_Redeem_PokeCandy] = []

  public var stardust: Int32 = 0

  public var pokecoins: Int32 = 0

  public var badges: [POGOProtos_Enums_BadgeType] = []

  public var redeemedStickers: [POGOProtos_Data_Sticker_RedeemedSticker] = []

  public var questIds: [String] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Redeem"

extension POGOProtos_Data_Redeem_RedeemPasscodeReward: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RedeemPasscodeReward"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "items"),
    2: .standard(proto: "avatar_items"),
    3: .standard(proto: "egg_pokemon"),
    4: .same(proto: "pokemon"),
    5: .standard(proto: "poke_candy"),
    6: .same(proto: "stardust"),
    7: .same(proto: "pokecoins"),
    8: .same(proto: "badges"),
    9: .standard(proto: "redeemed_stickers"),
    10: .standard(proto: "quest_ids"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.items) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.avatarItems) }()
      case 3: try { try decoder.decodeRepeatedMessageField(value: &self.eggPokemon) }()
      case 4: try { try decoder.decodeRepeatedMessageField(value: &self.pokemon) }()
      case 5: try { try decoder.decodeRepeatedMessageField(value: &self.pokeCandy) }()
      case 6: try { try decoder.decodeSingularInt32Field(value: &self.stardust) }()
      case 7: try { try decoder.decodeSingularInt32Field(value: &self.pokecoins) }()
      case 8: try { try decoder.decodeRepeatedEnumField(value: &self.badges) }()
      case 9: try { try decoder.decodeRepeatedMessageField(value: &self.redeemedStickers) }()
      case 10: try { try decoder.decodeRepeatedStringField(value: &self.questIds) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.items.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.items, fieldNumber: 1)
    }
    if !self.avatarItems.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.avatarItems, fieldNumber: 2)
    }
    if !self.eggPokemon.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.eggPokemon, fieldNumber: 3)
    }
    if !self.pokemon.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.pokemon, fieldNumber: 4)
    }
    if !self.pokeCandy.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.pokeCandy, fieldNumber: 5)
    }
    if self.stardust != 0 {
      try visitor.visitSingularInt32Field(value: self.stardust, fieldNumber: 6)
    }
    if self.pokecoins != 0 {
      try visitor.visitSingularInt32Field(value: self.pokecoins, fieldNumber: 7)
    }
    if !self.badges.isEmpty {
      try visitor.visitPackedEnumField(value: self.badges, fieldNumber: 8)
    }
    if !self.redeemedStickers.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.redeemedStickers, fieldNumber: 9)
    }
    if !self.questIds.isEmpty {
      try visitor.visitRepeatedStringField(value: self.questIds, fieldNumber: 10)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Redeem_RedeemPasscodeReward, rhs: POGOProtos_Data_Redeem_RedeemPasscodeReward) -> Bool {
    if lhs.items != rhs.items {return false}
    if lhs.avatarItems != rhs.avatarItems {return false}
    if lhs.eggPokemon != rhs.eggPokemon {return false}
    if lhs.pokemon != rhs.pokemon {return false}
    if lhs.pokeCandy != rhs.pokeCandy {return false}
    if lhs.stardust != rhs.stardust {return false}
    if lhs.pokecoins != rhs.pokecoins {return false}
    if lhs.badges != rhs.badges {return false}
    if lhs.redeemedStickers != rhs.redeemedStickers {return false}
    if lhs.questIds != rhs.questIds {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
