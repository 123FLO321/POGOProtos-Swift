// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Titan/TitanGameClientTelemetryOmni.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Titan_TitanGameClientTelemetryOmni {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var telemetryData: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.OneOf_TelemetryData? = nil

  public var poiSubmissionTelemetry: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry {
    get {
      if case .poiSubmissionTelemetry(let v)? = telemetryData {return v}
      return POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry()
    }
    set {telemetryData = .poiSubmissionTelemetry(newValue)}
  }

  public var poiSubmissionPhotoUploadErrorTelemetry: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry {
    get {
      if case .poiSubmissionPhotoUploadErrorTelemetry(let v)? = telemetryData {return v}
      return POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry()
    }
    set {telemetryData = .poiSubmissionPhotoUploadErrorTelemetry(newValue)}
  }

  public var playerMetadataTelemetry: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry {
    get {
      if case .playerMetadataTelemetry(let v)? = telemetryData {return v}
      return POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry()
    }
    set {telemetryData = .playerMetadataTelemetry(newValue)}
  }

  public var serverData: POGOProtos_Data_Telemetry_PlatformServerData {
    get {return _serverData ?? POGOProtos_Data_Telemetry_PlatformServerData()}
    set {_serverData = newValue}
  }
  /// Returns true if `serverData` has been explicitly set.
  public var hasServerData: Bool {return self._serverData != nil}
  /// Clears the value of `serverData`. Subsequent reads from it will return its default value.
  public mutating func clearServerData() {self._serverData = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OneOf_TelemetryData: Equatable {
    case poiSubmissionTelemetry(POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry)
    case poiSubmissionPhotoUploadErrorTelemetry(POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry)
    case playerMetadataTelemetry(POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry)

  #if !swift(>=4.1)
    public static func ==(lhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.OneOf_TelemetryData, rhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.OneOf_TelemetryData) -> Bool {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch (lhs, rhs) {
      case (.poiSubmissionTelemetry, .poiSubmissionTelemetry): return {
        guard case .poiSubmissionTelemetry(let l) = lhs, case .poiSubmissionTelemetry(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.poiSubmissionPhotoUploadErrorTelemetry, .poiSubmissionPhotoUploadErrorTelemetry): return {
        guard case .poiSubmissionPhotoUploadErrorTelemetry(let l) = lhs, case .poiSubmissionPhotoUploadErrorTelemetry(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.playerMetadataTelemetry, .playerMetadataTelemetry): return {
        guard case .playerMetadataTelemetry(let l) = lhs, case .playerMetadataTelemetry(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      default: return false
      }
    }
  #endif
  }

  public struct PoiPlayerMetadataTelemetry {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var deviceModel: String = String()

    public var deviceOs: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct PoiSubmissionPhotoUploadErrorTelemetry {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var errorID: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry.PoiSubmissionPhotoUploadErrorIds = .unset

    public var imageType: POGOProtos_Enums_PoiImageType = .unset

    public var errorMessage: String = String()

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum PoiSubmissionPhotoUploadErrorIds: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unset // = 0
      case poiPhotoUploadError // = 1
      case poiPhotoUploadTimeout // = 2
      case UNRECOGNIZED(Int)

      public init() {
        self = .unset
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unset
        case 1: self = .poiPhotoUploadError
        case 2: self = .poiPhotoUploadTimeout
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unset: return 0
        case .poiPhotoUploadError: return 1
        case .poiPhotoUploadTimeout: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}
  }

  public struct PoiSubmissionTelemetry {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var guiEventID: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiSubmissionGuiEventId = .unknown

    public var imageType: POGOProtos_Enums_PoiImageType = .unset

    public var cameraStepID: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiCameraStepIds = .unset

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum PoiCameraStepIds: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unset // = 0
      case enter // = 1
      case retake // = 2
      case confirm // = 3
      case exit // = 4
      case UNRECOGNIZED(Int)

      public init() {
        self = .unset
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unset
        case 1: self = .enter
        case 2: self = .retake
        case 3: self = .confirm
        case 4: self = .exit
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unset: return 0
        case .enter: return 1
        case .retake: return 2
        case .confirm: return 3
        case .exit: return 4
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public enum PoiSubmissionGuiEventId: SwiftProtobuf.Enum {
      public typealias RawValue = Int
      case unknown // = 0
      case poiNominationEnter // = 1
      case poiTutorialComplete // = 2
      case poiMapChangedviewMap // = 3
      case poiMapChangedviewSatellite // = 4
      case poiMapCenterLocation // = 5
      case poiLocationSet // = 6
      case poiPhotoCameraEnter // = 7
      case poiPhotoCameraExit // = 8
      case poiTitleEntered // = 9
      case poiDescriptionEnter // = 10
      case poiDetailsConfirm // = 11
      case poiSupportinginfoEnter // = 12
      case poiSubmitButtonHit // = 13
      case poiExitButtonHit // = 14
      case UNRECOGNIZED(Int)

      public init() {
        self = .unknown
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unknown
        case 1: self = .poiNominationEnter
        case 2: self = .poiTutorialComplete
        case 3: self = .poiMapChangedviewMap
        case 4: self = .poiMapChangedviewSatellite
        case 5: self = .poiMapCenterLocation
        case 6: self = .poiLocationSet
        case 7: self = .poiPhotoCameraEnter
        case 8: self = .poiPhotoCameraExit
        case 9: self = .poiTitleEntered
        case 10: self = .poiDescriptionEnter
        case 11: self = .poiDetailsConfirm
        case 12: self = .poiSupportinginfoEnter
        case 13: self = .poiSubmitButtonHit
        case 14: self = .poiExitButtonHit
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unknown: return 0
        case .poiNominationEnter: return 1
        case .poiTutorialComplete: return 2
        case .poiMapChangedviewMap: return 3
        case .poiMapChangedviewSatellite: return 4
        case .poiMapCenterLocation: return 5
        case .poiLocationSet: return 6
        case .poiPhotoCameraEnter: return 7
        case .poiPhotoCameraExit: return 8
        case .poiTitleEntered: return 9
        case .poiDescriptionEnter: return 10
        case .poiDetailsConfirm: return 11
        case .poiSupportinginfoEnter: return 12
        case .poiSubmitButtonHit: return 13
        case .poiExitButtonHit: return 14
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}
  }

  public init() {}

  fileprivate var _serverData: POGOProtos_Data_Telemetry_PlatformServerData? = nil
}

#if swift(>=4.2)

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry.PoiSubmissionPhotoUploadErrorIds: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry.PoiSubmissionPhotoUploadErrorIds] = [
    .unset,
    .poiPhotoUploadError,
    .poiPhotoUploadTimeout,
  ]
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiCameraStepIds: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiCameraStepIds] = [
    .unset,
    .enter,
    .retake,
    .confirm,
    .exit,
  ]
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiSubmissionGuiEventId: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiSubmissionGuiEventId] = [
    .unknown,
    .poiNominationEnter,
    .poiTutorialComplete,
    .poiMapChangedviewMap,
    .poiMapChangedviewSatellite,
    .poiMapCenterLocation,
    .poiLocationSet,
    .poiPhotoCameraEnter,
    .poiPhotoCameraExit,
    .poiTitleEntered,
    .poiDescriptionEnter,
    .poiDetailsConfirm,
    .poiSupportinginfoEnter,
    .poiSubmitButtonHit,
    .poiExitButtonHit,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Titan"

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".TitanGameClientTelemetryOmni"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "poi_submission_telemetry"),
    2: .standard(proto: "poi_submission_photo_upload_error_telemetry"),
    3: .standard(proto: "player_metadata_telemetry"),
    1001: .standard(proto: "server_data"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try {
        var v: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry?
        if let current = self.telemetryData {
          try decoder.handleConflictingOneOf()
          if case .poiSubmissionTelemetry(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.telemetryData = .poiSubmissionTelemetry(v)}
      }()
      case 2: try {
        var v: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry?
        if let current = self.telemetryData {
          try decoder.handleConflictingOneOf()
          if case .poiSubmissionPhotoUploadErrorTelemetry(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.telemetryData = .poiSubmissionPhotoUploadErrorTelemetry(v)}
      }()
      case 3: try {
        var v: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry?
        if let current = self.telemetryData {
          try decoder.handleConflictingOneOf()
          if case .playerMetadataTelemetry(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.telemetryData = .playerMetadataTelemetry(v)}
      }()
      case 1001: try { try decoder.decodeSingularMessageField(value: &self._serverData) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every case branch when no optimizations are
    // enabled. https://github.com/apple/swift-protobuf/issues/1034
    switch self.telemetryData {
    case .poiSubmissionTelemetry?: try {
      guard case .poiSubmissionTelemetry(let v)? = self.telemetryData else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }()
    case .poiSubmissionPhotoUploadErrorTelemetry?: try {
      guard case .poiSubmissionPhotoUploadErrorTelemetry(let v)? = self.telemetryData else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }()
    case .playerMetadataTelemetry?: try {
      guard case .playerMetadataTelemetry(let v)? = self.telemetryData else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }()
    case nil: break
    }
    if let v = self._serverData {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1001)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni, rhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni) -> Bool {
    if lhs.telemetryData != rhs.telemetryData {return false}
    if lhs._serverData != rhs._serverData {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.protoMessageName + ".PoiPlayerMetadataTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "device_model"),
    2: .standard(proto: "device_os"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.deviceModel) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.deviceOs) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.deviceModel.isEmpty {
      try visitor.visitSingularStringField(value: self.deviceModel, fieldNumber: 1)
    }
    if !self.deviceOs.isEmpty {
      try visitor.visitSingularStringField(value: self.deviceOs, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry, rhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiPlayerMetadataTelemetry) -> Bool {
    if lhs.deviceModel != rhs.deviceModel {return false}
    if lhs.deviceOs != rhs.deviceOs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.protoMessageName + ".PoiSubmissionPhotoUploadErrorTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "error_id"),
    2: .standard(proto: "image_type"),
    3: .standard(proto: "error_message"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.errorID) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.imageType) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.errorMessage) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.errorID != .unset {
      try visitor.visitSingularEnumField(value: self.errorID, fieldNumber: 1)
    }
    if self.imageType != .unset {
      try visitor.visitSingularEnumField(value: self.imageType, fieldNumber: 2)
    }
    if !self.errorMessage.isEmpty {
      try visitor.visitSingularStringField(value: self.errorMessage, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry, rhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry) -> Bool {
    if lhs.errorID != rhs.errorID {return false}
    if lhs.imageType != rhs.imageType {return false}
    if lhs.errorMessage != rhs.errorMessage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionPhotoUploadErrorTelemetry.PoiSubmissionPhotoUploadErrorIds: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "POI_PHOTO_UPLOAD_ERROR"),
    2: .same(proto: "POI_PHOTO_UPLOAD_TIMEOUT"),
  ]
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.protoMessageName + ".PoiSubmissionTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "gui_event_id"),
    2: .standard(proto: "image_type"),
    3: .standard(proto: "camera_step_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.guiEventID) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.imageType) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.cameraStepID) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.guiEventID != .unknown {
      try visitor.visitSingularEnumField(value: self.guiEventID, fieldNumber: 1)
    }
    if self.imageType != .unset {
      try visitor.visitSingularEnumField(value: self.imageType, fieldNumber: 2)
    }
    if self.cameraStepID != .unset {
      try visitor.visitSingularEnumField(value: self.cameraStepID, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry, rhs: POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry) -> Bool {
    if lhs.guiEventID != rhs.guiEventID {return false}
    if lhs.imageType != rhs.imageType {return false}
    if lhs.cameraStepID != rhs.cameraStepID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiCameraStepIds: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "ENTER"),
    2: .same(proto: "RETAKE"),
    3: .same(proto: "CONFIRM"),
    4: .same(proto: "EXIT"),
  ]
}

extension POGOProtos_Data_Titan_TitanGameClientTelemetryOmni.PoiSubmissionTelemetry.PoiSubmissionGuiEventId: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN"),
    1: .same(proto: "POI_NOMINATION_ENTER"),
    2: .same(proto: "POI_TUTORIAL_COMPLETE"),
    3: .same(proto: "POI_MAP_CHANGEDVIEW_MAP"),
    4: .same(proto: "POI_MAP_CHANGEDVIEW_SATELLITE"),
    5: .same(proto: "POI_MAP_CENTER_LOCATION"),
    6: .same(proto: "POI_LOCATION_SET"),
    7: .same(proto: "POI_PHOTO_CAMERA_ENTER"),
    8: .same(proto: "POI_PHOTO_CAMERA_EXIT"),
    9: .same(proto: "POI_TITLE_ENTERED"),
    10: .same(proto: "POI_DESCRIPTION_ENTER"),
    11: .same(proto: "POI_DETAILS_CONFIRM"),
    12: .same(proto: "POI_SUPPORTINGINFO_ENTER"),
    13: .same(proto: "POI_SUBMIT_BUTTON_HIT"),
    14: .same(proto: "POI_EXIT_BUTTON_HIT"),
  ]
}
