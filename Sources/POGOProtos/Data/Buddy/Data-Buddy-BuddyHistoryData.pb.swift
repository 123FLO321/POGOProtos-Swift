// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Buddy/BuddyHistoryData.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Buddy_BuddyHistoryData {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var pokemonID: UInt64 {
    get {return _storage._pokemonID}
    set {_uniqueStorage()._pokemonID = newValue}
  }

  public var pokedexID: POGOProtos_Enums_PokemonId {
    get {return _storage._pokedexID}
    set {_uniqueStorage()._pokedexID = newValue}
  }

  public var pokemonDisplay: POGOProtos_Data_PokemonDisplay {
    get {return _storage._pokemonDisplay ?? POGOProtos_Data_PokemonDisplay()}
    set {_uniqueStorage()._pokemonDisplay = newValue}
  }
  /// Returns true if `pokemonDisplay` has been explicitly set.
  public var hasPokemonDisplay: Bool {return _storage._pokemonDisplay != nil}
  /// Clears the value of `pokemonDisplay`. Subsequent reads from it will return its default value.
  public mutating func clearPokemonDisplay() {_uniqueStorage()._pokemonDisplay = nil}

  public var hatchedFromEgg: Bool {
    get {return _storage._hatchedFromEgg}
    set {_uniqueStorage()._hatchedFromEgg = newValue}
  }

  public var nickname: String {
    get {return _storage._nickname}
    set {_uniqueStorage()._nickname = newValue}
  }

  public var capturedS2CellID: Int64 {
    get {return _storage._capturedS2CellID}
    set {_uniqueStorage()._capturedS2CellID = newValue}
  }

  public var creationTimestampMs: Int64 {
    get {return _storage._creationTimestampMs}
    set {_uniqueStorage()._creationTimestampMs = newValue}
  }

  public var pokeball: POGOProtos_Inventory_Item_ItemId {
    get {return _storage._pokeball}
    set {_uniqueStorage()._pokeball = newValue}
  }

  public var totalStats: POGOProtos_Data_Buddy_BuddyStats {
    get {return _storage._totalStats ?? POGOProtos_Data_Buddy_BuddyStats()}
    set {_uniqueStorage()._totalStats = newValue}
  }
  /// Returns true if `totalStats` has been explicitly set.
  public var hasTotalStats: Bool {return _storage._totalStats != nil}
  /// Clears the value of `totalStats`. Subsequent reads from it will return its default value.
  public mutating func clearTotalStats() {_uniqueStorage()._totalStats = nil}

  public var currentPointsEarned: Int32 {
    get {return _storage._currentPointsEarned}
    set {_uniqueStorage()._currentPointsEarned = newValue}
  }

  public var lastSetTimestampMs: Int64 {
    get {return _storage._lastSetTimestampMs}
    set {_uniqueStorage()._lastSetTimestampMs = newValue}
  }

  public var lastUnsetTimestampMs: Int64 {
    get {return _storage._lastUnsetTimestampMs}
    set {_uniqueStorage()._lastUnsetTimestampMs = newValue}
  }

  public var numDaysSpentWithBuddy: Int32 {
    get {return _storage._numDaysSpentWithBuddy}
    set {_uniqueStorage()._numDaysSpentWithBuddy = newValue}
  }

  public var ditched: Bool {
    get {return _storage._ditched}
    set {_uniqueStorage()._ditched = newValue}
  }

  public var originalOwnerNickname: String {
    get {return _storage._originalOwnerNickname}
    set {_uniqueStorage()._originalOwnerNickname = newValue}
  }

  public var tradedTimeMs: Int64 {
    get {return _storage._tradedTimeMs}
    set {_uniqueStorage()._tradedTimeMs = newValue}
  }

  public var souvenirsCollected: Dictionary<Int32,POGOProtos_Data_Souvenir> {
    get {return _storage._souvenirsCollected}
    set {_uniqueStorage()._souvenirsCollected = newValue}
  }

  public var kmCandyProgress: Float {
    get {return _storage._kmCandyProgress}
    set {_uniqueStorage()._kmCandyProgress = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Buddy"

extension POGOProtos_Data_Buddy_BuddyHistoryData: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BuddyHistoryData"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
    2: .standard(proto: "pokedex_id"),
    3: .standard(proto: "pokemon_display"),
    4: .standard(proto: "hatched_from_egg"),
    5: .same(proto: "nickname"),
    6: .standard(proto: "captured_s2_cell_id"),
    7: .standard(proto: "creation_timestamp_ms"),
    8: .same(proto: "pokeball"),
    9: .standard(proto: "total_stats"),
    10: .standard(proto: "current_points_earned"),
    11: .standard(proto: "last_set_timestamp_ms"),
    12: .standard(proto: "last_unset_timestamp_ms"),
    13: .standard(proto: "num_days_spent_with_buddy"),
    14: .same(proto: "ditched"),
    15: .standard(proto: "original_owner_nickname"),
    16: .standard(proto: "traded_time_ms"),
    17: .standard(proto: "souvenirs_collected"),
    18: .standard(proto: "km_candy_progress"),
  ]

  fileprivate class _StorageClass {
    var _pokemonID: UInt64 = 0
    var _pokedexID: POGOProtos_Enums_PokemonId = .missingno
    var _pokemonDisplay: POGOProtos_Data_PokemonDisplay? = nil
    var _hatchedFromEgg: Bool = false
    var _nickname: String = String()
    var _capturedS2CellID: Int64 = 0
    var _creationTimestampMs: Int64 = 0
    var _pokeball: POGOProtos_Inventory_Item_ItemId = .itemUnknown
    var _totalStats: POGOProtos_Data_Buddy_BuddyStats? = nil
    var _currentPointsEarned: Int32 = 0
    var _lastSetTimestampMs: Int64 = 0
    var _lastUnsetTimestampMs: Int64 = 0
    var _numDaysSpentWithBuddy: Int32 = 0
    var _ditched: Bool = false
    var _originalOwnerNickname: String = String()
    var _tradedTimeMs: Int64 = 0
    var _souvenirsCollected: Dictionary<Int32,POGOProtos_Data_Souvenir> = [:]
    var _kmCandyProgress: Float = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _pokemonID = source._pokemonID
      _pokedexID = source._pokedexID
      _pokemonDisplay = source._pokemonDisplay
      _hatchedFromEgg = source._hatchedFromEgg
      _nickname = source._nickname
      _capturedS2CellID = source._capturedS2CellID
      _creationTimestampMs = source._creationTimestampMs
      _pokeball = source._pokeball
      _totalStats = source._totalStats
      _currentPointsEarned = source._currentPointsEarned
      _lastSetTimestampMs = source._lastSetTimestampMs
      _lastUnsetTimestampMs = source._lastUnsetTimestampMs
      _numDaysSpentWithBuddy = source._numDaysSpentWithBuddy
      _ditched = source._ditched
      _originalOwnerNickname = source._originalOwnerNickname
      _tradedTimeMs = source._tradedTimeMs
      _souvenirsCollected = source._souvenirsCollected
      _kmCandyProgress = source._kmCandyProgress
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularFixed64Field(value: &_storage._pokemonID) }()
        case 2: try { try decoder.decodeSingularEnumField(value: &_storage._pokedexID) }()
        case 3: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonDisplay) }()
        case 4: try { try decoder.decodeSingularBoolField(value: &_storage._hatchedFromEgg) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._nickname) }()
        case 6: try { try decoder.decodeSingularInt64Field(value: &_storage._capturedS2CellID) }()
        case 7: try { try decoder.decodeSingularInt64Field(value: &_storage._creationTimestampMs) }()
        case 8: try { try decoder.decodeSingularEnumField(value: &_storage._pokeball) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._totalStats) }()
        case 10: try { try decoder.decodeSingularInt32Field(value: &_storage._currentPointsEarned) }()
        case 11: try { try decoder.decodeSingularInt64Field(value: &_storage._lastSetTimestampMs) }()
        case 12: try { try decoder.decodeSingularInt64Field(value: &_storage._lastUnsetTimestampMs) }()
        case 13: try { try decoder.decodeSingularInt32Field(value: &_storage._numDaysSpentWithBuddy) }()
        case 14: try { try decoder.decodeSingularBoolField(value: &_storage._ditched) }()
        case 15: try { try decoder.decodeSingularStringField(value: &_storage._originalOwnerNickname) }()
        case 16: try { try decoder.decodeSingularInt64Field(value: &_storage._tradedTimeMs) }()
        case 17: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Souvenir>.self, value: &_storage._souvenirsCollected) }()
        case 18: try { try decoder.decodeSingularFloatField(value: &_storage._kmCandyProgress) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._pokemonID != 0 {
        try visitor.visitSingularFixed64Field(value: _storage._pokemonID, fieldNumber: 1)
      }
      if _storage._pokedexID != .missingno {
        try visitor.visitSingularEnumField(value: _storage._pokedexID, fieldNumber: 2)
      }
      if let v = _storage._pokemonDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if _storage._hatchedFromEgg != false {
        try visitor.visitSingularBoolField(value: _storage._hatchedFromEgg, fieldNumber: 4)
      }
      if !_storage._nickname.isEmpty {
        try visitor.visitSingularStringField(value: _storage._nickname, fieldNumber: 5)
      }
      if _storage._capturedS2CellID != 0 {
        try visitor.visitSingularInt64Field(value: _storage._capturedS2CellID, fieldNumber: 6)
      }
      if _storage._creationTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._creationTimestampMs, fieldNumber: 7)
      }
      if _storage._pokeball != .itemUnknown {
        try visitor.visitSingularEnumField(value: _storage._pokeball, fieldNumber: 8)
      }
      if let v = _storage._totalStats {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if _storage._currentPointsEarned != 0 {
        try visitor.visitSingularInt32Field(value: _storage._currentPointsEarned, fieldNumber: 10)
      }
      if _storage._lastSetTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastSetTimestampMs, fieldNumber: 11)
      }
      if _storage._lastUnsetTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastUnsetTimestampMs, fieldNumber: 12)
      }
      if _storage._numDaysSpentWithBuddy != 0 {
        try visitor.visitSingularInt32Field(value: _storage._numDaysSpentWithBuddy, fieldNumber: 13)
      }
      if _storage._ditched != false {
        try visitor.visitSingularBoolField(value: _storage._ditched, fieldNumber: 14)
      }
      if !_storage._originalOwnerNickname.isEmpty {
        try visitor.visitSingularStringField(value: _storage._originalOwnerNickname, fieldNumber: 15)
      }
      if _storage._tradedTimeMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._tradedTimeMs, fieldNumber: 16)
      }
      if !_storage._souvenirsCollected.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Souvenir>.self, value: _storage._souvenirsCollected, fieldNumber: 17)
      }
      if _storage._kmCandyProgress != 0 {
        try visitor.visitSingularFloatField(value: _storage._kmCandyProgress, fieldNumber: 18)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Buddy_BuddyHistoryData, rhs: POGOProtos_Data_Buddy_BuddyHistoryData) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._pokemonID != rhs_storage._pokemonID {return false}
        if _storage._pokedexID != rhs_storage._pokedexID {return false}
        if _storage._pokemonDisplay != rhs_storage._pokemonDisplay {return false}
        if _storage._hatchedFromEgg != rhs_storage._hatchedFromEgg {return false}
        if _storage._nickname != rhs_storage._nickname {return false}
        if _storage._capturedS2CellID != rhs_storage._capturedS2CellID {return false}
        if _storage._creationTimestampMs != rhs_storage._creationTimestampMs {return false}
        if _storage._pokeball != rhs_storage._pokeball {return false}
        if _storage._totalStats != rhs_storage._totalStats {return false}
        if _storage._currentPointsEarned != rhs_storage._currentPointsEarned {return false}
        if _storage._lastSetTimestampMs != rhs_storage._lastSetTimestampMs {return false}
        if _storage._lastUnsetTimestampMs != rhs_storage._lastUnsetTimestampMs {return false}
        if _storage._numDaysSpentWithBuddy != rhs_storage._numDaysSpentWithBuddy {return false}
        if _storage._ditched != rhs_storage._ditched {return false}
        if _storage._originalOwnerNickname != rhs_storage._originalOwnerNickname {return false}
        if _storage._tradedTimeMs != rhs_storage._tradedTimeMs {return false}
        if _storage._souvenirsCollected != rhs_storage._souvenirsCollected {return false}
        if _storage._kmCandyProgress != rhs_storage._kmCandyProgress {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
