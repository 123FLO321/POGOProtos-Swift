// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Buddy/BuddyData.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Buddy_BuddyData {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var buddyPokemonID: UInt64 {
    get {return _storage._buddyPokemonID}
    set {_uniqueStorage()._buddyPokemonID = newValue}
  }

  public var currentPointsEarned: Int32 {
    get {return _storage._currentPointsEarned}
    set {_uniqueStorage()._currentPointsEarned = newValue}
  }

  public var highestPointsEarned: Int32 {
    get {return _storage._highestPointsEarned}
    set {_uniqueStorage()._highestPointsEarned = newValue}
  }

  public var lastReachedFullMs: Int64 {
    get {return _storage._lastReachedFullMs}
    set {_uniqueStorage()._lastReachedFullMs = newValue}
  }

  public var lastGroomedMs: Int64 {
    get {return _storage._lastGroomedMs}
    set {_uniqueStorage()._lastGroomedMs = newValue}
  }

  public var mapExpirationMs: Int64 {
    get {return _storage._mapExpirationMs}
    set {_uniqueStorage()._mapExpirationMs = newValue}
  }

  public var kmCandyPending: Float {
    get {return _storage._kmCandyPending}
    set {_uniqueStorage()._kmCandyPending = newValue}
  }

  public var buddyGiftPickedUp: POGOProtos_Data_Buddy_BuddyGift {
    get {return _storage._buddyGiftPickedUp ?? POGOProtos_Data_Buddy_BuddyGift()}
    set {_uniqueStorage()._buddyGiftPickedUp = newValue}
  }
  /// Returns true if `buddyGiftPickedUp` has been explicitly set.
  public var hasBuddyGiftPickedUp: Bool {return _storage._buddyGiftPickedUp != nil}
  /// Clears the value of `buddyGiftPickedUp`. Subsequent reads from it will return its default value.
  public mutating func clearBuddyGiftPickedUp() {_uniqueStorage()._buddyGiftPickedUp = nil}

  public var currentEmotionPoints: Int32 {
    get {return _storage._currentEmotionPoints}
    set {_uniqueStorage()._currentEmotionPoints = newValue}
  }

  public var dailyActivityCounters: Dictionary<Int32,POGOProtos_Data_Quests_Quest.DailyCounter> {
    get {return _storage._dailyActivityCounters}
    set {_uniqueStorage()._dailyActivityCounters = newValue}
  }

  public var dailyCategoryCounters: Dictionary<Int32,POGOProtos_Data_Quests_Quest.DailyCounter> {
    get {return _storage._dailyCategoryCounters}
    set {_uniqueStorage()._dailyCategoryCounters = newValue}
  }

  public var statsToday: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats {
    get {return _storage._statsToday ?? POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats()}
    set {_uniqueStorage()._statsToday = newValue}
  }
  /// Returns true if `statsToday` has been explicitly set.
  public var hasStatsToday: Bool {return _storage._statsToday != nil}
  /// Clears the value of `statsToday`. Subsequent reads from it will return its default value.
  public mutating func clearStatsToday() {_uniqueStorage()._statsToday = nil}

  public var statsTotal: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats {
    get {return _storage._statsTotal ?? POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats()}
    set {_uniqueStorage()._statsTotal = newValue}
  }
  /// Returns true if `statsTotal` has been explicitly set.
  public var hasStatsTotal: Bool {return _storage._statsTotal != nil}
  /// Clears the value of `statsTotal`. Subsequent reads from it will return its default value.
  public mutating func clearStatsTotal() {_uniqueStorage()._statsTotal = nil}

  public var souvenirsCollected: Dictionary<Int32,POGOProtos_Data_Souvenir> {
    get {return _storage._souvenirsCollected}
    set {_uniqueStorage()._souvenirsCollected = newValue}
  }

  public var currentHungerPoints: Int32 {
    get {return _storage._currentHungerPoints}
    set {_uniqueStorage()._currentHungerPoints = newValue}
  }

  public var interactionExpirationMs: Int64 {
    get {return _storage._interactionExpirationMs}
    set {_uniqueStorage()._interactionExpirationMs = newValue}
  }

  public var poffinFeedingExpirationMs: Int64 {
    get {return _storage._poffinFeedingExpirationMs}
    set {_uniqueStorage()._poffinFeedingExpirationMs = newValue}
  }

  public var lastAffectionOrEmotionAwardedKm: Float {
    get {return _storage._lastAffectionOrEmotionAwardedKm}
    set {_uniqueStorage()._lastAffectionOrEmotionAwardedKm = newValue}
  }

  public var lastSetTimestampMs: Int64 {
    get {return _storage._lastSetTimestampMs}
    set {_uniqueStorage()._lastSetTimestampMs = newValue}
  }

  public var lastUnsetTimestampMs: Int64 {
    get {return _storage._lastUnsetTimestampMs}
    set {_uniqueStorage()._lastUnsetTimestampMs = newValue}
  }

  public var ditched: Bool {
    get {return _storage._ditched}
    set {_uniqueStorage()._ditched = newValue}
  }

  public var pokemonDisplay: POGOProtos_Data_PokemonDisplay {
    get {return _storage._pokemonDisplay ?? POGOProtos_Data_PokemonDisplay()}
    set {_uniqueStorage()._pokemonDisplay = newValue}
  }
  /// Returns true if `pokemonDisplay` has been explicitly set.
  public var hasPokemonDisplay: Bool {return _storage._pokemonDisplay != nil}
  /// Clears the value of `pokemonDisplay`. Subsequent reads from it will return its default value.
  public mutating func clearPokemonDisplay() {_uniqueStorage()._pokemonDisplay = nil}

  public var hatchedFromEgg: Bool {
    get {return _storage._hatchedFromEgg}
    set {_uniqueStorage()._hatchedFromEgg = newValue}
  }

  public var nickname: String {
    get {return _storage._nickname}
    set {_uniqueStorage()._nickname = newValue}
  }

  public var capturedS2CellID: Int64 {
    get {return _storage._capturedS2CellID}
    set {_uniqueStorage()._capturedS2CellID = newValue}
  }

  public var pokedexEntryNumber: POGOProtos_Enums_PokemonId {
    get {return _storage._pokedexEntryNumber}
    set {_uniqueStorage()._pokedexEntryNumber = newValue}
  }

  public var creationTimestampMs: Int64 {
    get {return _storage._creationTimestampMs}
    set {_uniqueStorage()._creationTimestampMs = newValue}
  }

  public var pokeball: POGOProtos_Inventory_Item_ItemId {
    get {return _storage._pokeball}
    set {_uniqueStorage()._pokeball = newValue}
  }

  public var numDaysSpentWithBuddy: Int32 {
    get {return _storage._numDaysSpentWithBuddy}
    set {_uniqueStorage()._numDaysSpentWithBuddy = newValue}
  }

  public var originalOwnerNickname: String {
    get {return _storage._originalOwnerNickname}
    set {_uniqueStorage()._originalOwnerNickname = newValue}
  }

  public var tradedTimeMs: Int64 {
    get {return _storage._tradedTimeMs}
    set {_uniqueStorage()._tradedTimeMs = newValue}
  }

  public var attractivePoiID: String {
    get {return _storage._attractivePoiID}
    set {_uniqueStorage()._attractivePoiID = newValue}
  }

  public var attractivePoiTimeGenerated: Int64 {
    get {return _storage._attractivePoiTimeGenerated}
    set {_uniqueStorage()._attractivePoiTimeGenerated = newValue}
  }

  public var attractivePoiCooldownMs: Int64 {
    get {return _storage._attractivePoiCooldownMs}
    set {_uniqueStorage()._attractivePoiCooldownMs = newValue}
  }

  public var attractivePoiVisited: Bool {
    get {return _storage._attractivePoiVisited}
    set {_uniqueStorage()._attractivePoiVisited = newValue}
  }

  public var berryCooldownMs: Int64 {
    get {return _storage._berryCooldownMs}
    set {_uniqueStorage()._berryCooldownMs = newValue}
  }

  public var activityEmotionLastIncrementMs: Dictionary<Int32,Int64> {
    get {return _storage._activityEmotionLastIncrementMs}
    set {_uniqueStorage()._activityEmotionLastIncrementMs = newValue}
  }

  public var window: Int64 {
    get {return _storage._window}
    set {_uniqueStorage()._window = newValue}
  }

  public var lastFedMs: Int64 {
    get {return _storage._lastFedMs}
    set {_uniqueStorage()._lastFedMs = newValue}
  }

  public var lastWindowBuddyOnMap: Int32 {
    get {return _storage._lastWindowBuddyOnMap}
    set {_uniqueStorage()._lastWindowBuddyOnMap = newValue}
  }

  public var lastWindowFedPoffin: Int32 {
    get {return _storage._lastWindowFedPoffin}
    set {_uniqueStorage()._lastWindowFedPoffin = newValue}
  }

  public var yattaExpirationMs: Int64 {
    get {return _storage._yattaExpirationMs}
    set {_uniqueStorage()._yattaExpirationMs = newValue}
  }

  public var hungerPoints: Float {
    get {return _storage._hungerPoints}
    set {_uniqueStorage()._hungerPoints = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct BuddyStoredStats {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var window: Int64 = 0

    public var buddyStats: Dictionary<Int32,Float> = [:]

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Buddy"

extension POGOProtos_Data_Buddy_BuddyData: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BuddyData"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "buddy_pokemon_id"),
    2: .standard(proto: "current_points_earned"),
    3: .standard(proto: "highest_points_earned"),
    4: .standard(proto: "last_reached_full_ms"),
    5: .standard(proto: "last_groomed_ms"),
    7: .standard(proto: "map_expiration_ms"),
    12: .standard(proto: "km_candy_pending"),
    15: .standard(proto: "buddy_gift_picked_up"),
    18: .standard(proto: "current_emotion_points"),
    19: .standard(proto: "daily_activity_counters"),
    20: .standard(proto: "daily_category_counters"),
    21: .standard(proto: "stats_today"),
    22: .standard(proto: "stats_total"),
    23: .standard(proto: "souvenirs_collected"),
    24: .standard(proto: "current_hunger_points"),
    25: .standard(proto: "interaction_expiration_ms"),
    26: .standard(proto: "poffin_feeding_expiration_ms"),
    27: .standard(proto: "last_affection_or_emotion_awarded_km"),
    28: .standard(proto: "last_set_timestamp_ms"),
    29: .standard(proto: "last_unset_timestamp_ms"),
    30: .same(proto: "ditched"),
    31: .standard(proto: "pokemon_display"),
    32: .standard(proto: "hatched_from_egg"),
    33: .same(proto: "nickname"),
    34: .standard(proto: "captured_s2_cell_id"),
    35: .standard(proto: "pokedex_entry_number"),
    36: .standard(proto: "creation_timestamp_ms"),
    37: .same(proto: "pokeball"),
    38: .standard(proto: "num_days_spent_with_buddy"),
    39: .standard(proto: "original_owner_nickname"),
    40: .standard(proto: "traded_time_ms"),
    41: .standard(proto: "attractive_poi_id"),
    42: .standard(proto: "attractive_poi_time_generated"),
    43: .standard(proto: "attractive_poi_cooldown_ms"),
    44: .standard(proto: "attractive_poi_visited"),
    45: .standard(proto: "berry_cooldown_ms"),
    46: .standard(proto: "activity_emotion_last_increment_ms"),
    47: .same(proto: "window"),
    48: .standard(proto: "last_fed_ms"),
    49: .standard(proto: "last_window_buddy_on_map"),
    50: .standard(proto: "last_window_fed_poffin"),
    51: .standard(proto: "yatta_expiration_ms"),
    52: .standard(proto: "hunger_points"),
  ]

  fileprivate class _StorageClass {
    var _buddyPokemonID: UInt64 = 0
    var _currentPointsEarned: Int32 = 0
    var _highestPointsEarned: Int32 = 0
    var _lastReachedFullMs: Int64 = 0
    var _lastGroomedMs: Int64 = 0
    var _mapExpirationMs: Int64 = 0
    var _kmCandyPending: Float = 0
    var _buddyGiftPickedUp: POGOProtos_Data_Buddy_BuddyGift? = nil
    var _currentEmotionPoints: Int32 = 0
    var _dailyActivityCounters: Dictionary<Int32,POGOProtos_Data_Quests_Quest.DailyCounter> = [:]
    var _dailyCategoryCounters: Dictionary<Int32,POGOProtos_Data_Quests_Quest.DailyCounter> = [:]
    var _statsToday: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats? = nil
    var _statsTotal: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats? = nil
    var _souvenirsCollected: Dictionary<Int32,POGOProtos_Data_Souvenir> = [:]
    var _currentHungerPoints: Int32 = 0
    var _interactionExpirationMs: Int64 = 0
    var _poffinFeedingExpirationMs: Int64 = 0
    var _lastAffectionOrEmotionAwardedKm: Float = 0
    var _lastSetTimestampMs: Int64 = 0
    var _lastUnsetTimestampMs: Int64 = 0
    var _ditched: Bool = false
    var _pokemonDisplay: POGOProtos_Data_PokemonDisplay? = nil
    var _hatchedFromEgg: Bool = false
    var _nickname: String = String()
    var _capturedS2CellID: Int64 = 0
    var _pokedexEntryNumber: POGOProtos_Enums_PokemonId = .missingno
    var _creationTimestampMs: Int64 = 0
    var _pokeball: POGOProtos_Inventory_Item_ItemId = .itemUnknown
    var _numDaysSpentWithBuddy: Int32 = 0
    var _originalOwnerNickname: String = String()
    var _tradedTimeMs: Int64 = 0
    var _attractivePoiID: String = String()
    var _attractivePoiTimeGenerated: Int64 = 0
    var _attractivePoiCooldownMs: Int64 = 0
    var _attractivePoiVisited: Bool = false
    var _berryCooldownMs: Int64 = 0
    var _activityEmotionLastIncrementMs: Dictionary<Int32,Int64> = [:]
    var _window: Int64 = 0
    var _lastFedMs: Int64 = 0
    var _lastWindowBuddyOnMap: Int32 = 0
    var _lastWindowFedPoffin: Int32 = 0
    var _yattaExpirationMs: Int64 = 0
    var _hungerPoints: Float = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _buddyPokemonID = source._buddyPokemonID
      _currentPointsEarned = source._currentPointsEarned
      _highestPointsEarned = source._highestPointsEarned
      _lastReachedFullMs = source._lastReachedFullMs
      _lastGroomedMs = source._lastGroomedMs
      _mapExpirationMs = source._mapExpirationMs
      _kmCandyPending = source._kmCandyPending
      _buddyGiftPickedUp = source._buddyGiftPickedUp
      _currentEmotionPoints = source._currentEmotionPoints
      _dailyActivityCounters = source._dailyActivityCounters
      _dailyCategoryCounters = source._dailyCategoryCounters
      _statsToday = source._statsToday
      _statsTotal = source._statsTotal
      _souvenirsCollected = source._souvenirsCollected
      _currentHungerPoints = source._currentHungerPoints
      _interactionExpirationMs = source._interactionExpirationMs
      _poffinFeedingExpirationMs = source._poffinFeedingExpirationMs
      _lastAffectionOrEmotionAwardedKm = source._lastAffectionOrEmotionAwardedKm
      _lastSetTimestampMs = source._lastSetTimestampMs
      _lastUnsetTimestampMs = source._lastUnsetTimestampMs
      _ditched = source._ditched
      _pokemonDisplay = source._pokemonDisplay
      _hatchedFromEgg = source._hatchedFromEgg
      _nickname = source._nickname
      _capturedS2CellID = source._capturedS2CellID
      _pokedexEntryNumber = source._pokedexEntryNumber
      _creationTimestampMs = source._creationTimestampMs
      _pokeball = source._pokeball
      _numDaysSpentWithBuddy = source._numDaysSpentWithBuddy
      _originalOwnerNickname = source._originalOwnerNickname
      _tradedTimeMs = source._tradedTimeMs
      _attractivePoiID = source._attractivePoiID
      _attractivePoiTimeGenerated = source._attractivePoiTimeGenerated
      _attractivePoiCooldownMs = source._attractivePoiCooldownMs
      _attractivePoiVisited = source._attractivePoiVisited
      _berryCooldownMs = source._berryCooldownMs
      _activityEmotionLastIncrementMs = source._activityEmotionLastIncrementMs
      _window = source._window
      _lastFedMs = source._lastFedMs
      _lastWindowBuddyOnMap = source._lastWindowBuddyOnMap
      _lastWindowFedPoffin = source._lastWindowFedPoffin
      _yattaExpirationMs = source._yattaExpirationMs
      _hungerPoints = source._hungerPoints
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularFixed64Field(value: &_storage._buddyPokemonID) }()
        case 2: try { try decoder.decodeSingularInt32Field(value: &_storage._currentPointsEarned) }()
        case 3: try { try decoder.decodeSingularInt32Field(value: &_storage._highestPointsEarned) }()
        case 4: try { try decoder.decodeSingularInt64Field(value: &_storage._lastReachedFullMs) }()
        case 5: try { try decoder.decodeSingularInt64Field(value: &_storage._lastGroomedMs) }()
        case 7: try { try decoder.decodeSingularInt64Field(value: &_storage._mapExpirationMs) }()
        case 12: try { try decoder.decodeSingularFloatField(value: &_storage._kmCandyPending) }()
        case 15: try { try decoder.decodeSingularMessageField(value: &_storage._buddyGiftPickedUp) }()
        case 18: try { try decoder.decodeSingularInt32Field(value: &_storage._currentEmotionPoints) }()
        case 19: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Quests_Quest.DailyCounter>.self, value: &_storage._dailyActivityCounters) }()
        case 20: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Quests_Quest.DailyCounter>.self, value: &_storage._dailyCategoryCounters) }()
        case 21: try { try decoder.decodeSingularMessageField(value: &_storage._statsToday) }()
        case 22: try { try decoder.decodeSingularMessageField(value: &_storage._statsTotal) }()
        case 23: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Souvenir>.self, value: &_storage._souvenirsCollected) }()
        case 24: try { try decoder.decodeSingularInt32Field(value: &_storage._currentHungerPoints) }()
        case 25: try { try decoder.decodeSingularInt64Field(value: &_storage._interactionExpirationMs) }()
        case 26: try { try decoder.decodeSingularInt64Field(value: &_storage._poffinFeedingExpirationMs) }()
        case 27: try { try decoder.decodeSingularFloatField(value: &_storage._lastAffectionOrEmotionAwardedKm) }()
        case 28: try { try decoder.decodeSingularInt64Field(value: &_storage._lastSetTimestampMs) }()
        case 29: try { try decoder.decodeSingularInt64Field(value: &_storage._lastUnsetTimestampMs) }()
        case 30: try { try decoder.decodeSingularBoolField(value: &_storage._ditched) }()
        case 31: try { try decoder.decodeSingularMessageField(value: &_storage._pokemonDisplay) }()
        case 32: try { try decoder.decodeSingularBoolField(value: &_storage._hatchedFromEgg) }()
        case 33: try { try decoder.decodeSingularStringField(value: &_storage._nickname) }()
        case 34: try { try decoder.decodeSingularInt64Field(value: &_storage._capturedS2CellID) }()
        case 35: try { try decoder.decodeSingularEnumField(value: &_storage._pokedexEntryNumber) }()
        case 36: try { try decoder.decodeSingularInt64Field(value: &_storage._creationTimestampMs) }()
        case 37: try { try decoder.decodeSingularEnumField(value: &_storage._pokeball) }()
        case 38: try { try decoder.decodeSingularInt32Field(value: &_storage._numDaysSpentWithBuddy) }()
        case 39: try { try decoder.decodeSingularStringField(value: &_storage._originalOwnerNickname) }()
        case 40: try { try decoder.decodeSingularInt64Field(value: &_storage._tradedTimeMs) }()
        case 41: try { try decoder.decodeSingularStringField(value: &_storage._attractivePoiID) }()
        case 42: try { try decoder.decodeSingularInt64Field(value: &_storage._attractivePoiTimeGenerated) }()
        case 43: try { try decoder.decodeSingularInt64Field(value: &_storage._attractivePoiCooldownMs) }()
        case 44: try { try decoder.decodeSingularBoolField(value: &_storage._attractivePoiVisited) }()
        case 45: try { try decoder.decodeSingularInt64Field(value: &_storage._berryCooldownMs) }()
        case 46: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt64>.self, value: &_storage._activityEmotionLastIncrementMs) }()
        case 47: try { try decoder.decodeSingularInt64Field(value: &_storage._window) }()
        case 48: try { try decoder.decodeSingularInt64Field(value: &_storage._lastFedMs) }()
        case 49: try { try decoder.decodeSingularInt32Field(value: &_storage._lastWindowBuddyOnMap) }()
        case 50: try { try decoder.decodeSingularInt32Field(value: &_storage._lastWindowFedPoffin) }()
        case 51: try { try decoder.decodeSingularInt64Field(value: &_storage._yattaExpirationMs) }()
        case 52: try { try decoder.decodeSingularFloatField(value: &_storage._hungerPoints) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._buddyPokemonID != 0 {
        try visitor.visitSingularFixed64Field(value: _storage._buddyPokemonID, fieldNumber: 1)
      }
      if _storage._currentPointsEarned != 0 {
        try visitor.visitSingularInt32Field(value: _storage._currentPointsEarned, fieldNumber: 2)
      }
      if _storage._highestPointsEarned != 0 {
        try visitor.visitSingularInt32Field(value: _storage._highestPointsEarned, fieldNumber: 3)
      }
      if _storage._lastReachedFullMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastReachedFullMs, fieldNumber: 4)
      }
      if _storage._lastGroomedMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastGroomedMs, fieldNumber: 5)
      }
      if _storage._mapExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._mapExpirationMs, fieldNumber: 7)
      }
      if _storage._kmCandyPending != 0 {
        try visitor.visitSingularFloatField(value: _storage._kmCandyPending, fieldNumber: 12)
      }
      if let v = _storage._buddyGiftPickedUp {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if _storage._currentEmotionPoints != 0 {
        try visitor.visitSingularInt32Field(value: _storage._currentEmotionPoints, fieldNumber: 18)
      }
      if !_storage._dailyActivityCounters.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Quests_Quest.DailyCounter>.self, value: _storage._dailyActivityCounters, fieldNumber: 19)
      }
      if !_storage._dailyCategoryCounters.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Quests_Quest.DailyCounter>.self, value: _storage._dailyCategoryCounters, fieldNumber: 20)
      }
      if let v = _storage._statsToday {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._statsTotal {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if !_storage._souvenirsCollected.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufInt32,POGOProtos_Data_Souvenir>.self, value: _storage._souvenirsCollected, fieldNumber: 23)
      }
      if _storage._currentHungerPoints != 0 {
        try visitor.visitSingularInt32Field(value: _storage._currentHungerPoints, fieldNumber: 24)
      }
      if _storage._interactionExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._interactionExpirationMs, fieldNumber: 25)
      }
      if _storage._poffinFeedingExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._poffinFeedingExpirationMs, fieldNumber: 26)
      }
      if _storage._lastAffectionOrEmotionAwardedKm != 0 {
        try visitor.visitSingularFloatField(value: _storage._lastAffectionOrEmotionAwardedKm, fieldNumber: 27)
      }
      if _storage._lastSetTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastSetTimestampMs, fieldNumber: 28)
      }
      if _storage._lastUnsetTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastUnsetTimestampMs, fieldNumber: 29)
      }
      if _storage._ditched != false {
        try visitor.visitSingularBoolField(value: _storage._ditched, fieldNumber: 30)
      }
      if let v = _storage._pokemonDisplay {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if _storage._hatchedFromEgg != false {
        try visitor.visitSingularBoolField(value: _storage._hatchedFromEgg, fieldNumber: 32)
      }
      if !_storage._nickname.isEmpty {
        try visitor.visitSingularStringField(value: _storage._nickname, fieldNumber: 33)
      }
      if _storage._capturedS2CellID != 0 {
        try visitor.visitSingularInt64Field(value: _storage._capturedS2CellID, fieldNumber: 34)
      }
      if _storage._pokedexEntryNumber != .missingno {
        try visitor.visitSingularEnumField(value: _storage._pokedexEntryNumber, fieldNumber: 35)
      }
      if _storage._creationTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._creationTimestampMs, fieldNumber: 36)
      }
      if _storage._pokeball != .itemUnknown {
        try visitor.visitSingularEnumField(value: _storage._pokeball, fieldNumber: 37)
      }
      if _storage._numDaysSpentWithBuddy != 0 {
        try visitor.visitSingularInt32Field(value: _storage._numDaysSpentWithBuddy, fieldNumber: 38)
      }
      if !_storage._originalOwnerNickname.isEmpty {
        try visitor.visitSingularStringField(value: _storage._originalOwnerNickname, fieldNumber: 39)
      }
      if _storage._tradedTimeMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._tradedTimeMs, fieldNumber: 40)
      }
      if !_storage._attractivePoiID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._attractivePoiID, fieldNumber: 41)
      }
      if _storage._attractivePoiTimeGenerated != 0 {
        try visitor.visitSingularInt64Field(value: _storage._attractivePoiTimeGenerated, fieldNumber: 42)
      }
      if _storage._attractivePoiCooldownMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._attractivePoiCooldownMs, fieldNumber: 43)
      }
      if _storage._attractivePoiVisited != false {
        try visitor.visitSingularBoolField(value: _storage._attractivePoiVisited, fieldNumber: 44)
      }
      if _storage._berryCooldownMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._berryCooldownMs, fieldNumber: 45)
      }
      if !_storage._activityEmotionLastIncrementMs.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufInt64>.self, value: _storage._activityEmotionLastIncrementMs, fieldNumber: 46)
      }
      if _storage._window != 0 {
        try visitor.visitSingularInt64Field(value: _storage._window, fieldNumber: 47)
      }
      if _storage._lastFedMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._lastFedMs, fieldNumber: 48)
      }
      if _storage._lastWindowBuddyOnMap != 0 {
        try visitor.visitSingularInt32Field(value: _storage._lastWindowBuddyOnMap, fieldNumber: 49)
      }
      if _storage._lastWindowFedPoffin != 0 {
        try visitor.visitSingularInt32Field(value: _storage._lastWindowFedPoffin, fieldNumber: 50)
      }
      if _storage._yattaExpirationMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._yattaExpirationMs, fieldNumber: 51)
      }
      if _storage._hungerPoints != 0 {
        try visitor.visitSingularFloatField(value: _storage._hungerPoints, fieldNumber: 52)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Buddy_BuddyData, rhs: POGOProtos_Data_Buddy_BuddyData) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._buddyPokemonID != rhs_storage._buddyPokemonID {return false}
        if _storage._currentPointsEarned != rhs_storage._currentPointsEarned {return false}
        if _storage._highestPointsEarned != rhs_storage._highestPointsEarned {return false}
        if _storage._lastReachedFullMs != rhs_storage._lastReachedFullMs {return false}
        if _storage._lastGroomedMs != rhs_storage._lastGroomedMs {return false}
        if _storage._mapExpirationMs != rhs_storage._mapExpirationMs {return false}
        if _storage._kmCandyPending != rhs_storage._kmCandyPending {return false}
        if _storage._buddyGiftPickedUp != rhs_storage._buddyGiftPickedUp {return false}
        if _storage._currentEmotionPoints != rhs_storage._currentEmotionPoints {return false}
        if _storage._dailyActivityCounters != rhs_storage._dailyActivityCounters {return false}
        if _storage._dailyCategoryCounters != rhs_storage._dailyCategoryCounters {return false}
        if _storage._statsToday != rhs_storage._statsToday {return false}
        if _storage._statsTotal != rhs_storage._statsTotal {return false}
        if _storage._souvenirsCollected != rhs_storage._souvenirsCollected {return false}
        if _storage._currentHungerPoints != rhs_storage._currentHungerPoints {return false}
        if _storage._interactionExpirationMs != rhs_storage._interactionExpirationMs {return false}
        if _storage._poffinFeedingExpirationMs != rhs_storage._poffinFeedingExpirationMs {return false}
        if _storage._lastAffectionOrEmotionAwardedKm != rhs_storage._lastAffectionOrEmotionAwardedKm {return false}
        if _storage._lastSetTimestampMs != rhs_storage._lastSetTimestampMs {return false}
        if _storage._lastUnsetTimestampMs != rhs_storage._lastUnsetTimestampMs {return false}
        if _storage._ditched != rhs_storage._ditched {return false}
        if _storage._pokemonDisplay != rhs_storage._pokemonDisplay {return false}
        if _storage._hatchedFromEgg != rhs_storage._hatchedFromEgg {return false}
        if _storage._nickname != rhs_storage._nickname {return false}
        if _storage._capturedS2CellID != rhs_storage._capturedS2CellID {return false}
        if _storage._pokedexEntryNumber != rhs_storage._pokedexEntryNumber {return false}
        if _storage._creationTimestampMs != rhs_storage._creationTimestampMs {return false}
        if _storage._pokeball != rhs_storage._pokeball {return false}
        if _storage._numDaysSpentWithBuddy != rhs_storage._numDaysSpentWithBuddy {return false}
        if _storage._originalOwnerNickname != rhs_storage._originalOwnerNickname {return false}
        if _storage._tradedTimeMs != rhs_storage._tradedTimeMs {return false}
        if _storage._attractivePoiID != rhs_storage._attractivePoiID {return false}
        if _storage._attractivePoiTimeGenerated != rhs_storage._attractivePoiTimeGenerated {return false}
        if _storage._attractivePoiCooldownMs != rhs_storage._attractivePoiCooldownMs {return false}
        if _storage._attractivePoiVisited != rhs_storage._attractivePoiVisited {return false}
        if _storage._berryCooldownMs != rhs_storage._berryCooldownMs {return false}
        if _storage._activityEmotionLastIncrementMs != rhs_storage._activityEmotionLastIncrementMs {return false}
        if _storage._window != rhs_storage._window {return false}
        if _storage._lastFedMs != rhs_storage._lastFedMs {return false}
        if _storage._lastWindowBuddyOnMap != rhs_storage._lastWindowBuddyOnMap {return false}
        if _storage._lastWindowFedPoffin != rhs_storage._lastWindowFedPoffin {return false}
        if _storage._yattaExpirationMs != rhs_storage._yattaExpirationMs {return false}
        if _storage._hungerPoints != rhs_storage._hungerPoints {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Buddy_BuddyData.protoMessageName + ".BuddyStoredStats"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "window"),
    2: .standard(proto: "buddy_stats"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.window) }()
      case 2: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, value: &self.buddyStats) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.window != 0 {
      try visitor.visitSingularInt64Field(value: self.window, fieldNumber: 1)
    }
    if !self.buddyStats.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufInt32,SwiftProtobuf.ProtobufFloat>.self, value: self.buddyStats, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats, rhs: POGOProtos_Data_Buddy_BuddyData.BuddyStoredStats) -> Bool {
    if lhs.window != rhs.window {return false}
    if lhs.buddyStats != rhs.buddyStats {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
