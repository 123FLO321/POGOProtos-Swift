// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Friends/PlayerFriendDisplay.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Friends_PlayerFriendDisplay {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var buddy: POGOProtos_Data_PokemonDisplay {
    get {return _buddy ?? POGOProtos_Data_PokemonDisplay()}
    set {_buddy = newValue}
  }
  /// Returns true if `buddy` has been explicitly set.
  public var hasBuddy: Bool {return self._buddy != nil}
  /// Clears the value of `buddy`. Subsequent reads from it will return its default value.
  public mutating func clearBuddy() {self._buddy = nil}

  public var buddyDisplayPokemonID: Int32 = 0

  public var buddyPokemonNickname: String = String()

  public var lastPokemonCaught: POGOProtos_Data_PokemonDisplay {
    get {return _lastPokemonCaught ?? POGOProtos_Data_PokemonDisplay()}
    set {_lastPokemonCaught = newValue}
  }
  /// Returns true if `lastPokemonCaught` has been explicitly set.
  public var hasLastPokemonCaught: Bool {return self._lastPokemonCaught != nil}
  /// Clears the value of `lastPokemonCaught`. Subsequent reads from it will return its default value.
  public mutating func clearLastPokemonCaught() {self._lastPokemonCaught = nil}

  public var lastPokemonCaughtDisplayID: Int32 = 0

  public var lastPokemonCaughtTimestamp: Int64 = 0

  public var buddyCandyAwarded: Int32 = 0

  public var activeMegaEvoInfo: POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo {
    get {return _activeMegaEvoInfo ?? POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo()}
    set {_activeMegaEvoInfo = newValue}
  }
  /// Returns true if `activeMegaEvoInfo` has been explicitly set.
  public var hasActiveMegaEvoInfo: Bool {return self._activeMegaEvoInfo != nil}
  /// Clears the value of `activeMegaEvoInfo`. Subsequent reads from it will return its default value.
  public mutating func clearActiveMegaEvoInfo() {self._activeMegaEvoInfo = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct MegaEvoInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var pokedexID: POGOProtos_Enums_PokemonId = .missingno

    public var tempEvoID: POGOProtos_Enums_TemporaryEvolutionId = .evolutionUnset

    public var evoExpirationTimeMs: Int64 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _buddy: POGOProtos_Data_PokemonDisplay? = nil
  fileprivate var _lastPokemonCaught: POGOProtos_Data_PokemonDisplay? = nil
  fileprivate var _activeMegaEvoInfo: POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Friends"

extension POGOProtos_Data_Friends_PlayerFriendDisplay: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PlayerFriendDisplay"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "buddy"),
    2: .standard(proto: "buddy_display_pokemon_id"),
    3: .standard(proto: "buddy_pokemon_nickname"),
    4: .standard(proto: "last_pokemon_caught"),
    5: .standard(proto: "last_pokemon_caught_display_id"),
    6: .standard(proto: "last_pokemon_caught_timestamp"),
    7: .standard(proto: "buddy_candy_awarded"),
    8: .standard(proto: "active_mega_evo_info"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularMessageField(value: &self._buddy)
      case 2: try decoder.decodeSingularInt32Field(value: &self.buddyDisplayPokemonID)
      case 3: try decoder.decodeSingularStringField(value: &self.buddyPokemonNickname)
      case 4: try decoder.decodeSingularMessageField(value: &self._lastPokemonCaught)
      case 5: try decoder.decodeSingularInt32Field(value: &self.lastPokemonCaughtDisplayID)
      case 6: try decoder.decodeSingularInt64Field(value: &self.lastPokemonCaughtTimestamp)
      case 7: try decoder.decodeSingularInt32Field(value: &self.buddyCandyAwarded)
      case 8: try decoder.decodeSingularMessageField(value: &self._activeMegaEvoInfo)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._buddy {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if self.buddyDisplayPokemonID != 0 {
      try visitor.visitSingularInt32Field(value: self.buddyDisplayPokemonID, fieldNumber: 2)
    }
    if !self.buddyPokemonNickname.isEmpty {
      try visitor.visitSingularStringField(value: self.buddyPokemonNickname, fieldNumber: 3)
    }
    if let v = self._lastPokemonCaught {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if self.lastPokemonCaughtDisplayID != 0 {
      try visitor.visitSingularInt32Field(value: self.lastPokemonCaughtDisplayID, fieldNumber: 5)
    }
    if self.lastPokemonCaughtTimestamp != 0 {
      try visitor.visitSingularInt64Field(value: self.lastPokemonCaughtTimestamp, fieldNumber: 6)
    }
    if self.buddyCandyAwarded != 0 {
      try visitor.visitSingularInt32Field(value: self.buddyCandyAwarded, fieldNumber: 7)
    }
    if let v = self._activeMegaEvoInfo {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Friends_PlayerFriendDisplay, rhs: POGOProtos_Data_Friends_PlayerFriendDisplay) -> Bool {
    if lhs._buddy != rhs._buddy {return false}
    if lhs.buddyDisplayPokemonID != rhs.buddyDisplayPokemonID {return false}
    if lhs.buddyPokemonNickname != rhs.buddyPokemonNickname {return false}
    if lhs._lastPokemonCaught != rhs._lastPokemonCaught {return false}
    if lhs.lastPokemonCaughtDisplayID != rhs.lastPokemonCaughtDisplayID {return false}
    if lhs.lastPokemonCaughtTimestamp != rhs.lastPokemonCaughtTimestamp {return false}
    if lhs.buddyCandyAwarded != rhs.buddyCandyAwarded {return false}
    if lhs._activeMegaEvoInfo != rhs._activeMegaEvoInfo {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Friends_PlayerFriendDisplay.protoMessageName + ".MegaEvoInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokedex_id"),
    2: .standard(proto: "temp_evo_id"),
    3: .standard(proto: "evo_expiration_time_ms"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.pokedexID)
      case 2: try decoder.decodeSingularEnumField(value: &self.tempEvoID)
      case 3: try decoder.decodeSingularInt64Field(value: &self.evoExpirationTimeMs)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.pokedexID != .missingno {
      try visitor.visitSingularEnumField(value: self.pokedexID, fieldNumber: 1)
    }
    if self.tempEvoID != .evolutionUnset {
      try visitor.visitSingularEnumField(value: self.tempEvoID, fieldNumber: 2)
    }
    if self.evoExpirationTimeMs != 0 {
      try visitor.visitSingularInt64Field(value: self.evoExpirationTimeMs, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo, rhs: POGOProtos_Data_Friends_PlayerFriendDisplay.MegaEvoInfo) -> Bool {
    if lhs.pokedexID != rhs.pokedexID {return false}
    if lhs.tempEvoID != rhs.tempEvoID {return false}
    if lhs.evoExpirationTimeMs != rhs.evoExpirationTimeMs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
