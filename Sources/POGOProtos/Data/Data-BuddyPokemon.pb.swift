// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/BuddyPokemon.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_BuddyPokemon {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var buddyPokemonID: UInt64 = 0

  public var startKmWalked: Double = 0

  public var lastKmAwarded: Double = 0

  public var dailyBuddySwaps: POGOProtos_Data_Quests_Quest.DailyCounter {
    get {return _dailyBuddySwaps ?? POGOProtos_Data_Quests_Quest.DailyCounter()}
    set {_dailyBuddySwaps = newValue}
  }
  /// Returns true if `dailyBuddySwaps` has been explicitly set.
  public var hasDailyBuddySwaps: Bool {return self._dailyBuddySwaps != nil}
  /// Clears the value of `dailyBuddySwaps`. Subsequent reads from it will return its default value.
  public mutating func clearDailyBuddySwaps() {self._dailyBuddySwaps = nil}

  public var lastKmAwardedMs: Int64 = 0

  public var bestBuddiesBackfilled: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _dailyBuddySwaps: POGOProtos_Data_Quests_Quest.DailyCounter? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data"

extension POGOProtos_Data_BuddyPokemon: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BuddyPokemon"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "buddy_pokemon_id"),
    2: .standard(proto: "start_km_walked"),
    3: .standard(proto: "last_km_awarded"),
    4: .standard(proto: "daily_buddy_swaps"),
    5: .standard(proto: "last_km_awarded_ms"),
    6: .standard(proto: "best_buddies_backfilled"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularFixed64Field(value: &self.buddyPokemonID) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.startKmWalked) }()
      case 3: try { try decoder.decodeSingularDoubleField(value: &self.lastKmAwarded) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._dailyBuddySwaps) }()
      case 5: try { try decoder.decodeSingularInt64Field(value: &self.lastKmAwardedMs) }()
      case 6: try { try decoder.decodeSingularBoolField(value: &self.bestBuddiesBackfilled) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.buddyPokemonID != 0 {
      try visitor.visitSingularFixed64Field(value: self.buddyPokemonID, fieldNumber: 1)
    }
    if self.startKmWalked != 0 {
      try visitor.visitSingularDoubleField(value: self.startKmWalked, fieldNumber: 2)
    }
    if self.lastKmAwarded != 0 {
      try visitor.visitSingularDoubleField(value: self.lastKmAwarded, fieldNumber: 3)
    }
    if let v = self._dailyBuddySwaps {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if self.lastKmAwardedMs != 0 {
      try visitor.visitSingularInt64Field(value: self.lastKmAwardedMs, fieldNumber: 5)
    }
    if self.bestBuddiesBackfilled != false {
      try visitor.visitSingularBoolField(value: self.bestBuddiesBackfilled, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_BuddyPokemon, rhs: POGOProtos_Data_BuddyPokemon) -> Bool {
    if lhs.buddyPokemonID != rhs.buddyPokemonID {return false}
    if lhs.startKmWalked != rhs.startKmWalked {return false}
    if lhs.lastKmAwarded != rhs.lastKmAwarded {return false}
    if lhs._dailyBuddySwaps != rhs._dailyBuddySwaps {return false}
    if lhs.lastKmAwardedMs != rhs.lastKmAwardedMs {return false}
    if lhs.bestBuddiesBackfilled != rhs.bestBuddiesBackfilled {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
