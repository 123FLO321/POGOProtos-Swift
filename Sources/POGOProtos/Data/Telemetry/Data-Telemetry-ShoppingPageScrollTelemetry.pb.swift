// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Telemetry/ShoppingPageScrollTelemetry.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var scrollType: POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry.ShoppingPageScrollIds = .undefinedShoppingPageScrollType

  public var scrollRow: Int32 = 0

  public var totalRows: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ShoppingPageScrollIds: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case undefinedShoppingPageScrollType // = 0
    case lastScroll // = 1
    case maxScroll // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .undefinedShoppingPageScrollType
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .undefinedShoppingPageScrollType
      case 1: self = .lastScroll
      case 2: self = .maxScroll
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .undefinedShoppingPageScrollType: return 0
      case .lastScroll: return 1
      case .maxScroll: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry.ShoppingPageScrollIds: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry.ShoppingPageScrollIds] = [
    .undefinedShoppingPageScrollType,
    .lastScroll,
    .maxScroll,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Telemetry"

extension POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ShoppingPageScrollTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "scroll_type"),
    2: .standard(proto: "scroll_row"),
    3: .standard(proto: "total_rows"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.scrollType) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.scrollRow) }()
      case 3: try { try decoder.decodeSingularInt32Field(value: &self.totalRows) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.scrollType != .undefinedShoppingPageScrollType {
      try visitor.visitSingularEnumField(value: self.scrollType, fieldNumber: 1)
    }
    if self.scrollRow != 0 {
      try visitor.visitSingularInt32Field(value: self.scrollRow, fieldNumber: 2)
    }
    if self.totalRows != 0 {
      try visitor.visitSingularInt32Field(value: self.totalRows, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry, rhs: POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry) -> Bool {
    if lhs.scrollType != rhs.scrollType {return false}
    if lhs.scrollRow != rhs.scrollRow {return false}
    if lhs.totalRows != rhs.totalRows {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Telemetry_ShoppingPageScrollTelemetry.ShoppingPageScrollIds: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNDEFINED_SHOPPING_PAGE_SCROLL_TYPE"),
    1: .same(proto: "LAST_SCROLL"),
    2: .same(proto: "MAX_SCROLL"),
  ]
}
