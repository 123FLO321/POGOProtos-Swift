// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Telemetry/RemoteRaidTelemetry.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Telemetry_RemoteRaidTelemetry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var remoteRaidTelemetryID: POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidTelemetryIds = .undefinedRemoteRaidEvent

  public var remoteRaidJoinSource: POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidJoinSource = .undefinedRemoteRaidJoinSource

  public var remoteRaidInviteAcceptSource: POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidInviteAcceptSource = .undefinedRemoteRaidInviteAcceptSource

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum RemoteRaidTelemetryIds: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case undefinedRemoteRaidEvent // = 0
    case remoteRaidLobbyEnter // = 1
    case remoteRaidInviteSent // = 2
    case remoteRaidInviteAccepted // = 3
    case remoteRaidInviteRejected // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .undefinedRemoteRaidEvent
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .undefinedRemoteRaidEvent
      case 1: self = .remoteRaidLobbyEnter
      case 2: self = .remoteRaidInviteSent
      case 3: self = .remoteRaidInviteAccepted
      case 4: self = .remoteRaidInviteRejected
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .undefinedRemoteRaidEvent: return 0
      case .remoteRaidLobbyEnter: return 1
      case .remoteRaidInviteSent: return 2
      case .remoteRaidInviteAccepted: return 3
      case .remoteRaidInviteRejected: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum RemoteRaidJoinSource: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case undefinedRemoteRaidJoinSource // = 0
    case remoteRaidUsedMap // = 1
    case remoteRaidNearbyGui // = 2
    case remoteRaidInvitedByFriend // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .undefinedRemoteRaidJoinSource
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .undefinedRemoteRaidJoinSource
      case 1: self = .remoteRaidUsedMap
      case 2: self = .remoteRaidNearbyGui
      case 3: self = .remoteRaidInvitedByFriend
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .undefinedRemoteRaidJoinSource: return 0
      case .remoteRaidUsedMap: return 1
      case .remoteRaidNearbyGui: return 2
      case .remoteRaidInvitedByFriend: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum RemoteRaidInviteAcceptSource: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case undefinedRemoteRaidInviteAcceptSource // = 0
    case remoteRaidInApp // = 1
    case remoteRaidPushNotification // = 2
    case remoteRaidNearbyWindow // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .undefinedRemoteRaidInviteAcceptSource
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .undefinedRemoteRaidInviteAcceptSource
      case 1: self = .remoteRaidInApp
      case 2: self = .remoteRaidPushNotification
      case 3: self = .remoteRaidNearbyWindow
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .undefinedRemoteRaidInviteAcceptSource: return 0
      case .remoteRaidInApp: return 1
      case .remoteRaidPushNotification: return 2
      case .remoteRaidNearbyWindow: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidTelemetryIds: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidTelemetryIds] = [
    .undefinedRemoteRaidEvent,
    .remoteRaidLobbyEnter,
    .remoteRaidInviteSent,
    .remoteRaidInviteAccepted,
    .remoteRaidInviteRejected,
  ]
}

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidJoinSource: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidJoinSource] = [
    .undefinedRemoteRaidJoinSource,
    .remoteRaidUsedMap,
    .remoteRaidNearbyGui,
    .remoteRaidInvitedByFriend,
  ]
}

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidInviteAcceptSource: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidInviteAcceptSource] = [
    .undefinedRemoteRaidInviteAcceptSource,
    .remoteRaidInApp,
    .remoteRaidPushNotification,
    .remoteRaidNearbyWindow,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Telemetry"

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RemoteRaidTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "remote_raid_telemetry_id"),
    2: .standard(proto: "remote_raid_join_source"),
    3: .standard(proto: "remote_raid_invite_accept_source"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.remoteRaidTelemetryID) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.remoteRaidJoinSource) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.remoteRaidInviteAcceptSource) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.remoteRaidTelemetryID != .undefinedRemoteRaidEvent {
      try visitor.visitSingularEnumField(value: self.remoteRaidTelemetryID, fieldNumber: 1)
    }
    if self.remoteRaidJoinSource != .undefinedRemoteRaidJoinSource {
      try visitor.visitSingularEnumField(value: self.remoteRaidJoinSource, fieldNumber: 2)
    }
    if self.remoteRaidInviteAcceptSource != .undefinedRemoteRaidInviteAcceptSource {
      try visitor.visitSingularEnumField(value: self.remoteRaidInviteAcceptSource, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Telemetry_RemoteRaidTelemetry, rhs: POGOProtos_Data_Telemetry_RemoteRaidTelemetry) -> Bool {
    if lhs.remoteRaidTelemetryID != rhs.remoteRaidTelemetryID {return false}
    if lhs.remoteRaidJoinSource != rhs.remoteRaidJoinSource {return false}
    if lhs.remoteRaidInviteAcceptSource != rhs.remoteRaidInviteAcceptSource {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidTelemetryIds: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNDEFINED_REMOTE_RAID_EVENT"),
    1: .same(proto: "REMOTE_RAID_LOBBY_ENTER"),
    2: .same(proto: "REMOTE_RAID_INVITE_SENT"),
    3: .same(proto: "REMOTE_RAID_INVITE_ACCEPTED"),
    4: .same(proto: "REMOTE_RAID_INVITE_REJECTED"),
  ]
}

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidJoinSource: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNDEFINED_REMOTE_RAID_JOIN_SOURCE"),
    1: .same(proto: "REMOTE_RAID_USED_MAP"),
    2: .same(proto: "REMOTE_RAID_NEARBY_GUI"),
    3: .same(proto: "REMOTE_RAID_INVITED_BY_FRIEND"),
  ]
}

extension POGOProtos_Data_Telemetry_RemoteRaidTelemetry.RemoteRaidInviteAcceptSource: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNDEFINED_REMOTE_RAID_INVITE_ACCEPT_SOURCE"),
    1: .same(proto: "REMOTE_RAID_IN_APP"),
    2: .same(proto: "REMOTE_RAID_PUSH_NOTIFICATION"),
    3: .same(proto: "REMOTE_RAID_NEARBY_WINDOW"),
  ]
}
