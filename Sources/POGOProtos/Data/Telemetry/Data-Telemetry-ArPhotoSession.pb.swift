// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Telemetry/ArPhotoSession.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Telemetry_ArPhotoSession {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var arType: POGOProtos_Data_Telemetry_ArPhotoSession.ArType = .unset

  public var furthestStepCompleted: POGOProtos_Data_Telemetry_ArPhotoSession.Step = .unknown

  public var numPhotosTaken: Int32 = 0

  public var numPhotosShared: Int32 = 0

  public var numPhotosTakenOcclusions: Int32 = 0

  public var numOcclusionsEnabled: Int32 = 0

  public var numOcclusionsDisabled: Int32 = 0

  public var arContext: POGOProtos_Data_Telemetry_ArPhotoSession.ArContext = .none

  public var sessionLength: Int64 = 0

  public var sessionLengthOcclusions: Int64 = 0

  public var numPhotosSharedOcclusions: Int32 = 0

  public var modelURL: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ArContext: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case none // = 0
    case arEncounter // = 1
    case arSnapshot // = 2
    case singleplayerBuddy // = 3
    case multiplayerBuddy // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .none
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .none
      case 1: self = .arEncounter
      case 2: self = .arSnapshot
      case 3: self = .singleplayerBuddy
      case 4: self = .multiplayerBuddy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .none: return 0
      case .arEncounter: return 1
      case .arSnapshot: return 2
      case .singleplayerBuddy: return 3
      case .multiplayerBuddy: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum ArType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case plus // = 1
    case classic // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .plus
      case 2: self = .classic
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .plus: return 1
      case .classic: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum Step: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unknown // = 0
    case cameraPermissionGranted // = 1
    case arplusPlaneFound // = 2
    case arplusPokemonPlaced // = 3
    case photoTaken // = 4
    case photoShared // = 5
    case UNRECOGNIZED(Int)

    public init() {
      self = .unknown
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unknown
      case 1: self = .cameraPermissionGranted
      case 2: self = .arplusPlaneFound
      case 3: self = .arplusPokemonPlaced
      case 4: self = .photoTaken
      case 5: self = .photoShared
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unknown: return 0
      case .cameraPermissionGranted: return 1
      case .arplusPlaneFound: return 2
      case .arplusPokemonPlaced: return 3
      case .photoTaken: return 4
      case .photoShared: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Data_Telemetry_ArPhotoSession.ArContext: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_ArPhotoSession.ArContext] = [
    .none,
    .arEncounter,
    .arSnapshot,
    .singleplayerBuddy,
    .multiplayerBuddy,
  ]
}

extension POGOProtos_Data_Telemetry_ArPhotoSession.ArType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_ArPhotoSession.ArType] = [
    .unset,
    .plus,
    .classic,
  ]
}

extension POGOProtos_Data_Telemetry_ArPhotoSession.Step: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Telemetry_ArPhotoSession.Step] = [
    .unknown,
    .cameraPermissionGranted,
    .arplusPlaneFound,
    .arplusPokemonPlaced,
    .photoTaken,
    .photoShared,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Telemetry"

extension POGOProtos_Data_Telemetry_ArPhotoSession: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ArPhotoSession"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "ar_type"),
    2: .standard(proto: "furthest_step_completed"),
    3: .standard(proto: "num_photos_taken"),
    4: .standard(proto: "num_photos_shared"),
    5: .standard(proto: "num_photos_taken_occlusions"),
    6: .standard(proto: "num_occlusions_enabled"),
    7: .standard(proto: "num_occlusions_disabled"),
    8: .standard(proto: "ar_context"),
    9: .standard(proto: "session_length"),
    10: .standard(proto: "session_length_occlusions"),
    11: .standard(proto: "num_photos_shared_occlusions"),
    12: .standard(proto: "model_url"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.arType)
      case 2: try decoder.decodeSingularEnumField(value: &self.furthestStepCompleted)
      case 3: try decoder.decodeSingularInt32Field(value: &self.numPhotosTaken)
      case 4: try decoder.decodeSingularInt32Field(value: &self.numPhotosShared)
      case 5: try decoder.decodeSingularInt32Field(value: &self.numPhotosTakenOcclusions)
      case 6: try decoder.decodeSingularInt32Field(value: &self.numOcclusionsEnabled)
      case 7: try decoder.decodeSingularInt32Field(value: &self.numOcclusionsDisabled)
      case 8: try decoder.decodeSingularEnumField(value: &self.arContext)
      case 9: try decoder.decodeSingularInt64Field(value: &self.sessionLength)
      case 10: try decoder.decodeSingularInt64Field(value: &self.sessionLengthOcclusions)
      case 11: try decoder.decodeSingularInt32Field(value: &self.numPhotosSharedOcclusions)
      case 12: try decoder.decodeSingularStringField(value: &self.modelURL)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.arType != .unset {
      try visitor.visitSingularEnumField(value: self.arType, fieldNumber: 1)
    }
    if self.furthestStepCompleted != .unknown {
      try visitor.visitSingularEnumField(value: self.furthestStepCompleted, fieldNumber: 2)
    }
    if self.numPhotosTaken != 0 {
      try visitor.visitSingularInt32Field(value: self.numPhotosTaken, fieldNumber: 3)
    }
    if self.numPhotosShared != 0 {
      try visitor.visitSingularInt32Field(value: self.numPhotosShared, fieldNumber: 4)
    }
    if self.numPhotosTakenOcclusions != 0 {
      try visitor.visitSingularInt32Field(value: self.numPhotosTakenOcclusions, fieldNumber: 5)
    }
    if self.numOcclusionsEnabled != 0 {
      try visitor.visitSingularInt32Field(value: self.numOcclusionsEnabled, fieldNumber: 6)
    }
    if self.numOcclusionsDisabled != 0 {
      try visitor.visitSingularInt32Field(value: self.numOcclusionsDisabled, fieldNumber: 7)
    }
    if self.arContext != .none {
      try visitor.visitSingularEnumField(value: self.arContext, fieldNumber: 8)
    }
    if self.sessionLength != 0 {
      try visitor.visitSingularInt64Field(value: self.sessionLength, fieldNumber: 9)
    }
    if self.sessionLengthOcclusions != 0 {
      try visitor.visitSingularInt64Field(value: self.sessionLengthOcclusions, fieldNumber: 10)
    }
    if self.numPhotosSharedOcclusions != 0 {
      try visitor.visitSingularInt32Field(value: self.numPhotosSharedOcclusions, fieldNumber: 11)
    }
    if !self.modelURL.isEmpty {
      try visitor.visitSingularStringField(value: self.modelURL, fieldNumber: 12)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Telemetry_ArPhotoSession, rhs: POGOProtos_Data_Telemetry_ArPhotoSession) -> Bool {
    if lhs.arType != rhs.arType {return false}
    if lhs.furthestStepCompleted != rhs.furthestStepCompleted {return false}
    if lhs.numPhotosTaken != rhs.numPhotosTaken {return false}
    if lhs.numPhotosShared != rhs.numPhotosShared {return false}
    if lhs.numPhotosTakenOcclusions != rhs.numPhotosTakenOcclusions {return false}
    if lhs.numOcclusionsEnabled != rhs.numOcclusionsEnabled {return false}
    if lhs.numOcclusionsDisabled != rhs.numOcclusionsDisabled {return false}
    if lhs.arContext != rhs.arContext {return false}
    if lhs.sessionLength != rhs.sessionLength {return false}
    if lhs.sessionLengthOcclusions != rhs.sessionLengthOcclusions {return false}
    if lhs.numPhotosSharedOcclusions != rhs.numPhotosSharedOcclusions {return false}
    if lhs.modelURL != rhs.modelURL {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Telemetry_ArPhotoSession.ArContext: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NONE"),
    1: .same(proto: "AR_ENCOUNTER"),
    2: .same(proto: "AR_SNAPSHOT"),
    3: .same(proto: "SINGLEPLAYER_BUDDY"),
    4: .same(proto: "MULTIPLAYER_BUDDY"),
  ]
}

extension POGOProtos_Data_Telemetry_ArPhotoSession.ArType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "PLUS"),
    2: .same(proto: "CLASSIC"),
  ]
}

extension POGOProtos_Data_Telemetry_ArPhotoSession.Step: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN"),
    1: .same(proto: "CAMERA_PERMISSION_GRANTED"),
    2: .same(proto: "ARPLUS_PLANE_FOUND"),
    3: .same(proto: "ARPLUS_POKEMON_PLACED"),
    4: .same(proto: "PHOTO_TAKEN"),
    5: .same(proto: "PHOTO_SHARED"),
  ]
}
