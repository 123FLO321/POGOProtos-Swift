// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Telemetry/ClientTelemetryOmni.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Data_Telemetry_ClientTelemetryOmni {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var bootTime: POGOProtos_Data_Telemetry_BootTime {
    get {return _storage._bootTime ?? POGOProtos_Data_Telemetry_BootTime()}
    set {_uniqueStorage()._bootTime = newValue}
  }
  /// Returns true if `bootTime` has been explicitly set.
  var hasBootTime: Bool {return _storage._bootTime != nil}
  /// Clears the value of `bootTime`. Subsequent reads from it will return its default value.
  mutating func clearBootTime() {_uniqueStorage()._bootTime = nil}

  var frameRate: POGOProtos_Data_Telemetry_FrameRate {
    get {return _storage._frameRate ?? POGOProtos_Data_Telemetry_FrameRate()}
    set {_uniqueStorage()._frameRate = newValue}
  }
  /// Returns true if `frameRate` has been explicitly set.
  var hasFrameRate: Bool {return _storage._frameRate != nil}
  /// Clears the value of `frameRate`. Subsequent reads from it will return its default value.
  mutating func clearFrameRate() {_uniqueStorage()._frameRate = nil}

  var genericClickTelemetry: POGOProtos_Data_Telemetry_GenericClickTelemetry {
    get {return _storage._genericClickTelemetry ?? POGOProtos_Data_Telemetry_GenericClickTelemetry()}
    set {_uniqueStorage()._genericClickTelemetry = newValue}
  }
  /// Returns true if `genericClickTelemetry` has been explicitly set.
  var hasGenericClickTelemetry: Bool {return _storage._genericClickTelemetry != nil}
  /// Clears the value of `genericClickTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearGenericClickTelemetry() {_uniqueStorage()._genericClickTelemetry = nil}

  var mapEventsTelemetry: POGOProtos_Data_Telemetry_MapEventsTelemetry {
    get {return _storage._mapEventsTelemetry ?? POGOProtos_Data_Telemetry_MapEventsTelemetry()}
    set {_uniqueStorage()._mapEventsTelemetry = newValue}
  }
  /// Returns true if `mapEventsTelemetry` has been explicitly set.
  var hasMapEventsTelemetry: Bool {return _storage._mapEventsTelemetry != nil}
  /// Clears the value of `mapEventsTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearMapEventsTelemetry() {_uniqueStorage()._mapEventsTelemetry = nil}

  var spinPokestopTelemetry: POGOProtos_Data_Telemetry_SpinPokestopTelemetry {
    get {return _storage._spinPokestopTelemetry ?? POGOProtos_Data_Telemetry_SpinPokestopTelemetry()}
    set {_uniqueStorage()._spinPokestopTelemetry = newValue}
  }
  /// Returns true if `spinPokestopTelemetry` has been explicitly set.
  var hasSpinPokestopTelemetry: Bool {return _storage._spinPokestopTelemetry != nil}
  /// Clears the value of `spinPokestopTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearSpinPokestopTelemetry() {_uniqueStorage()._spinPokestopTelemetry = nil}

  var profilePageTelemetry: POGOProtos_Data_Telemetry_ProfilePageTelemetry {
    get {return _storage._profilePageTelemetry ?? POGOProtos_Data_Telemetry_ProfilePageTelemetry()}
    set {_uniqueStorage()._profilePageTelemetry = newValue}
  }
  /// Returns true if `profilePageTelemetry` has been explicitly set.
  var hasProfilePageTelemetry: Bool {return _storage._profilePageTelemetry != nil}
  /// Clears the value of `profilePageTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearProfilePageTelemetry() {_uniqueStorage()._profilePageTelemetry = nil}

  var shoppingPageTelemetry: POGOProtos_Data_Telemetry_ShoppingPageTelemetry {
    get {return _storage._shoppingPageTelemetry ?? POGOProtos_Data_Telemetry_ShoppingPageTelemetry()}
    set {_uniqueStorage()._shoppingPageTelemetry = newValue}
  }
  /// Returns true if `shoppingPageTelemetry` has been explicitly set.
  var hasShoppingPageTelemetry: Bool {return _storage._shoppingPageTelemetry != nil}
  /// Clears the value of `shoppingPageTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearShoppingPageTelemetry() {_uniqueStorage()._shoppingPageTelemetry = nil}

  var encounterPokemonTelemetry: POGOProtos_Data_Telemetry_EncounterPokemonTelemetry {
    get {return _storage._encounterPokemonTelemetry ?? POGOProtos_Data_Telemetry_EncounterPokemonTelemetry()}
    set {_uniqueStorage()._encounterPokemonTelemetry = newValue}
  }
  /// Returns true if `encounterPokemonTelemetry` has been explicitly set.
  var hasEncounterPokemonTelemetry: Bool {return _storage._encounterPokemonTelemetry != nil}
  /// Clears the value of `encounterPokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearEncounterPokemonTelemetry() {_uniqueStorage()._encounterPokemonTelemetry = nil}

  var catchPokemonTelemetry: POGOProtos_Data_Telemetry_CatchPokemonTelemetry {
    get {return _storage._catchPokemonTelemetry ?? POGOProtos_Data_Telemetry_CatchPokemonTelemetry()}
    set {_uniqueStorage()._catchPokemonTelemetry = newValue}
  }
  /// Returns true if `catchPokemonTelemetry` has been explicitly set.
  var hasCatchPokemonTelemetry: Bool {return _storage._catchPokemonTelemetry != nil}
  /// Clears the value of `catchPokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearCatchPokemonTelemetry() {_uniqueStorage()._catchPokemonTelemetry = nil}

  var deployPokemonTelemetry: POGOProtos_Data_Telemetry_DeployPokemonTelemetry {
    get {return _storage._deployPokemonTelemetry ?? POGOProtos_Data_Telemetry_DeployPokemonTelemetry()}
    set {_uniqueStorage()._deployPokemonTelemetry = newValue}
  }
  /// Returns true if `deployPokemonTelemetry` has been explicitly set.
  var hasDeployPokemonTelemetry: Bool {return _storage._deployPokemonTelemetry != nil}
  /// Clears the value of `deployPokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearDeployPokemonTelemetry() {_uniqueStorage()._deployPokemonTelemetry = nil}

  var feedPokemonTelemetry: POGOProtos_Data_Telemetry_FeedPokemonTelemetry {
    get {return _storage._feedPokemonTelemetry ?? POGOProtos_Data_Telemetry_FeedPokemonTelemetry()}
    set {_uniqueStorage()._feedPokemonTelemetry = newValue}
  }
  /// Returns true if `feedPokemonTelemetry` has been explicitly set.
  var hasFeedPokemonTelemetry: Bool {return _storage._feedPokemonTelemetry != nil}
  /// Clears the value of `feedPokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearFeedPokemonTelemetry() {_uniqueStorage()._feedPokemonTelemetry = nil}

  var evolvePokemonTelemetry: POGOProtos_Data_Telemetry_EvolvePokemonTelemetry {
    get {return _storage._evolvePokemonTelemetry ?? POGOProtos_Data_Telemetry_EvolvePokemonTelemetry()}
    set {_uniqueStorage()._evolvePokemonTelemetry = newValue}
  }
  /// Returns true if `evolvePokemonTelemetry` has been explicitly set.
  var hasEvolvePokemonTelemetry: Bool {return _storage._evolvePokemonTelemetry != nil}
  /// Clears the value of `evolvePokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearEvolvePokemonTelemetry() {_uniqueStorage()._evolvePokemonTelemetry = nil}

  var releasePokemonTelemetry: POGOProtos_Data_Telemetry_ReleasePokemonTelemetry {
    get {return _storage._releasePokemonTelemetry ?? POGOProtos_Data_Telemetry_ReleasePokemonTelemetry()}
    set {_uniqueStorage()._releasePokemonTelemetry = newValue}
  }
  /// Returns true if `releasePokemonTelemetry` has been explicitly set.
  var hasReleasePokemonTelemetry: Bool {return _storage._releasePokemonTelemetry != nil}
  /// Clears the value of `releasePokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearReleasePokemonTelemetry() {_uniqueStorage()._releasePokemonTelemetry = nil}

  var nicknamePokemonTelemetry: POGOProtos_Data_Telemetry_NicknamePokemonTelemetry {
    get {return _storage._nicknamePokemonTelemetry ?? POGOProtos_Data_Telemetry_NicknamePokemonTelemetry()}
    set {_uniqueStorage()._nicknamePokemonTelemetry = newValue}
  }
  /// Returns true if `nicknamePokemonTelemetry` has been explicitly set.
  var hasNicknamePokemonTelemetry: Bool {return _storage._nicknamePokemonTelemetry != nil}
  /// Clears the value of `nicknamePokemonTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearNicknamePokemonTelemetry() {_uniqueStorage()._nicknamePokemonTelemetry = nil}

  var newsPageTelemetry: POGOProtos_Data_Telemetry_NewsPageTelemetry {
    get {return _storage._newsPageTelemetry ?? POGOProtos_Data_Telemetry_NewsPageTelemetry()}
    set {_uniqueStorage()._newsPageTelemetry = newValue}
  }
  /// Returns true if `newsPageTelemetry` has been explicitly set.
  var hasNewsPageTelemetry: Bool {return _storage._newsPageTelemetry != nil}
  /// Clears the value of `newsPageTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearNewsPageTelemetry() {_uniqueStorage()._newsPageTelemetry = nil}

  var itemTelemetry: POGOProtos_Data_Telemetry_ItemTelemetry {
    get {return _storage._itemTelemetry ?? POGOProtos_Data_Telemetry_ItemTelemetry()}
    set {_uniqueStorage()._itemTelemetry = newValue}
  }
  /// Returns true if `itemTelemetry` has been explicitly set.
  var hasItemTelemetry: Bool {return _storage._itemTelemetry != nil}
  /// Clears the value of `itemTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearItemTelemetry() {_uniqueStorage()._itemTelemetry = nil}

  var battlePartyTelemetry: POGOProtos_Data_Telemetry_BattlePartyTelemetry {
    get {return _storage._battlePartyTelemetry ?? POGOProtos_Data_Telemetry_BattlePartyTelemetry()}
    set {_uniqueStorage()._battlePartyTelemetry = newValue}
  }
  /// Returns true if `battlePartyTelemetry` has been explicitly set.
  var hasBattlePartyTelemetry: Bool {return _storage._battlePartyTelemetry != nil}
  /// Clears the value of `battlePartyTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearBattlePartyTelemetry() {_uniqueStorage()._battlePartyTelemetry = nil}

  var passcodeRedeemTelemetry: POGOProtos_Data_Telemetry_PasscodeRedeemTelemetry {
    get {return _storage._passcodeRedeemTelemetry ?? POGOProtos_Data_Telemetry_PasscodeRedeemTelemetry()}
    set {_uniqueStorage()._passcodeRedeemTelemetry = newValue}
  }
  /// Returns true if `passcodeRedeemTelemetry` has been explicitly set.
  var hasPasscodeRedeemTelemetry: Bool {return _storage._passcodeRedeemTelemetry != nil}
  /// Clears the value of `passcodeRedeemTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearPasscodeRedeemTelemetry() {_uniqueStorage()._passcodeRedeemTelemetry = nil}

  var linkLoginTelemetry: POGOProtos_Data_Telemetry_LinkLoginTelemetry {
    get {return _storage._linkLoginTelemetry ?? POGOProtos_Data_Telemetry_LinkLoginTelemetry()}
    set {_uniqueStorage()._linkLoginTelemetry = newValue}
  }
  /// Returns true if `linkLoginTelemetry` has been explicitly set.
  var hasLinkLoginTelemetry: Bool {return _storage._linkLoginTelemetry != nil}
  /// Clears the value of `linkLoginTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearLinkLoginTelemetry() {_uniqueStorage()._linkLoginTelemetry = nil}

  var raidTelemetry: POGOProtos_Data_Telemetry_RaidTelemetry {
    get {return _storage._raidTelemetry ?? POGOProtos_Data_Telemetry_RaidTelemetry()}
    set {_uniqueStorage()._raidTelemetry = newValue}
  }
  /// Returns true if `raidTelemetry` has been explicitly set.
  var hasRaidTelemetry: Bool {return _storage._raidTelemetry != nil}
  /// Clears the value of `raidTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearRaidTelemetry() {_uniqueStorage()._raidTelemetry = nil}

  var pushNotificationTelemetry: POGOProtos_Data_Telemetry_PushNotificationTelemetry {
    get {return _storage._pushNotificationTelemetry ?? POGOProtos_Data_Telemetry_PushNotificationTelemetry()}
    set {_uniqueStorage()._pushNotificationTelemetry = newValue}
  }
  /// Returns true if `pushNotificationTelemetry` has been explicitly set.
  var hasPushNotificationTelemetry: Bool {return _storage._pushNotificationTelemetry != nil}
  /// Clears the value of `pushNotificationTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearPushNotificationTelemetry() {_uniqueStorage()._pushNotificationTelemetry = nil}

  var avatarCustomizationTelemetry: POGOProtos_Data_Telemetry_AvatarCustomizationTelemetry {
    get {return _storage._avatarCustomizationTelemetry ?? POGOProtos_Data_Telemetry_AvatarCustomizationTelemetry()}
    set {_uniqueStorage()._avatarCustomizationTelemetry = newValue}
  }
  /// Returns true if `avatarCustomizationTelemetry` has been explicitly set.
  var hasAvatarCustomizationTelemetry: Bool {return _storage._avatarCustomizationTelemetry != nil}
  /// Clears the value of `avatarCustomizationTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearAvatarCustomizationTelemetry() {_uniqueStorage()._avatarCustomizationTelemetry = nil}

  var readPointOfInterestDescriptionTelemetry: POGOProtos_Data_Telemetry_ReadPointOfInterestDescriptionTelemetry {
    get {return _storage._readPointOfInterestDescriptionTelemetry ?? POGOProtos_Data_Telemetry_ReadPointOfInterestDescriptionTelemetry()}
    set {_uniqueStorage()._readPointOfInterestDescriptionTelemetry = newValue}
  }
  /// Returns true if `readPointOfInterestDescriptionTelemetry` has been explicitly set.
  var hasReadPointOfInterestDescriptionTelemetry: Bool {return _storage._readPointOfInterestDescriptionTelemetry != nil}
  /// Clears the value of `readPointOfInterestDescriptionTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearReadPointOfInterestDescriptionTelemetry() {_uniqueStorage()._readPointOfInterestDescriptionTelemetry = nil}

  var webTelemetry: POGOProtos_Data_Telemetry_WebTelemetry {
    get {return _storage._webTelemetry ?? POGOProtos_Data_Telemetry_WebTelemetry()}
    set {_uniqueStorage()._webTelemetry = newValue}
  }
  /// Returns true if `webTelemetry` has been explicitly set.
  var hasWebTelemetry: Bool {return _storage._webTelemetry != nil}
  /// Clears the value of `webTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearWebTelemetry() {_uniqueStorage()._webTelemetry = nil}

  var changeArTelemetry: POGOProtos_Data_Telemetry_ChangeArTelemetry {
    get {return _storage._changeArTelemetry ?? POGOProtos_Data_Telemetry_ChangeArTelemetry()}
    set {_uniqueStorage()._changeArTelemetry = newValue}
  }
  /// Returns true if `changeArTelemetry` has been explicitly set.
  var hasChangeArTelemetry: Bool {return _storage._changeArTelemetry != nil}
  /// Clears the value of `changeArTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearChangeArTelemetry() {_uniqueStorage()._changeArTelemetry = nil}

  var weatherDetailClickTelemetry: POGOProtos_Data_Telemetry_WeatherDetailClickTelemetry {
    get {return _storage._weatherDetailClickTelemetry ?? POGOProtos_Data_Telemetry_WeatherDetailClickTelemetry()}
    set {_uniqueStorage()._weatherDetailClickTelemetry = newValue}
  }
  /// Returns true if `weatherDetailClickTelemetry` has been explicitly set.
  var hasWeatherDetailClickTelemetry: Bool {return _storage._weatherDetailClickTelemetry != nil}
  /// Clears the value of `weatherDetailClickTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearWeatherDetailClickTelemetry() {_uniqueStorage()._weatherDetailClickTelemetry = nil}

  var userIssueWeatherReport: POGOProtos_Data_Player_UserIssueWeatherReport {
    get {return _storage._userIssueWeatherReport ?? POGOProtos_Data_Player_UserIssueWeatherReport()}
    set {_uniqueStorage()._userIssueWeatherReport = newValue}
  }
  /// Returns true if `userIssueWeatherReport` has been explicitly set.
  var hasUserIssueWeatherReport: Bool {return _storage._userIssueWeatherReport != nil}
  /// Clears the value of `userIssueWeatherReport`. Subsequent reads from it will return its default value.
  mutating func clearUserIssueWeatherReport() {_uniqueStorage()._userIssueWeatherReport = nil}

  var pokemonInventoryTelemetry: POGOProtos_Data_Telemetry_PokemonInventoryTelemetry {
    get {return _storage._pokemonInventoryTelemetry ?? POGOProtos_Data_Telemetry_PokemonInventoryTelemetry()}
    set {_uniqueStorage()._pokemonInventoryTelemetry = newValue}
  }
  /// Returns true if `pokemonInventoryTelemetry` has been explicitly set.
  var hasPokemonInventoryTelemetry: Bool {return _storage._pokemonInventoryTelemetry != nil}
  /// Clears the value of `pokemonInventoryTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearPokemonInventoryTelemetry() {_uniqueStorage()._pokemonInventoryTelemetry = nil}

  var socialTelemetry: POGOProtos_Data_Telemetry_SocialTelemetry {
    get {return _storage._socialTelemetry ?? POGOProtos_Data_Telemetry_SocialTelemetry()}
    set {_uniqueStorage()._socialTelemetry = newValue}
  }
  /// Returns true if `socialTelemetry` has been explicitly set.
  var hasSocialTelemetry: Bool {return _storage._socialTelemetry != nil}
  /// Clears the value of `socialTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearSocialTelemetry() {_uniqueStorage()._socialTelemetry = nil}

  var checkEncounterInfoTelemetry: POGOProtos_Data_Telemetry_CheckEncounterTrayInfoTelemetry {
    get {return _storage._checkEncounterInfoTelemetry ?? POGOProtos_Data_Telemetry_CheckEncounterTrayInfoTelemetry()}
    set {_uniqueStorage()._checkEncounterInfoTelemetry = newValue}
  }
  /// Returns true if `checkEncounterInfoTelemetry` has been explicitly set.
  var hasCheckEncounterInfoTelemetry: Bool {return _storage._checkEncounterInfoTelemetry != nil}
  /// Clears the value of `checkEncounterInfoTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearCheckEncounterInfoTelemetry() {_uniqueStorage()._checkEncounterInfoTelemetry = nil}

  var pokemonGoPlusTelemetry: POGOProtos_Data_Telemetry_PokemonGoPlusTelemetry {
    get {return _storage._pokemonGoPlusTelemetry ?? POGOProtos_Data_Telemetry_PokemonGoPlusTelemetry()}
    set {_uniqueStorage()._pokemonGoPlusTelemetry = newValue}
  }
  /// Returns true if `pokemonGoPlusTelemetry` has been explicitly set.
  var hasPokemonGoPlusTelemetry: Bool {return _storage._pokemonGoPlusTelemetry != nil}
  /// Clears the value of `pokemonGoPlusTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearPokemonGoPlusTelemetry() {_uniqueStorage()._pokemonGoPlusTelemetry = nil}

  var rpcTimingTelemetry: POGOProtos_Data_Telemetry_RpcResponseTelemetry {
    get {return _storage._rpcTimingTelemetry ?? POGOProtos_Data_Telemetry_RpcResponseTelemetry()}
    set {_uniqueStorage()._rpcTimingTelemetry = newValue}
  }
  /// Returns true if `rpcTimingTelemetry` has been explicitly set.
  var hasRpcTimingTelemetry: Bool {return _storage._rpcTimingTelemetry != nil}
  /// Clears the value of `rpcTimingTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearRpcTimingTelemetry() {_uniqueStorage()._rpcTimingTelemetry = nil}

  var socialGiftCountTelemetry: POGOProtos_Settings_SocialGiftCountTelemetry {
    get {return _storage._socialGiftCountTelemetry ?? POGOProtos_Settings_SocialGiftCountTelemetry()}
    set {_uniqueStorage()._socialGiftCountTelemetry = newValue}
  }
  /// Returns true if `socialGiftCountTelemetry` has been explicitly set.
  var hasSocialGiftCountTelemetry: Bool {return _storage._socialGiftCountTelemetry != nil}
  /// Clears the value of `socialGiftCountTelemetry`. Subsequent reads from it will return its default value.
  mutating func clearSocialGiftCountTelemetry() {_uniqueStorage()._socialGiftCountTelemetry = nil}

  var serverData: POGOProtos_Networking_Platform_Telemetry_PlatformServerData {
    get {return _storage._serverData ?? POGOProtos_Networking_Platform_Telemetry_PlatformServerData()}
    set {_uniqueStorage()._serverData = newValue}
  }
  /// Returns true if `serverData` has been explicitly set.
  var hasServerData: Bool {return _storage._serverData != nil}
  /// Clears the value of `serverData`. Subsequent reads from it will return its default value.
  mutating func clearServerData() {_uniqueStorage()._serverData = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Telemetry"

extension POGOProtos_Data_Telemetry_ClientTelemetryOmni: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ClientTelemetryOmni"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "boot_time"),
    2: .standard(proto: "frame_rate"),
    3: .standard(proto: "generic_click_telemetry"),
    4: .standard(proto: "map_events_telemetry"),
    5: .standard(proto: "spin_pokestop_telemetry"),
    6: .standard(proto: "profile_page_telemetry"),
    7: .standard(proto: "shopping_page_telemetry"),
    8: .standard(proto: "encounter_pokemon_telemetry"),
    9: .standard(proto: "catch_pokemon_telemetry"),
    10: .standard(proto: "deploy_pokemon_telemetry"),
    11: .standard(proto: "feed_pokemon_telemetry"),
    12: .standard(proto: "evolve_pokemon_telemetry"),
    13: .standard(proto: "release_pokemon_telemetry"),
    14: .standard(proto: "nickname_pokemon_telemetry"),
    15: .standard(proto: "news_page_telemetry"),
    16: .standard(proto: "item_telemetry"),
    17: .standard(proto: "battle_party_telemetry"),
    18: .standard(proto: "passcode_redeem_telemetry"),
    19: .standard(proto: "link_login_telemetry"),
    20: .standard(proto: "raid_telemetry"),
    21: .standard(proto: "push_notification_telemetry"),
    22: .standard(proto: "avatar_customization_telemetry"),
    23: .standard(proto: "read_point_of_interest_description_telemetry"),
    24: .standard(proto: "web_telemetry"),
    25: .standard(proto: "change_ar_telemetry"),
    26: .standard(proto: "weather_detail_click_telemetry"),
    27: .standard(proto: "user_issue_weather_report"),
    28: .standard(proto: "pokemon_inventory_telemetry"),
    29: .standard(proto: "social_telemetry"),
    30: .standard(proto: "check_encounter_info_telemetry"),
    31: .standard(proto: "pokemon_go_plus_telemetry"),
    32: .standard(proto: "rpc_timing_telemetry"),
    33: .standard(proto: "social_gift_count_telemetry"),
    1001: .standard(proto: "server_data"),
  ]

  fileprivate class _StorageClass {
    var _bootTime: POGOProtos_Data_Telemetry_BootTime? = nil
    var _frameRate: POGOProtos_Data_Telemetry_FrameRate? = nil
    var _genericClickTelemetry: POGOProtos_Data_Telemetry_GenericClickTelemetry? = nil
    var _mapEventsTelemetry: POGOProtos_Data_Telemetry_MapEventsTelemetry? = nil
    var _spinPokestopTelemetry: POGOProtos_Data_Telemetry_SpinPokestopTelemetry? = nil
    var _profilePageTelemetry: POGOProtos_Data_Telemetry_ProfilePageTelemetry? = nil
    var _shoppingPageTelemetry: POGOProtos_Data_Telemetry_ShoppingPageTelemetry? = nil
    var _encounterPokemonTelemetry: POGOProtos_Data_Telemetry_EncounterPokemonTelemetry? = nil
    var _catchPokemonTelemetry: POGOProtos_Data_Telemetry_CatchPokemonTelemetry? = nil
    var _deployPokemonTelemetry: POGOProtos_Data_Telemetry_DeployPokemonTelemetry? = nil
    var _feedPokemonTelemetry: POGOProtos_Data_Telemetry_FeedPokemonTelemetry? = nil
    var _evolvePokemonTelemetry: POGOProtos_Data_Telemetry_EvolvePokemonTelemetry? = nil
    var _releasePokemonTelemetry: POGOProtos_Data_Telemetry_ReleasePokemonTelemetry? = nil
    var _nicknamePokemonTelemetry: POGOProtos_Data_Telemetry_NicknamePokemonTelemetry? = nil
    var _newsPageTelemetry: POGOProtos_Data_Telemetry_NewsPageTelemetry? = nil
    var _itemTelemetry: POGOProtos_Data_Telemetry_ItemTelemetry? = nil
    var _battlePartyTelemetry: POGOProtos_Data_Telemetry_BattlePartyTelemetry? = nil
    var _passcodeRedeemTelemetry: POGOProtos_Data_Telemetry_PasscodeRedeemTelemetry? = nil
    var _linkLoginTelemetry: POGOProtos_Data_Telemetry_LinkLoginTelemetry? = nil
    var _raidTelemetry: POGOProtos_Data_Telemetry_RaidTelemetry? = nil
    var _pushNotificationTelemetry: POGOProtos_Data_Telemetry_PushNotificationTelemetry? = nil
    var _avatarCustomizationTelemetry: POGOProtos_Data_Telemetry_AvatarCustomizationTelemetry? = nil
    var _readPointOfInterestDescriptionTelemetry: POGOProtos_Data_Telemetry_ReadPointOfInterestDescriptionTelemetry? = nil
    var _webTelemetry: POGOProtos_Data_Telemetry_WebTelemetry? = nil
    var _changeArTelemetry: POGOProtos_Data_Telemetry_ChangeArTelemetry? = nil
    var _weatherDetailClickTelemetry: POGOProtos_Data_Telemetry_WeatherDetailClickTelemetry? = nil
    var _userIssueWeatherReport: POGOProtos_Data_Player_UserIssueWeatherReport? = nil
    var _pokemonInventoryTelemetry: POGOProtos_Data_Telemetry_PokemonInventoryTelemetry? = nil
    var _socialTelemetry: POGOProtos_Data_Telemetry_SocialTelemetry? = nil
    var _checkEncounterInfoTelemetry: POGOProtos_Data_Telemetry_CheckEncounterTrayInfoTelemetry? = nil
    var _pokemonGoPlusTelemetry: POGOProtos_Data_Telemetry_PokemonGoPlusTelemetry? = nil
    var _rpcTimingTelemetry: POGOProtos_Data_Telemetry_RpcResponseTelemetry? = nil
    var _socialGiftCountTelemetry: POGOProtos_Settings_SocialGiftCountTelemetry? = nil
    var _serverData: POGOProtos_Networking_Platform_Telemetry_PlatformServerData? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _bootTime = source._bootTime
      _frameRate = source._frameRate
      _genericClickTelemetry = source._genericClickTelemetry
      _mapEventsTelemetry = source._mapEventsTelemetry
      _spinPokestopTelemetry = source._spinPokestopTelemetry
      _profilePageTelemetry = source._profilePageTelemetry
      _shoppingPageTelemetry = source._shoppingPageTelemetry
      _encounterPokemonTelemetry = source._encounterPokemonTelemetry
      _catchPokemonTelemetry = source._catchPokemonTelemetry
      _deployPokemonTelemetry = source._deployPokemonTelemetry
      _feedPokemonTelemetry = source._feedPokemonTelemetry
      _evolvePokemonTelemetry = source._evolvePokemonTelemetry
      _releasePokemonTelemetry = source._releasePokemonTelemetry
      _nicknamePokemonTelemetry = source._nicknamePokemonTelemetry
      _newsPageTelemetry = source._newsPageTelemetry
      _itemTelemetry = source._itemTelemetry
      _battlePartyTelemetry = source._battlePartyTelemetry
      _passcodeRedeemTelemetry = source._passcodeRedeemTelemetry
      _linkLoginTelemetry = source._linkLoginTelemetry
      _raidTelemetry = source._raidTelemetry
      _pushNotificationTelemetry = source._pushNotificationTelemetry
      _avatarCustomizationTelemetry = source._avatarCustomizationTelemetry
      _readPointOfInterestDescriptionTelemetry = source._readPointOfInterestDescriptionTelemetry
      _webTelemetry = source._webTelemetry
      _changeArTelemetry = source._changeArTelemetry
      _weatherDetailClickTelemetry = source._weatherDetailClickTelemetry
      _userIssueWeatherReport = source._userIssueWeatherReport
      _pokemonInventoryTelemetry = source._pokemonInventoryTelemetry
      _socialTelemetry = source._socialTelemetry
      _checkEncounterInfoTelemetry = source._checkEncounterInfoTelemetry
      _pokemonGoPlusTelemetry = source._pokemonGoPlusTelemetry
      _rpcTimingTelemetry = source._rpcTimingTelemetry
      _socialGiftCountTelemetry = source._socialGiftCountTelemetry
      _serverData = source._serverData
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._bootTime)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._frameRate)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._genericClickTelemetry)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._mapEventsTelemetry)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._spinPokestopTelemetry)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._profilePageTelemetry)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._shoppingPageTelemetry)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._encounterPokemonTelemetry)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._catchPokemonTelemetry)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._deployPokemonTelemetry)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._feedPokemonTelemetry)
        case 12: try decoder.decodeSingularMessageField(value: &_storage._evolvePokemonTelemetry)
        case 13: try decoder.decodeSingularMessageField(value: &_storage._releasePokemonTelemetry)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._nicknamePokemonTelemetry)
        case 15: try decoder.decodeSingularMessageField(value: &_storage._newsPageTelemetry)
        case 16: try decoder.decodeSingularMessageField(value: &_storage._itemTelemetry)
        case 17: try decoder.decodeSingularMessageField(value: &_storage._battlePartyTelemetry)
        case 18: try decoder.decodeSingularMessageField(value: &_storage._passcodeRedeemTelemetry)
        case 19: try decoder.decodeSingularMessageField(value: &_storage._linkLoginTelemetry)
        case 20: try decoder.decodeSingularMessageField(value: &_storage._raidTelemetry)
        case 21: try decoder.decodeSingularMessageField(value: &_storage._pushNotificationTelemetry)
        case 22: try decoder.decodeSingularMessageField(value: &_storage._avatarCustomizationTelemetry)
        case 23: try decoder.decodeSingularMessageField(value: &_storage._readPointOfInterestDescriptionTelemetry)
        case 24: try decoder.decodeSingularMessageField(value: &_storage._webTelemetry)
        case 25: try decoder.decodeSingularMessageField(value: &_storage._changeArTelemetry)
        case 26: try decoder.decodeSingularMessageField(value: &_storage._weatherDetailClickTelemetry)
        case 27: try decoder.decodeSingularMessageField(value: &_storage._userIssueWeatherReport)
        case 28: try decoder.decodeSingularMessageField(value: &_storage._pokemonInventoryTelemetry)
        case 29: try decoder.decodeSingularMessageField(value: &_storage._socialTelemetry)
        case 30: try decoder.decodeSingularMessageField(value: &_storage._checkEncounterInfoTelemetry)
        case 31: try decoder.decodeSingularMessageField(value: &_storage._pokemonGoPlusTelemetry)
        case 32: try decoder.decodeSingularMessageField(value: &_storage._rpcTimingTelemetry)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._socialGiftCountTelemetry)
        case 1001: try decoder.decodeSingularMessageField(value: &_storage._serverData)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._bootTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._frameRate {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._genericClickTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._mapEventsTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._spinPokestopTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._profilePageTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._shoppingPageTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._encounterPokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._catchPokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._deployPokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
      if let v = _storage._feedPokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if let v = _storage._evolvePokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 12)
      }
      if let v = _storage._releasePokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._nicknamePokemonTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if let v = _storage._newsPageTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 15)
      }
      if let v = _storage._itemTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 16)
      }
      if let v = _storage._battlePartyTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 17)
      }
      if let v = _storage._passcodeRedeemTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 18)
      }
      if let v = _storage._linkLoginTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 19)
      }
      if let v = _storage._raidTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 20)
      }
      if let v = _storage._pushNotificationTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 21)
      }
      if let v = _storage._avatarCustomizationTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._readPointOfInterestDescriptionTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._webTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      }
      if let v = _storage._changeArTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._weatherDetailClickTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._userIssueWeatherReport {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if let v = _storage._pokemonInventoryTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if let v = _storage._socialTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._checkEncounterInfoTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if let v = _storage._pokemonGoPlusTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 31)
      }
      if let v = _storage._rpcTimingTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 32)
      }
      if let v = _storage._socialGiftCountTelemetry {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if let v = _storage._serverData {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1001)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Telemetry_ClientTelemetryOmni, rhs: POGOProtos_Data_Telemetry_ClientTelemetryOmni) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._bootTime != rhs_storage._bootTime {return false}
        if _storage._frameRate != rhs_storage._frameRate {return false}
        if _storage._genericClickTelemetry != rhs_storage._genericClickTelemetry {return false}
        if _storage._mapEventsTelemetry != rhs_storage._mapEventsTelemetry {return false}
        if _storage._spinPokestopTelemetry != rhs_storage._spinPokestopTelemetry {return false}
        if _storage._profilePageTelemetry != rhs_storage._profilePageTelemetry {return false}
        if _storage._shoppingPageTelemetry != rhs_storage._shoppingPageTelemetry {return false}
        if _storage._encounterPokemonTelemetry != rhs_storage._encounterPokemonTelemetry {return false}
        if _storage._catchPokemonTelemetry != rhs_storage._catchPokemonTelemetry {return false}
        if _storage._deployPokemonTelemetry != rhs_storage._deployPokemonTelemetry {return false}
        if _storage._feedPokemonTelemetry != rhs_storage._feedPokemonTelemetry {return false}
        if _storage._evolvePokemonTelemetry != rhs_storage._evolvePokemonTelemetry {return false}
        if _storage._releasePokemonTelemetry != rhs_storage._releasePokemonTelemetry {return false}
        if _storage._nicknamePokemonTelemetry != rhs_storage._nicknamePokemonTelemetry {return false}
        if _storage._newsPageTelemetry != rhs_storage._newsPageTelemetry {return false}
        if _storage._itemTelemetry != rhs_storage._itemTelemetry {return false}
        if _storage._battlePartyTelemetry != rhs_storage._battlePartyTelemetry {return false}
        if _storage._passcodeRedeemTelemetry != rhs_storage._passcodeRedeemTelemetry {return false}
        if _storage._linkLoginTelemetry != rhs_storage._linkLoginTelemetry {return false}
        if _storage._raidTelemetry != rhs_storage._raidTelemetry {return false}
        if _storage._pushNotificationTelemetry != rhs_storage._pushNotificationTelemetry {return false}
        if _storage._avatarCustomizationTelemetry != rhs_storage._avatarCustomizationTelemetry {return false}
        if _storage._readPointOfInterestDescriptionTelemetry != rhs_storage._readPointOfInterestDescriptionTelemetry {return false}
        if _storage._webTelemetry != rhs_storage._webTelemetry {return false}
        if _storage._changeArTelemetry != rhs_storage._changeArTelemetry {return false}
        if _storage._weatherDetailClickTelemetry != rhs_storage._weatherDetailClickTelemetry {return false}
        if _storage._userIssueWeatherReport != rhs_storage._userIssueWeatherReport {return false}
        if _storage._pokemonInventoryTelemetry != rhs_storage._pokemonInventoryTelemetry {return false}
        if _storage._socialTelemetry != rhs_storage._socialTelemetry {return false}
        if _storage._checkEncounterInfoTelemetry != rhs_storage._checkEncounterInfoTelemetry {return false}
        if _storage._pokemonGoPlusTelemetry != rhs_storage._pokemonGoPlusTelemetry {return false}
        if _storage._rpcTimingTelemetry != rhs_storage._rpcTimingTelemetry {return false}
        if _storage._socialGiftCountTelemetry != rhs_storage._socialGiftCountTelemetry {return false}
        if _storage._serverData != rhs_storage._serverData {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
