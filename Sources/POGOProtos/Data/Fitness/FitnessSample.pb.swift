// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Fitness/FitnessSample.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Fitness_FitnessSample {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var sampleType: POGOProtos_Data_Fitness_FitnessSample.FitnessSampleType = .sampleUnset

  public var sampleStartTimestampMs: Int64 = 0

  public var sampleEndTimestampMs: Int64 = 0

  public var value: Double = 0

  public var sourceType: POGOProtos_Data_Fitness_FitnessSample.FitnessSourceType = .sourceUnset

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum FitnessSampleType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case sampleUnset // = 0
    case steps // = 1
    case walkingDistanceMeters // = 2
    case wheelchairDistanceMeters // = 3
    case caloriesKcals // = 4
    case wheelchairPushCount // = 5
    case exerciseTimeMi // = 6
    case UNRECOGNIZED(Int)

    public init() {
      self = .sampleUnset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .sampleUnset
      case 1: self = .steps
      case 2: self = .walkingDistanceMeters
      case 3: self = .wheelchairDistanceMeters
      case 4: self = .caloriesKcals
      case 5: self = .wheelchairPushCount
      case 6: self = .exerciseTimeMi
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .sampleUnset: return 0
      case .steps: return 1
      case .walkingDistanceMeters: return 2
      case .wheelchairDistanceMeters: return 3
      case .caloriesKcals: return 4
      case .wheelchairPushCount: return 5
      case .exerciseTimeMi: return 6
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public enum FitnessSourceType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case sourceUnset // = 0
    case healthkit // = 1
    case googleFit // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .sourceUnset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .sourceUnset
      case 1: self = .healthkit
      case 2: self = .googleFit
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .sourceUnset: return 0
      case .healthkit: return 1
      case .googleFit: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Data_Fitness_FitnessSample.FitnessSampleType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Fitness_FitnessSample.FitnessSampleType] = [
    .sampleUnset,
    .steps,
    .walkingDistanceMeters,
    .wheelchairDistanceMeters,
    .caloriesKcals,
    .wheelchairPushCount,
    .exerciseTimeMi,
  ]
}

extension POGOProtos_Data_Fitness_FitnessSample.FitnessSourceType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Data_Fitness_FitnessSample.FitnessSourceType] = [
    .sourceUnset,
    .healthkit,
    .googleFit,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Fitness"

extension POGOProtos_Data_Fitness_FitnessSample: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".FitnessSample"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "sample_type"),
    2: .standard(proto: "sample_start_timestamp_ms"),
    3: .standard(proto: "sample_end_timestamp_ms"),
    4: .same(proto: "value"),
    5: .standard(proto: "source_type"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularEnumField(value: &self.sampleType)
      case 2: try decoder.decodeSingularInt64Field(value: &self.sampleStartTimestampMs)
      case 3: try decoder.decodeSingularInt64Field(value: &self.sampleEndTimestampMs)
      case 4: try decoder.decodeSingularDoubleField(value: &self.value)
      case 5: try decoder.decodeSingularEnumField(value: &self.sourceType)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.sampleType != .sampleUnset {
      try visitor.visitSingularEnumField(value: self.sampleType, fieldNumber: 1)
    }
    if self.sampleStartTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.sampleStartTimestampMs, fieldNumber: 2)
    }
    if self.sampleEndTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.sampleEndTimestampMs, fieldNumber: 3)
    }
    if self.value != 0 {
      try visitor.visitSingularDoubleField(value: self.value, fieldNumber: 4)
    }
    if self.sourceType != .sourceUnset {
      try visitor.visitSingularEnumField(value: self.sourceType, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Fitness_FitnessSample, rhs: POGOProtos_Data_Fitness_FitnessSample) -> Bool {
    if lhs.sampleType != rhs.sampleType {return false}
    if lhs.sampleStartTimestampMs != rhs.sampleStartTimestampMs {return false}
    if lhs.sampleEndTimestampMs != rhs.sampleEndTimestampMs {return false}
    if lhs.value != rhs.value {return false}
    if lhs.sourceType != rhs.sourceType {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Fitness_FitnessSample.FitnessSampleType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SAMPLE_UNSET"),
    1: .same(proto: "STEPS"),
    2: .same(proto: "WALKING_DISTANCE_METERS"),
    3: .same(proto: "WHEELCHAIR_DISTANCE_METERS"),
    4: .same(proto: "CALORIES_KCALS"),
    5: .same(proto: "WHEELCHAIR_PUSH_COUNT"),
    6: .same(proto: "EXERCISE_TIME_MI"),
  ]
}

extension POGOProtos_Data_Fitness_FitnessSample.FitnessSourceType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SOURCE_UNSET"),
    1: .same(proto: "HEALTHKIT"),
    2: .same(proto: "GOOGLE_FIT"),
  ]
}
