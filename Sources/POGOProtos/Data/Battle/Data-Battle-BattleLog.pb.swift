// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Battle/BattleLog.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Battle_BattleLog {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var state: POGOProtos_Data_Battle_BattleState = .stateUnset

  public var battleType: POGOProtos_Data_Battle_BattleType = .unset

  public var serverMs: Int64 = 0

  public var battleActions: [POGOProtos_Data_Battle_BattleAction] = []

  public var battleStartTimestampMs: Int64 = 0

  public var battleEndTimestampMs: Int64 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Battle"

extension POGOProtos_Data_Battle_BattleLog: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".BattleLog"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "state"),
    2: .standard(proto: "battle_type"),
    3: .standard(proto: "server_ms"),
    4: .standard(proto: "battle_actions"),
    5: .standard(proto: "battle_start_timestamp_ms"),
    6: .standard(proto: "battle_end_timestamp_ms"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.state) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.battleType) }()
      case 3: try { try decoder.decodeSingularInt64Field(value: &self.serverMs) }()
      case 4: try { try decoder.decodeRepeatedMessageField(value: &self.battleActions) }()
      case 5: try { try decoder.decodeSingularInt64Field(value: &self.battleStartTimestampMs) }()
      case 6: try { try decoder.decodeSingularInt64Field(value: &self.battleEndTimestampMs) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.state != .stateUnset {
      try visitor.visitSingularEnumField(value: self.state, fieldNumber: 1)
    }
    if self.battleType != .unset {
      try visitor.visitSingularEnumField(value: self.battleType, fieldNumber: 2)
    }
    if self.serverMs != 0 {
      try visitor.visitSingularInt64Field(value: self.serverMs, fieldNumber: 3)
    }
    if !self.battleActions.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.battleActions, fieldNumber: 4)
    }
    if self.battleStartTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.battleStartTimestampMs, fieldNumber: 5)
    }
    if self.battleEndTimestampMs != 0 {
      try visitor.visitSingularInt64Field(value: self.battleEndTimestampMs, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Battle_BattleLog, rhs: POGOProtos_Data_Battle_BattleLog) -> Bool {
    if lhs.state != rhs.state {return false}
    if lhs.battleType != rhs.battleType {return false}
    if lhs.serverMs != rhs.serverMs {return false}
    if lhs.battleActions != rhs.battleActions {return false}
    if lhs.battleStartTimestampMs != rhs.battleStartTimestampMs {return false}
    if lhs.battleEndTimestampMs != rhs.battleEndTimestampMs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
