// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Battle/Battle.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Battle_Battle {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var battleStartMs: Int64 = 0

  public var battleEndMs: Int64 = 0

  public var battleID: String = String()

  public var defender: POGOProtos_Data_Battle_BattleParticipant {
    get {return _defender ?? POGOProtos_Data_Battle_BattleParticipant()}
    set {_defender = newValue}
  }
  /// Returns true if `defender` has been explicitly set.
  public var hasDefender: Bool {return self._defender != nil}
  /// Clears the value of `defender`. Subsequent reads from it will return its default value.
  public mutating func clearDefender() {self._defender = nil}

  public var battleLog: POGOProtos_Data_Battle_BattleLog {
    get {return _battleLog ?? POGOProtos_Data_Battle_BattleLog()}
    set {_battleLog = newValue}
  }
  /// Returns true if `battleLog` has been explicitly set.
  public var hasBattleLog: Bool {return self._battleLog != nil}
  /// Clears the value of `battleLog`. Subsequent reads from it will return its default value.
  public mutating func clearBattleLog() {self._battleLog = nil}

  public var attacker: POGOProtos_Data_Battle_BattleParticipant {
    get {return _attacker ?? POGOProtos_Data_Battle_BattleParticipant()}
    set {_attacker = newValue}
  }
  /// Returns true if `attacker` has been explicitly set.
  public var hasAttacker: Bool {return self._attacker != nil}
  /// Clears the value of `attacker`. Subsequent reads from it will return its default value.
  public mutating func clearAttacker() {self._attacker = nil}

  public var weatherCondition: POGOProtos_Enums_WeatherCondition = .none

  public var highestFriendshipMilestone: POGOProtos_Enums_FriendshipLevelMilestone = .friendshipLevelUnset

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _defender: POGOProtos_Data_Battle_BattleParticipant? = nil
  fileprivate var _battleLog: POGOProtos_Data_Battle_BattleLog? = nil
  fileprivate var _attacker: POGOProtos_Data_Battle_BattleParticipant? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Battle"

extension POGOProtos_Data_Battle_Battle: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Battle"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "battle_start_ms"),
    2: .standard(proto: "battle_end_ms"),
    3: .standard(proto: "battle_id"),
    4: .same(proto: "defender"),
    5: .standard(proto: "battle_log"),
    6: .same(proto: "attacker"),
    7: .standard(proto: "weather_condition"),
    8: .standard(proto: "highest_friendship_milestone"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.battleStartMs) }()
      case 2: try { try decoder.decodeSingularInt64Field(value: &self.battleEndMs) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.battleID) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._defender) }()
      case 5: try { try decoder.decodeSingularMessageField(value: &self._battleLog) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._attacker) }()
      case 7: try { try decoder.decodeSingularEnumField(value: &self.weatherCondition) }()
      case 8: try { try decoder.decodeSingularEnumField(value: &self.highestFriendshipMilestone) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.battleStartMs != 0 {
      try visitor.visitSingularInt64Field(value: self.battleStartMs, fieldNumber: 1)
    }
    if self.battleEndMs != 0 {
      try visitor.visitSingularInt64Field(value: self.battleEndMs, fieldNumber: 2)
    }
    if !self.battleID.isEmpty {
      try visitor.visitSingularStringField(value: self.battleID, fieldNumber: 3)
    }
    if let v = self._defender {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._battleLog {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    if let v = self._attacker {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    if self.weatherCondition != .none {
      try visitor.visitSingularEnumField(value: self.weatherCondition, fieldNumber: 7)
    }
    if self.highestFriendshipMilestone != .friendshipLevelUnset {
      try visitor.visitSingularEnumField(value: self.highestFriendshipMilestone, fieldNumber: 8)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Battle_Battle, rhs: POGOProtos_Data_Battle_Battle) -> Bool {
    if lhs.battleStartMs != rhs.battleStartMs {return false}
    if lhs.battleEndMs != rhs.battleEndMs {return false}
    if lhs.battleID != rhs.battleID {return false}
    if lhs._defender != rhs._defender {return false}
    if lhs._battleLog != rhs._battleLog {return false}
    if lhs._attacker != rhs._attacker {return false}
    if lhs.weatherCondition != rhs.weatherCondition {return false}
    if lhs.highestFriendshipMilestone != rhs.highestFriendshipMilestone {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
