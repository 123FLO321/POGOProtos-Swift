// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Gym/GymState.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Gym_GymState {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var fortData: POGOProtos_Map_Fort_FortData {
    get {return _fortData ?? POGOProtos_Map_Fort_FortData()}
    set {_fortData = newValue}
  }
  /// Returns true if `fortData` has been explicitly set.
  public var hasFortData: Bool {return self._fortData != nil}
  /// Clears the value of `fortData`. Subsequent reads from it will return its default value.
  public mutating func clearFortData() {self._fortData = nil}

  public var memberships: [POGOProtos_Data_Gym_GymMembership] = []

  public var deployLockout: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _fortData: POGOProtos_Map_Fort_FortData? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Gym"

extension POGOProtos_Data_Gym_GymState: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GymState"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "fort_data"),
    2: .same(proto: "memberships"),
    3: .standard(proto: "deploy_lockout"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._fortData) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.memberships) }()
      case 3: try { try decoder.decodeSingularBoolField(value: &self.deployLockout) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._fortData {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if !self.memberships.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.memberships, fieldNumber: 2)
    }
    if self.deployLockout != false {
      try visitor.visitSingularBoolField(value: self.deployLockout, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Gym_GymState, rhs: POGOProtos_Data_Gym_GymState) -> Bool {
    if lhs._fortData != rhs._fortData {return false}
    if lhs.memberships != rhs.memberships {return false}
    if lhs.deployLockout != rhs.deployLockout {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
