// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Gym/GymState.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Data_Gym_GymState {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var fortData: POGOProtos_Map_Fort_FortData {
    get {return _storage._fortData ?? POGOProtos_Map_Fort_FortData()}
    set {_uniqueStorage()._fortData = newValue}
  }
  /// Returns true if `fortData` has been explicitly set.
  var hasFortData: Bool {return _storage._fortData != nil}
  /// Clears the value of `fortData`. Subsequent reads from it will return its default value.
  mutating func clearFortData() {_uniqueStorage()._fortData = nil}

  var memberships: [POGOProtos_Data_Gym_GymMembership] {
    get {return _storage._memberships}
    set {_uniqueStorage()._memberships = newValue}
  }

  var deployLockout: Bool {
    get {return _storage._deployLockout}
    set {_uniqueStorage()._deployLockout = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Gym"

extension POGOProtos_Data_Gym_GymState: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".GymState"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "fort_data"),
    2: .same(proto: "memberships"),
    3: .standard(proto: "deploy_lockout"),
  ]

  fileprivate class _StorageClass {
    var _fortData: POGOProtos_Map_Fort_FortData? = nil
    var _memberships: [POGOProtos_Data_Gym_GymMembership] = []
    var _deployLockout: Bool = false

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _fortData = source._fortData
      _memberships = source._memberships
      _deployLockout = source._deployLockout
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._fortData)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._memberships)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._deployLockout)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._fortData {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._memberships.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._memberships, fieldNumber: 2)
      }
      if _storage._deployLockout != false {
        try visitor.visitSingularBoolField(value: _storage._deployLockout, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Data_Gym_GymState, rhs: POGOProtos_Data_Gym_GymState) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._fortData != rhs_storage._fortData {return false}
        if _storage._memberships != rhs_storage._memberships {return false}
        if _storage._deployLockout != rhs_storage._deployLockout {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
