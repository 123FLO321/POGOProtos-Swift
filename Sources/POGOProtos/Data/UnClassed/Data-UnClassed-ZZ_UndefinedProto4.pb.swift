// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/UnClassed/ZZ_UndefinedProto4.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_UnClassed_ZZ_UndefinedProto4 {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var zz4ObStringValue0: String = String()

  public var zz4ObListValue0: [POGOProtos_Data_UnClassed_ZZ_UndefinedProto4.ZZ_UndefinedProto2] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct ZZ_UndefinedProto2 {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var zz2ObInt64Value: Int64 = 0

    public var zz2ObDoubleValue0: Double = 0

    public var zz2ObDoubleValue1: Double = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.UnClassed"

extension POGOProtos_Data_UnClassed_ZZ_UndefinedProto4: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ZZ_UndefinedProto4"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "zz_4_ob_string_value_0"),
    2: .standard(proto: "zz_4_ob_list_value_0"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.zz4ObStringValue0) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.zz4ObListValue0) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.zz4ObStringValue0.isEmpty {
      try visitor.visitSingularStringField(value: self.zz4ObStringValue0, fieldNumber: 1)
    }
    if !self.zz4ObListValue0.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.zz4ObListValue0, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_UnClassed_ZZ_UndefinedProto4, rhs: POGOProtos_Data_UnClassed_ZZ_UndefinedProto4) -> Bool {
    if lhs.zz4ObStringValue0 != rhs.zz4ObStringValue0 {return false}
    if lhs.zz4ObListValue0 != rhs.zz4ObListValue0 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_UnClassed_ZZ_UndefinedProto4.ZZ_UndefinedProto2: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_UnClassed_ZZ_UndefinedProto4.protoMessageName + ".ZZ_UndefinedProto2"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "zz_2_ob_int64_value"),
    2: .standard(proto: "zz_2_ob_double_value_0"),
    3: .standard(proto: "zz_2_ob_double_value_1"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.zz2ObInt64Value) }()
      case 2: try { try decoder.decodeSingularDoubleField(value: &self.zz2ObDoubleValue0) }()
      case 3: try { try decoder.decodeSingularDoubleField(value: &self.zz2ObDoubleValue1) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.zz2ObInt64Value != 0 {
      try visitor.visitSingularInt64Field(value: self.zz2ObInt64Value, fieldNumber: 1)
    }
    if self.zz2ObDoubleValue0 != 0 {
      try visitor.visitSingularDoubleField(value: self.zz2ObDoubleValue0, fieldNumber: 2)
    }
    if self.zz2ObDoubleValue1 != 0 {
      try visitor.visitSingularDoubleField(value: self.zz2ObDoubleValue1, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_UnClassed_ZZ_UndefinedProto4.ZZ_UndefinedProto2, rhs: POGOProtos_Data_UnClassed_ZZ_UndefinedProto4.ZZ_UndefinedProto2) -> Bool {
    if lhs.zz2ObInt64Value != rhs.zz2ObInt64Value {return false}
    if lhs.zz2ObDoubleValue0 != rhs.zz2ObDoubleValue0 {return false}
    if lhs.zz2ObDoubleValue1 != rhs.zz2ObDoubleValue1 {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
