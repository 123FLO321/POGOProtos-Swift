// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Grapeshot/GrapeshotUploadingData.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Grapeshot_GrapeshotUploadingData {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var chunkData: [POGOProtos_Data_Grapeshot_GrapeshotChunkData] {
    get {return _storage._chunkData}
    set {_uniqueStorage()._chunkData = newValue}
  }

  public var composeData: POGOProtos_Data_Grapeshot_GrapeshotComposeData {
    get {return _storage._composeData ?? POGOProtos_Data_Grapeshot_GrapeshotComposeData()}
    set {_uniqueStorage()._composeData = newValue}
  }
  /// Returns true if `composeData` has been explicitly set.
  public var hasComposeData: Bool {return _storage._composeData != nil}
  /// Clears the value of `composeData`. Subsequent reads from it will return its default value.
  public mutating func clearComposeData() {_uniqueStorage()._composeData = nil}

  public var gcsBucket: String {
    get {return _storage._gcsBucket}
    set {_uniqueStorage()._gcsBucket = newValue}
  }

  public var numberOfChunks: Int32 {
    get {return _storage._numberOfChunks}
    set {_uniqueStorage()._numberOfChunks = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Grapeshot"

extension POGOProtos_Data_Grapeshot_GrapeshotUploadingData: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GrapeshotUploadingData"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "chunk_data"),
    2: .standard(proto: "compose_data"),
    3: .standard(proto: "gcs_bucket"),
    4: .standard(proto: "number_of_chunks"),
  ]

  fileprivate class _StorageClass {
    var _chunkData: [POGOProtos_Data_Grapeshot_GrapeshotChunkData] = []
    var _composeData: POGOProtos_Data_Grapeshot_GrapeshotComposeData? = nil
    var _gcsBucket: String = String()
    var _numberOfChunks: Int32 = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _chunkData = source._chunkData
      _composeData = source._composeData
      _gcsBucket = source._gcsBucket
      _numberOfChunks = source._numberOfChunks
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._chunkData)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._composeData)
        case 3: try decoder.decodeSingularStringField(value: &_storage._gcsBucket)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._numberOfChunks)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._chunkData.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._chunkData, fieldNumber: 1)
      }
      if let v = _storage._composeData {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._gcsBucket.isEmpty {
        try visitor.visitSingularStringField(value: _storage._gcsBucket, fieldNumber: 3)
      }
      if _storage._numberOfChunks != 0 {
        try visitor.visitSingularInt32Field(value: _storage._numberOfChunks, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Grapeshot_GrapeshotUploadingData, rhs: POGOProtos_Data_Grapeshot_GrapeshotUploadingData) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._chunkData != rhs_storage._chunkData {return false}
        if _storage._composeData != rhs_storage._composeData {return false}
        if _storage._gcsBucket != rhs_storage._gcsBucket {return false}
        if _storage._numberOfChunks != rhs_storage._numberOfChunks {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
