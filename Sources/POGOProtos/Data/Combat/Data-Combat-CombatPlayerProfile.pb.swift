// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Data/Combat/CombatPlayerProfile.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Data_Combat_CombatPlayerProfile {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var playerID: String = String()

  public var publicProfile: POGOProtos_Data_Player_PlayerPublicProfile {
    get {return _publicProfile ?? POGOProtos_Data_Player_PlayerPublicProfile()}
    set {_publicProfile = newValue}
  }
  /// Returns true if `publicProfile` has been explicitly set.
  public var hasPublicProfile: Bool {return self._publicProfile != nil}
  /// Clears the value of `publicProfile`. Subsequent reads from it will return its default value.
  public mutating func clearPublicProfile() {self._publicProfile = nil}

  public var combatLeagueTemplateID: [String] = []

  public var buddyPokemonID: UInt64 = 0

  public var location: POGOProtos_Data_Combat_CombatPlayerProfile.Location {
    get {return _location ?? POGOProtos_Data_Combat_CombatPlayerProfile.Location()}
    set {_location = newValue}
  }
  /// Returns true if `location` has been explicitly set.
  public var hasLocation: Bool {return self._location != nil}
  /// Clears the value of `location`. Subsequent reads from it will return its default value.
  public mutating func clearLocation() {self._location = nil}

  public var combatPlayerPreferences: POGOProtos_Data_Combat_CombatPlayerPreferences {
    get {return _combatPlayerPreferences ?? POGOProtos_Data_Combat_CombatPlayerPreferences()}
    set {_combatPlayerPreferences = newValue}
  }
  /// Returns true if `combatPlayerPreferences` has been explicitly set.
  public var hasCombatPlayerPreferences: Bool {return self._combatPlayerPreferences != nil}
  /// Clears the value of `combatPlayerPreferences`. Subsequent reads from it will return its default value.
  public mutating func clearCombatPlayerPreferences() {self._combatPlayerPreferences = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct Location {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var latDegree: Double = 0

    public var lngDegree: Double = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _publicProfile: POGOProtos_Data_Player_PlayerPublicProfile? = nil
  fileprivate var _location: POGOProtos_Data_Combat_CombatPlayerProfile.Location? = nil
  fileprivate var _combatPlayerPreferences: POGOProtos_Data_Combat_CombatPlayerPreferences? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Data.Combat"

extension POGOProtos_Data_Combat_CombatPlayerProfile: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CombatPlayerProfile"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "player_id"),
    2: .standard(proto: "public_profile"),
    3: .standard(proto: "combat_league_template_id"),
    4: .standard(proto: "buddy_pokemon_id"),
    5: .same(proto: "location"),
    6: .standard(proto: "combat_player_preferences"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.playerID)
      case 2: try decoder.decodeSingularMessageField(value: &self._publicProfile)
      case 3: try decoder.decodeRepeatedStringField(value: &self.combatLeagueTemplateID)
      case 4: try decoder.decodeSingularFixed64Field(value: &self.buddyPokemonID)
      case 5: try decoder.decodeSingularMessageField(value: &self._location)
      case 6: try decoder.decodeSingularMessageField(value: &self._combatPlayerPreferences)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.playerID.isEmpty {
      try visitor.visitSingularStringField(value: self.playerID, fieldNumber: 1)
    }
    if let v = self._publicProfile {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if !self.combatLeagueTemplateID.isEmpty {
      try visitor.visitRepeatedStringField(value: self.combatLeagueTemplateID, fieldNumber: 3)
    }
    if self.buddyPokemonID != 0 {
      try visitor.visitSingularFixed64Field(value: self.buddyPokemonID, fieldNumber: 4)
    }
    if let v = self._location {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    if let v = self._combatPlayerPreferences {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Combat_CombatPlayerProfile, rhs: POGOProtos_Data_Combat_CombatPlayerProfile) -> Bool {
    if lhs.playerID != rhs.playerID {return false}
    if lhs._publicProfile != rhs._publicProfile {return false}
    if lhs.combatLeagueTemplateID != rhs.combatLeagueTemplateID {return false}
    if lhs.buddyPokemonID != rhs.buddyPokemonID {return false}
    if lhs._location != rhs._location {return false}
    if lhs._combatPlayerPreferences != rhs._combatPlayerPreferences {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Data_Combat_CombatPlayerProfile.Location: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Data_Combat_CombatPlayerProfile.protoMessageName + ".Location"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "lat_degree"),
    2: .standard(proto: "lng_degree"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularDoubleField(value: &self.latDegree)
      case 2: try decoder.decodeSingularDoubleField(value: &self.lngDegree)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.latDegree != 0 {
      try visitor.visitSingularDoubleField(value: self.latDegree, fieldNumber: 1)
    }
    if self.lngDegree != 0 {
      try visitor.visitSingularDoubleField(value: self.lngDegree, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Data_Combat_CombatPlayerProfile.Location, rhs: POGOProtos_Data_Combat_CombatPlayerProfile.Location) -> Bool {
    if lhs.latDegree != rhs.latDegree {return false}
    if lhs.lngDegree != rhs.lngDegree {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
