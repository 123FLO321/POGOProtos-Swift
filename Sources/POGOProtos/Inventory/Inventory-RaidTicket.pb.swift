// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Inventory/RaidTicket.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Inventory_RaidTicket {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var ticketID: String = String()

  public var item: POGOProtos_Inventory_Item_ItemId = .itemUnknown

  public var exclusiveInfo: POGOProtos_Inventory_ExclusiveTicketInfo {
    get {return _exclusiveInfo ?? POGOProtos_Inventory_ExclusiveTicketInfo()}
    set {_exclusiveInfo = newValue}
  }
  /// Returns true if `exclusiveInfo` has been explicitly set.
  public var hasExclusiveInfo: Bool {return self._exclusiveInfo != nil}
  /// Clears the value of `exclusiveInfo`. Subsequent reads from it will return its default value.
  public mutating func clearExclusiveInfo() {self._exclusiveInfo = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _exclusiveInfo: POGOProtos_Inventory_ExclusiveTicketInfo? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Inventory"

extension POGOProtos_Inventory_RaidTicket: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".RaidTicket"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "ticket_id"),
    2: .same(proto: "item"),
    4: .standard(proto: "exclusive_info"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.ticketID)
      case 2: try decoder.decodeSingularEnumField(value: &self.item)
      case 4: try decoder.decodeSingularMessageField(value: &self._exclusiveInfo)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.ticketID.isEmpty {
      try visitor.visitSingularStringField(value: self.ticketID, fieldNumber: 1)
    }
    if self.item != .itemUnknown {
      try visitor.visitSingularEnumField(value: self.item, fieldNumber: 2)
    }
    if let v = self._exclusiveInfo {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Inventory_RaidTicket, rhs: POGOProtos_Inventory_RaidTicket) -> Bool {
    if lhs.ticketID != rhs.ticketID {return false}
    if lhs.item != rhs.item {return false}
    if lhs._exclusiveInfo != rhs._exclusiveInfo {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
