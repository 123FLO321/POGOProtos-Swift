// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Inventory/InventoryItem.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Inventory_InventoryItem {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var modifiedTimestampMs: Int64 {
    get {return _storage._modifiedTimestampMs}
    set {_uniqueStorage()._modifiedTimestampMs = newValue}
  }

  public var inventoryItem: OneOf_InventoryItem? {
    get {return _storage._inventoryItem}
    set {_uniqueStorage()._inventoryItem = newValue}
  }

  public var deletedItem: POGOProtos_Inventory_InventoryItem.DeletedItem {
    get {
      if case .deletedItem(let v)? = _storage._inventoryItem {return v}
      return POGOProtos_Inventory_InventoryItem.DeletedItem()
    }
    set {_uniqueStorage()._inventoryItem = .deletedItem(newValue)}
  }

  public var inventoryItemData: POGOProtos_Inventory_InventoryItemData {
    get {
      if case .inventoryItemData(let v)? = _storage._inventoryItem {return v}
      return POGOProtos_Inventory_InventoryItemData()
    }
    set {_uniqueStorage()._inventoryItem = .inventoryItemData(newValue)}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum OneOf_InventoryItem: Equatable {
    case deletedItem(POGOProtos_Inventory_InventoryItem.DeletedItem)
    case inventoryItemData(POGOProtos_Inventory_InventoryItemData)

  #if !swift(>=4.1)
    public static func ==(lhs: POGOProtos_Inventory_InventoryItem.OneOf_InventoryItem, rhs: POGOProtos_Inventory_InventoryItem.OneOf_InventoryItem) -> Bool {
      switch (lhs, rhs) {
      case (.deletedItem(let l), .deletedItem(let r)): return l == r
      case (.inventoryItemData(let l), .inventoryItemData(let r)): return l == r
      default: return false
      }
    }
  #endif
  }

  public struct DeletedItem {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var pokemonID: UInt64 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Inventory"

extension POGOProtos_Inventory_InventoryItem: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".InventoryItem"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "modified_timestamp_ms"),
    2: .standard(proto: "deleted_item"),
    3: .standard(proto: "inventory_item_data"),
  ]

  fileprivate class _StorageClass {
    var _modifiedTimestampMs: Int64 = 0
    var _inventoryItem: POGOProtos_Inventory_InventoryItem.OneOf_InventoryItem?

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _modifiedTimestampMs = source._modifiedTimestampMs
      _inventoryItem = source._inventoryItem
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt64Field(value: &_storage._modifiedTimestampMs)
        case 2:
          var v: POGOProtos_Inventory_InventoryItem.DeletedItem?
          if let current = _storage._inventoryItem {
            try decoder.handleConflictingOneOf()
            if case .deletedItem(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {_storage._inventoryItem = .deletedItem(v)}
        case 3:
          var v: POGOProtos_Inventory_InventoryItemData?
          if let current = _storage._inventoryItem {
            try decoder.handleConflictingOneOf()
            if case .inventoryItemData(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {_storage._inventoryItem = .inventoryItemData(v)}
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._modifiedTimestampMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._modifiedTimestampMs, fieldNumber: 1)
      }
      switch _storage._inventoryItem {
      case .deletedItem(let v)?:
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      case .inventoryItemData(let v)?:
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      case nil: break
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Inventory_InventoryItem, rhs: POGOProtos_Inventory_InventoryItem) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._modifiedTimestampMs != rhs_storage._modifiedTimestampMs {return false}
        if _storage._inventoryItem != rhs_storage._inventoryItem {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Inventory_InventoryItem.DeletedItem: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Inventory_InventoryItem.protoMessageName + ".DeletedItem"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "pokemon_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularFixed64Field(value: &self.pokemonID)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.pokemonID != 0 {
      try visitor.visitSingularFixed64Field(value: self.pokemonID, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Inventory_InventoryItem.DeletedItem, rhs: POGOProtos_Inventory_InventoryItem.DeletedItem) -> Bool {
    if lhs.pokemonID != rhs.pokemonID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
