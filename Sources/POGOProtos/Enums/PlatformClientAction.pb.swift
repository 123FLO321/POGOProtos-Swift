// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Enums/PlatformClientAction.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum POGOProtos_Enums_PlatformClientAction: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unknownPlatformClientAction // = 0
  case registerPushNotification // = 5000
  case unregisterPushNotification // = 5001
  case updateNotificationStatus // = 5002
  case optOutPushNotificationCategory // = 5003
  case downloadGameMasterTemplates // = 5004
  case getInventory // = 5005
  case redeemPasscode // = 5006
  case ping // = 5007
  case addLoginAction // = 5008
  case removeLoginAction // = 5009
  case listLoginAction // = 5010
  case addNewPoi // = 5011
  case proxySocialAction // = 5012
  case clientTelemetry // = 5013
  case getAvailableSubmissions // = 5014
  case getSignedURLForPhotoUpload // = 5015
  case replaceLoginAction // = 5016
  case proxySocialSideChannelAction // = 5017
  case collectClientTelemetry // = 5018
  case purchaseSku // = 5019
  case getAvailableSkusAndBalances // = 5020
  case redeemGoogleReceipt // = 5021
  case redeemAppleReceipt // = 5022
  case redeemDesktopReceipt // = 5023
  case updateFitnessMetrics // = 5024
  case getFitnessReport // = 5025
  case getClientTelemetrySettings // = 5026
  case pingAsync // = 5027
  case registerBackgroundService // = 5028
  case getClientBgmodeSettings // = 5029
  case pingDownstream // = 5030
  case setInGameCurrencyExchangeRate // = 5032
  case UNRECOGNIZED(Int)

  public init() {
    self = .unknownPlatformClientAction
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unknownPlatformClientAction
    case 5000: self = .registerPushNotification
    case 5001: self = .unregisterPushNotification
    case 5002: self = .updateNotificationStatus
    case 5003: self = .optOutPushNotificationCategory
    case 5004: self = .downloadGameMasterTemplates
    case 5005: self = .getInventory
    case 5006: self = .redeemPasscode
    case 5007: self = .ping
    case 5008: self = .addLoginAction
    case 5009: self = .removeLoginAction
    case 5010: self = .listLoginAction
    case 5011: self = .addNewPoi
    case 5012: self = .proxySocialAction
    case 5013: self = .clientTelemetry
    case 5014: self = .getAvailableSubmissions
    case 5015: self = .getSignedURLForPhotoUpload
    case 5016: self = .replaceLoginAction
    case 5017: self = .proxySocialSideChannelAction
    case 5018: self = .collectClientTelemetry
    case 5019: self = .purchaseSku
    case 5020: self = .getAvailableSkusAndBalances
    case 5021: self = .redeemGoogleReceipt
    case 5022: self = .redeemAppleReceipt
    case 5023: self = .redeemDesktopReceipt
    case 5024: self = .updateFitnessMetrics
    case 5025: self = .getFitnessReport
    case 5026: self = .getClientTelemetrySettings
    case 5027: self = .pingAsync
    case 5028: self = .registerBackgroundService
    case 5029: self = .getClientBgmodeSettings
    case 5030: self = .pingDownstream
    case 5032: self = .setInGameCurrencyExchangeRate
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unknownPlatformClientAction: return 0
    case .registerPushNotification: return 5000
    case .unregisterPushNotification: return 5001
    case .updateNotificationStatus: return 5002
    case .optOutPushNotificationCategory: return 5003
    case .downloadGameMasterTemplates: return 5004
    case .getInventory: return 5005
    case .redeemPasscode: return 5006
    case .ping: return 5007
    case .addLoginAction: return 5008
    case .removeLoginAction: return 5009
    case .listLoginAction: return 5010
    case .addNewPoi: return 5011
    case .proxySocialAction: return 5012
    case .clientTelemetry: return 5013
    case .getAvailableSubmissions: return 5014
    case .getSignedURLForPhotoUpload: return 5015
    case .replaceLoginAction: return 5016
    case .proxySocialSideChannelAction: return 5017
    case .collectClientTelemetry: return 5018
    case .purchaseSku: return 5019
    case .getAvailableSkusAndBalances: return 5020
    case .redeemGoogleReceipt: return 5021
    case .redeemAppleReceipt: return 5022
    case .redeemDesktopReceipt: return 5023
    case .updateFitnessMetrics: return 5024
    case .getFitnessReport: return 5025
    case .getClientTelemetrySettings: return 5026
    case .pingAsync: return 5027
    case .registerBackgroundService: return 5028
    case .getClientBgmodeSettings: return 5029
    case .pingDownstream: return 5030
    case .setInGameCurrencyExchangeRate: return 5032
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension POGOProtos_Enums_PlatformClientAction: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Enums_PlatformClientAction] = [
    .unknownPlatformClientAction,
    .registerPushNotification,
    .unregisterPushNotification,
    .updateNotificationStatus,
    .optOutPushNotificationCategory,
    .downloadGameMasterTemplates,
    .getInventory,
    .redeemPasscode,
    .ping,
    .addLoginAction,
    .removeLoginAction,
    .listLoginAction,
    .addNewPoi,
    .proxySocialAction,
    .clientTelemetry,
    .getAvailableSubmissions,
    .getSignedURLForPhotoUpload,
    .replaceLoginAction,
    .proxySocialSideChannelAction,
    .collectClientTelemetry,
    .purchaseSku,
    .getAvailableSkusAndBalances,
    .redeemGoogleReceipt,
    .redeemAppleReceipt,
    .redeemDesktopReceipt,
    .updateFitnessMetrics,
    .getFitnessReport,
    .getClientTelemetrySettings,
    .pingAsync,
    .registerBackgroundService,
    .getClientBgmodeSettings,
    .pingDownstream,
    .setInGameCurrencyExchangeRate,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension POGOProtos_Enums_PlatformClientAction: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN_PLATFORM_CLIENT_ACTION"),
    5000: .same(proto: "REGISTER_PUSH_NOTIFICATION"),
    5001: .same(proto: "UNREGISTER_PUSH_NOTIFICATION"),
    5002: .same(proto: "UPDATE_NOTIFICATION_STATUS"),
    5003: .same(proto: "OPT_OUT_PUSH_NOTIFICATION_CATEGORY"),
    5004: .same(proto: "DOWNLOAD_GAME_MASTER_TEMPLATES"),
    5005: .same(proto: "GET_INVENTORY"),
    5006: .same(proto: "REDEEM_PASSCODE"),
    5007: .same(proto: "PING"),
    5008: .same(proto: "ADD_LOGIN_ACTION"),
    5009: .same(proto: "REMOVE_LOGIN_ACTION"),
    5010: .same(proto: "LIST_LOGIN_ACTION"),
    5011: .same(proto: "ADD_NEW_POI"),
    5012: .same(proto: "PROXY_SOCIAL_ACTION"),
    5013: .same(proto: "CLIENT_TELEMETRY"),
    5014: .same(proto: "GET_AVAILABLE_SUBMISSIONS"),
    5015: .same(proto: "GET_SIGNED_URL_FOR_PHOTO_UPLOAD"),
    5016: .same(proto: "REPLACE_LOGIN_ACTION"),
    5017: .same(proto: "PROXY_SOCIAL_SIDE_CHANNEL_ACTION"),
    5018: .same(proto: "COLLECT_CLIENT_TELEMETRY"),
    5019: .same(proto: "PURCHASE_SKU"),
    5020: .same(proto: "GET_AVAILABLE_SKUS_AND_BALANCES"),
    5021: .same(proto: "REDEEM_GOOGLE_RECEIPT"),
    5022: .same(proto: "REDEEM_APPLE_RECEIPT"),
    5023: .same(proto: "REDEEM_DESKTOP_RECEIPT"),
    5024: .same(proto: "UPDATE_FITNESS_METRICS"),
    5025: .same(proto: "GET_FITNESS_REPORT"),
    5026: .same(proto: "GET_CLIENT_TELEMETRY_SETTINGS"),
    5027: .same(proto: "PING_ASYNC"),
    5028: .same(proto: "REGISTER_BACKGROUND_SERVICE"),
    5029: .same(proto: "GET_CLIENT_BGMODE_SETTINGS"),
    5030: .same(proto: "PING_DOWNSTREAM"),
    5032: .same(proto: "SET_IN_GAME_CURRENCY_EXCHANGE_RATE"),
  ]
}
