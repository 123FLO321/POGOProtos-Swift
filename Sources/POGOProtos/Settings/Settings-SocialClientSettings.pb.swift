// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/SocialClientSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_SocialClientSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var enableSocial: Bool = false

  public var maxFriendDetails: Int32 = 0

  public var playerLevelGate: Int32 = 0

  public var maxFriendNicknameLength: Int32 = 0

  public var enableAddFriendViaQrCode: Bool = false

  public var enableShareExPass: Bool = false

  public var enableFacebookFriends: Bool = false

  public var facebookFriendLimitPerRequest: Int32 = 0

  public var disableFacebookFriendsOpeningPrompt: Bool = false

  public var enableGiftabilityV2: Bool = false

  public var enableRemoteGifting: Bool = false

  public var enableSticker: Bool = false

  public var crossGameSocialSettings: POGOProtos_Settings_CrossGameSocialGlobalSettings {
    get {return _crossGameSocialSettings ?? POGOProtos_Settings_CrossGameSocialGlobalSettings()}
    set {_crossGameSocialSettings = newValue}
  }
  /// Returns true if `crossGameSocialSettings` has been explicitly set.
  public var hasCrossGameSocialSettings: Bool {return self._crossGameSocialSettings != nil}
  /// Clears the value of `crossGameSocialSettings`. Subsequent reads from it will return its default value.
  public mutating func clearCrossGameSocialSettings() {self._crossGameSocialSettings = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _crossGameSocialSettings: POGOProtos_Settings_CrossGameSocialGlobalSettings? = nil
}

public struct POGOProtos_Settings_SocialGiftCountTelemetry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unopenedGiftCount: Int32 = 0

  public var unsentGiftCount: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings"

extension POGOProtos_Settings_SocialClientSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SocialClientSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "enable_social"),
    2: .standard(proto: "max_friend_details"),
    3: .standard(proto: "player_level_gate"),
    4: .standard(proto: "max_friend_nickname_length"),
    5: .standard(proto: "enable_add_friend_via_qr_code"),
    6: .standard(proto: "enable_share_ex_pass"),
    7: .standard(proto: "enable_facebook_friends"),
    8: .standard(proto: "facebook_friend_limit_per_request"),
    9: .standard(proto: "disable_facebook_friends_opening_prompt"),
    11: .standard(proto: "enable_giftability_v2"),
    12: .standard(proto: "enable_remote_gifting"),
    13: .standard(proto: "enable_sticker"),
    14: .standard(proto: "cross_game_social_settings"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.enableSocial) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.maxFriendDetails) }()
      case 3: try { try decoder.decodeSingularInt32Field(value: &self.playerLevelGate) }()
      case 4: try { try decoder.decodeSingularInt32Field(value: &self.maxFriendNicknameLength) }()
      case 5: try { try decoder.decodeSingularBoolField(value: &self.enableAddFriendViaQrCode) }()
      case 6: try { try decoder.decodeSingularBoolField(value: &self.enableShareExPass) }()
      case 7: try { try decoder.decodeSingularBoolField(value: &self.enableFacebookFriends) }()
      case 8: try { try decoder.decodeSingularInt32Field(value: &self.facebookFriendLimitPerRequest) }()
      case 9: try { try decoder.decodeSingularBoolField(value: &self.disableFacebookFriendsOpeningPrompt) }()
      case 11: try { try decoder.decodeSingularBoolField(value: &self.enableGiftabilityV2) }()
      case 12: try { try decoder.decodeSingularBoolField(value: &self.enableRemoteGifting) }()
      case 13: try { try decoder.decodeSingularBoolField(value: &self.enableSticker) }()
      case 14: try { try decoder.decodeSingularMessageField(value: &self._crossGameSocialSettings) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.enableSocial != false {
      try visitor.visitSingularBoolField(value: self.enableSocial, fieldNumber: 1)
    }
    if self.maxFriendDetails != 0 {
      try visitor.visitSingularInt32Field(value: self.maxFriendDetails, fieldNumber: 2)
    }
    if self.playerLevelGate != 0 {
      try visitor.visitSingularInt32Field(value: self.playerLevelGate, fieldNumber: 3)
    }
    if self.maxFriendNicknameLength != 0 {
      try visitor.visitSingularInt32Field(value: self.maxFriendNicknameLength, fieldNumber: 4)
    }
    if self.enableAddFriendViaQrCode != false {
      try visitor.visitSingularBoolField(value: self.enableAddFriendViaQrCode, fieldNumber: 5)
    }
    if self.enableShareExPass != false {
      try visitor.visitSingularBoolField(value: self.enableShareExPass, fieldNumber: 6)
    }
    if self.enableFacebookFriends != false {
      try visitor.visitSingularBoolField(value: self.enableFacebookFriends, fieldNumber: 7)
    }
    if self.facebookFriendLimitPerRequest != 0 {
      try visitor.visitSingularInt32Field(value: self.facebookFriendLimitPerRequest, fieldNumber: 8)
    }
    if self.disableFacebookFriendsOpeningPrompt != false {
      try visitor.visitSingularBoolField(value: self.disableFacebookFriendsOpeningPrompt, fieldNumber: 9)
    }
    if self.enableGiftabilityV2 != false {
      try visitor.visitSingularBoolField(value: self.enableGiftabilityV2, fieldNumber: 11)
    }
    if self.enableRemoteGifting != false {
      try visitor.visitSingularBoolField(value: self.enableRemoteGifting, fieldNumber: 12)
    }
    if self.enableSticker != false {
      try visitor.visitSingularBoolField(value: self.enableSticker, fieldNumber: 13)
    }
    if let v = self._crossGameSocialSettings {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_SocialClientSettings, rhs: POGOProtos_Settings_SocialClientSettings) -> Bool {
    if lhs.enableSocial != rhs.enableSocial {return false}
    if lhs.maxFriendDetails != rhs.maxFriendDetails {return false}
    if lhs.playerLevelGate != rhs.playerLevelGate {return false}
    if lhs.maxFriendNicknameLength != rhs.maxFriendNicknameLength {return false}
    if lhs.enableAddFriendViaQrCode != rhs.enableAddFriendViaQrCode {return false}
    if lhs.enableShareExPass != rhs.enableShareExPass {return false}
    if lhs.enableFacebookFriends != rhs.enableFacebookFriends {return false}
    if lhs.facebookFriendLimitPerRequest != rhs.facebookFriendLimitPerRequest {return false}
    if lhs.disableFacebookFriendsOpeningPrompt != rhs.disableFacebookFriendsOpeningPrompt {return false}
    if lhs.enableGiftabilityV2 != rhs.enableGiftabilityV2 {return false}
    if lhs.enableRemoteGifting != rhs.enableRemoteGifting {return false}
    if lhs.enableSticker != rhs.enableSticker {return false}
    if lhs._crossGameSocialSettings != rhs._crossGameSocialSettings {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_SocialGiftCountTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SocialGiftCountTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "unopened_gift_count"),
    2: .standard(proto: "unsent_gift_count"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self.unopenedGiftCount) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.unsentGiftCount) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.unopenedGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unopenedGiftCount, fieldNumber: 1)
    }
    if self.unsentGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unsentGiftCount, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_SocialGiftCountTelemetry, rhs: POGOProtos_Settings_SocialGiftCountTelemetry) -> Bool {
    if lhs.unopenedGiftCount != rhs.unopenedGiftCount {return false}
    if lhs.unsentGiftCount != rhs.unsentGiftCount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
