// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/SocialClientSettings.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_SocialClientSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var enableSocial: Bool {
    get {return _storage._enableSocial}
    set {_uniqueStorage()._enableSocial = newValue}
  }

  public var maxFriendDetails: Int32 {
    get {return _storage._maxFriendDetails}
    set {_uniqueStorage()._maxFriendDetails = newValue}
  }

  public var playerLevelGate: Int32 {
    get {return _storage._playerLevelGate}
    set {_uniqueStorage()._playerLevelGate = newValue}
  }

  public var maxFriendNicknameLength: Int32 {
    get {return _storage._maxFriendNicknameLength}
    set {_uniqueStorage()._maxFriendNicknameLength = newValue}
  }

  public var enableAddFriendViaQrCode: Bool {
    get {return _storage._enableAddFriendViaQrCode}
    set {_uniqueStorage()._enableAddFriendViaQrCode = newValue}
  }

  public var enableShareExPass: Bool {
    get {return _storage._enableShareExPass}
    set {_uniqueStorage()._enableShareExPass = newValue}
  }

  public var enableFacebookFriends: Bool {
    get {return _storage._enableFacebookFriends}
    set {_uniqueStorage()._enableFacebookFriends = newValue}
  }

  public var facebookFriendLimitPerRequest: Int32 {
    get {return _storage._facebookFriendLimitPerRequest}
    set {_uniqueStorage()._facebookFriendLimitPerRequest = newValue}
  }

  public var disableFacebookFriendsOpeningPrompt: Bool {
    get {return _storage._disableFacebookFriendsOpeningPrompt}
    set {_uniqueStorage()._disableFacebookFriendsOpeningPrompt = newValue}
  }

  public var enableGiftabilityV2: Bool {
    get {return _storage._enableGiftabilityV2}
    set {_uniqueStorage()._enableGiftabilityV2 = newValue}
  }

  public var enableRemoteGifting: Bool {
    get {return _storage._enableRemoteGifting}
    set {_uniqueStorage()._enableRemoteGifting = newValue}
  }

  public var enableSticker: Bool {
    get {return _storage._enableSticker}
    set {_uniqueStorage()._enableSticker = newValue}
  }

  public var crossGameSocialSettings: POGOProtos_Settings_CrossGameSocialGlobalSettings {
    get {return _storage._crossGameSocialSettings ?? POGOProtos_Settings_CrossGameSocialGlobalSettings()}
    set {_uniqueStorage()._crossGameSocialSettings = newValue}
  }
  /// Returns true if `crossGameSocialSettings` has been explicitly set.
  public var hasCrossGameSocialSettings: Bool {return _storage._crossGameSocialSettings != nil}
  /// Clears the value of `crossGameSocialSettings`. Subsequent reads from it will return its default value.
  public mutating func clearCrossGameSocialSettings() {_uniqueStorage()._crossGameSocialSettings = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct POGOProtos_Settings_SocialGiftCountTelemetry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unopenedGiftCount: Int32 = 0

  public var unsentGiftCount: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings"

extension POGOProtos_Settings_SocialClientSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SocialClientSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "enable_social"),
    2: .standard(proto: "max_friend_details"),
    3: .standard(proto: "player_level_gate"),
    4: .standard(proto: "max_friend_nickname_length"),
    5: .standard(proto: "enable_add_friend_via_qr_code"),
    6: .standard(proto: "enable_share_ex_pass"),
    7: .standard(proto: "enable_facebook_friends"),
    8: .standard(proto: "facebook_friend_limit_per_request"),
    9: .standard(proto: "disable_facebook_friends_opening_prompt"),
    11: .standard(proto: "enable_giftability_v2"),
    12: .standard(proto: "enable_remote_gifting"),
    13: .standard(proto: "enable_sticker"),
    14: .standard(proto: "cross_game_social_settings"),
  ]

  fileprivate class _StorageClass {
    var _enableSocial: Bool = false
    var _maxFriendDetails: Int32 = 0
    var _playerLevelGate: Int32 = 0
    var _maxFriendNicknameLength: Int32 = 0
    var _enableAddFriendViaQrCode: Bool = false
    var _enableShareExPass: Bool = false
    var _enableFacebookFriends: Bool = false
    var _facebookFriendLimitPerRequest: Int32 = 0
    var _disableFacebookFriendsOpeningPrompt: Bool = false
    var _enableGiftabilityV2: Bool = false
    var _enableRemoteGifting: Bool = false
    var _enableSticker: Bool = false
    var _crossGameSocialSettings: POGOProtos_Settings_CrossGameSocialGlobalSettings? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _enableSocial = source._enableSocial
      _maxFriendDetails = source._maxFriendDetails
      _playerLevelGate = source._playerLevelGate
      _maxFriendNicknameLength = source._maxFriendNicknameLength
      _enableAddFriendViaQrCode = source._enableAddFriendViaQrCode
      _enableShareExPass = source._enableShareExPass
      _enableFacebookFriends = source._enableFacebookFriends
      _facebookFriendLimitPerRequest = source._facebookFriendLimitPerRequest
      _disableFacebookFriendsOpeningPrompt = source._disableFacebookFriendsOpeningPrompt
      _enableGiftabilityV2 = source._enableGiftabilityV2
      _enableRemoteGifting = source._enableRemoteGifting
      _enableSticker = source._enableSticker
      _crossGameSocialSettings = source._crossGameSocialSettings
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._enableSocial)
        case 2: try decoder.decodeSingularInt32Field(value: &_storage._maxFriendDetails)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._playerLevelGate)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._maxFriendNicknameLength)
        case 5: try decoder.decodeSingularBoolField(value: &_storage._enableAddFriendViaQrCode)
        case 6: try decoder.decodeSingularBoolField(value: &_storage._enableShareExPass)
        case 7: try decoder.decodeSingularBoolField(value: &_storage._enableFacebookFriends)
        case 8: try decoder.decodeSingularInt32Field(value: &_storage._facebookFriendLimitPerRequest)
        case 9: try decoder.decodeSingularBoolField(value: &_storage._disableFacebookFriendsOpeningPrompt)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._enableGiftabilityV2)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._enableRemoteGifting)
        case 13: try decoder.decodeSingularBoolField(value: &_storage._enableSticker)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._crossGameSocialSettings)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._enableSocial != false {
        try visitor.visitSingularBoolField(value: _storage._enableSocial, fieldNumber: 1)
      }
      if _storage._maxFriendDetails != 0 {
        try visitor.visitSingularInt32Field(value: _storage._maxFriendDetails, fieldNumber: 2)
      }
      if _storage._playerLevelGate != 0 {
        try visitor.visitSingularInt32Field(value: _storage._playerLevelGate, fieldNumber: 3)
      }
      if _storage._maxFriendNicknameLength != 0 {
        try visitor.visitSingularInt32Field(value: _storage._maxFriendNicknameLength, fieldNumber: 4)
      }
      if _storage._enableAddFriendViaQrCode != false {
        try visitor.visitSingularBoolField(value: _storage._enableAddFriendViaQrCode, fieldNumber: 5)
      }
      if _storage._enableShareExPass != false {
        try visitor.visitSingularBoolField(value: _storage._enableShareExPass, fieldNumber: 6)
      }
      if _storage._enableFacebookFriends != false {
        try visitor.visitSingularBoolField(value: _storage._enableFacebookFriends, fieldNumber: 7)
      }
      if _storage._facebookFriendLimitPerRequest != 0 {
        try visitor.visitSingularInt32Field(value: _storage._facebookFriendLimitPerRequest, fieldNumber: 8)
      }
      if _storage._disableFacebookFriendsOpeningPrompt != false {
        try visitor.visitSingularBoolField(value: _storage._disableFacebookFriendsOpeningPrompt, fieldNumber: 9)
      }
      if _storage._enableGiftabilityV2 != false {
        try visitor.visitSingularBoolField(value: _storage._enableGiftabilityV2, fieldNumber: 11)
      }
      if _storage._enableRemoteGifting != false {
        try visitor.visitSingularBoolField(value: _storage._enableRemoteGifting, fieldNumber: 12)
      }
      if _storage._enableSticker != false {
        try visitor.visitSingularBoolField(value: _storage._enableSticker, fieldNumber: 13)
      }
      if let v = _storage._crossGameSocialSettings {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_SocialClientSettings, rhs: POGOProtos_Settings_SocialClientSettings) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._enableSocial != rhs_storage._enableSocial {return false}
        if _storage._maxFriendDetails != rhs_storage._maxFriendDetails {return false}
        if _storage._playerLevelGate != rhs_storage._playerLevelGate {return false}
        if _storage._maxFriendNicknameLength != rhs_storage._maxFriendNicknameLength {return false}
        if _storage._enableAddFriendViaQrCode != rhs_storage._enableAddFriendViaQrCode {return false}
        if _storage._enableShareExPass != rhs_storage._enableShareExPass {return false}
        if _storage._enableFacebookFriends != rhs_storage._enableFacebookFriends {return false}
        if _storage._facebookFriendLimitPerRequest != rhs_storage._facebookFriendLimitPerRequest {return false}
        if _storage._disableFacebookFriendsOpeningPrompt != rhs_storage._disableFacebookFriendsOpeningPrompt {return false}
        if _storage._enableGiftabilityV2 != rhs_storage._enableGiftabilityV2 {return false}
        if _storage._enableRemoteGifting != rhs_storage._enableRemoteGifting {return false}
        if _storage._enableSticker != rhs_storage._enableSticker {return false}
        if _storage._crossGameSocialSettings != rhs_storage._crossGameSocialSettings {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_SocialGiftCountTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SocialGiftCountTelemetry"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "unopened_gift_count"),
    2: .standard(proto: "unsent_gift_count"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.unopenedGiftCount)
      case 2: try decoder.decodeSingularInt32Field(value: &self.unsentGiftCount)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.unopenedGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unopenedGiftCount, fieldNumber: 1)
    }
    if self.unsentGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unsentGiftCount, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_SocialGiftCountTelemetry, rhs: POGOProtos_Settings_SocialGiftCountTelemetry) -> Bool {
    if lhs.unopenedGiftCount != rhs.unopenedGiftCount {return false}
    if lhs.unsentGiftCount != rhs.unsentGiftCount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
