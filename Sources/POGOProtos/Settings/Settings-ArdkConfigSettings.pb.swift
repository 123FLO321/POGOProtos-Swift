// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/ArdkConfigSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_ArdkConfigSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var orbVocabURL: String = String()

  public var monodpethModelURL: String = String()

  public var monodepthDevices: [String] = []

  public var monodepthContexts: [POGOProtos_Settings_ArdkConfigSettings.ArContext] = []

  public var iosMonodepthModelURL: String = String()

  public var androidMonodepthModelURL: String = String()

  public var monodepthModelURL: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ArContext: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case arEncounter // = 1
    case arSnapshot // = 2
    case singleplayerBuddy // = 3
    case multiplayerBuddy // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .arEncounter
      case 2: self = .arSnapshot
      case 3: self = .singleplayerBuddy
      case 4: self = .multiplayerBuddy
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .arEncounter: return 1
      case .arSnapshot: return 2
      case .singleplayerBuddy: return 3
      case .multiplayerBuddy: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Settings_ArdkConfigSettings.ArContext: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Settings_ArdkConfigSettings.ArContext] = [
    .unset,
    .arEncounter,
    .arSnapshot,
    .singleplayerBuddy,
    .multiplayerBuddy,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings"

extension POGOProtos_Settings_ArdkConfigSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ArdkConfigSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "orb_vocab_url"),
    2: .standard(proto: "monodpeth_model_url"),
    3: .standard(proto: "monodepth_devices"),
    4: .standard(proto: "monodepth_contexts"),
    5: .standard(proto: "ios_monodepth_model_url"),
    6: .standard(proto: "android_monodepth_model_url"),
    7: .standard(proto: "monodepth_model_url"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.orbVocabURL) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.monodpethModelURL) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.monodepthDevices) }()
      case 4: try { try decoder.decodeRepeatedEnumField(value: &self.monodepthContexts) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.iosMonodepthModelURL) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.androidMonodepthModelURL) }()
      case 7: try { try decoder.decodeSingularStringField(value: &self.monodepthModelURL) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.orbVocabURL.isEmpty {
      try visitor.visitSingularStringField(value: self.orbVocabURL, fieldNumber: 1)
    }
    if !self.monodpethModelURL.isEmpty {
      try visitor.visitSingularStringField(value: self.monodpethModelURL, fieldNumber: 2)
    }
    if !self.monodepthDevices.isEmpty {
      try visitor.visitRepeatedStringField(value: self.monodepthDevices, fieldNumber: 3)
    }
    if !self.monodepthContexts.isEmpty {
      try visitor.visitPackedEnumField(value: self.monodepthContexts, fieldNumber: 4)
    }
    if !self.iosMonodepthModelURL.isEmpty {
      try visitor.visitSingularStringField(value: self.iosMonodepthModelURL, fieldNumber: 5)
    }
    if !self.androidMonodepthModelURL.isEmpty {
      try visitor.visitSingularStringField(value: self.androidMonodepthModelURL, fieldNumber: 6)
    }
    if !self.monodepthModelURL.isEmpty {
      try visitor.visitSingularStringField(value: self.monodepthModelURL, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_ArdkConfigSettings, rhs: POGOProtos_Settings_ArdkConfigSettings) -> Bool {
    if lhs.orbVocabURL != rhs.orbVocabURL {return false}
    if lhs.monodpethModelURL != rhs.monodpethModelURL {return false}
    if lhs.monodepthDevices != rhs.monodepthDevices {return false}
    if lhs.monodepthContexts != rhs.monodepthContexts {return false}
    if lhs.iosMonodepthModelURL != rhs.iosMonodepthModelURL {return false}
    if lhs.androidMonodepthModelURL != rhs.androidMonodepthModelURL {return false}
    if lhs.monodepthModelURL != rhs.monodepthModelURL {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_ArdkConfigSettings.ArContext: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "AR_ENCOUNTER"),
    2: .same(proto: "AR_SNAPSHOT"),
    3: .same(proto: "SINGLEPLAYER_BUDDY"),
    4: .same(proto: "MULTIPLAYER_BUDDY"),
  ]
}
