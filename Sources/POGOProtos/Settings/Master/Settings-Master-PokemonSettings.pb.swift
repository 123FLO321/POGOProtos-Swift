// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/PokemonSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_PokemonSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var uniqueID: POGOProtos_Enums_PokemonId {
    get {return _storage._uniqueID}
    set {_uniqueStorage()._uniqueID = newValue}
  }

  public var modelScale: Float {
    get {return _storage._modelScale}
    set {_uniqueStorage()._modelScale = newValue}
  }

  public var type1: POGOProtos_Enums_PokemonType {
    get {return _storage._type1}
    set {_uniqueStorage()._type1 = newValue}
  }

  public var type2: POGOProtos_Enums_PokemonType {
    get {return _storage._type2}
    set {_uniqueStorage()._type2 = newValue}
  }

  public var camera: POGOProtos_Settings_Master_Pokemon_CameraAttributes {
    get {return _storage._camera ?? POGOProtos_Settings_Master_Pokemon_CameraAttributes()}
    set {_uniqueStorage()._camera = newValue}
  }
  /// Returns true if `camera` has been explicitly set.
  public var hasCamera: Bool {return _storage._camera != nil}
  /// Clears the value of `camera`. Subsequent reads from it will return its default value.
  public mutating func clearCamera() {_uniqueStorage()._camera = nil}

  public var encounter: POGOProtos_Settings_Master_Pokemon_EncounterAttributes {
    get {return _storage._encounter ?? POGOProtos_Settings_Master_Pokemon_EncounterAttributes()}
    set {_uniqueStorage()._encounter = newValue}
  }
  /// Returns true if `encounter` has been explicitly set.
  public var hasEncounter: Bool {return _storage._encounter != nil}
  /// Clears the value of `encounter`. Subsequent reads from it will return its default value.
  public mutating func clearEncounter() {_uniqueStorage()._encounter = nil}

  public var stats: POGOProtos_Settings_Master_Pokemon_StatsAttributes {
    get {return _storage._stats ?? POGOProtos_Settings_Master_Pokemon_StatsAttributes()}
    set {_uniqueStorage()._stats = newValue}
  }
  /// Returns true if `stats` has been explicitly set.
  public var hasStats: Bool {return _storage._stats != nil}
  /// Clears the value of `stats`. Subsequent reads from it will return its default value.
  public mutating func clearStats() {_uniqueStorage()._stats = nil}

  public var quickMoves: [POGOProtos_Enums_PokemonMove] {
    get {return _storage._quickMoves}
    set {_uniqueStorage()._quickMoves = newValue}
  }

  public var cinematicMoves: [POGOProtos_Enums_PokemonMove] {
    get {return _storage._cinematicMoves}
    set {_uniqueStorage()._cinematicMoves = newValue}
  }

  public var animTime: [Float] {
    get {return _storage._animTime}
    set {_uniqueStorage()._animTime = newValue}
  }

  public var evolution: [POGOProtos_Enums_PokemonId] {
    get {return _storage._evolution}
    set {_uniqueStorage()._evolution = newValue}
  }

  public var evolutionPips: Int32 {
    get {return _storage._evolutionPips}
    set {_uniqueStorage()._evolutionPips = newValue}
  }

  public var pokemonClass: POGOProtos_Enums_PokemonClass {
    get {return _storage._pokemonClass}
    set {_uniqueStorage()._pokemonClass = newValue}
  }

  public var pokedexHeightM: Float {
    get {return _storage._pokedexHeightM}
    set {_uniqueStorage()._pokedexHeightM = newValue}
  }

  public var pokedexWeightKg: Float {
    get {return _storage._pokedexWeightKg}
    set {_uniqueStorage()._pokedexWeightKg = newValue}
  }

  public var parentID: POGOProtos_Enums_PokemonId {
    get {return _storage._parentID}
    set {_uniqueStorage()._parentID = newValue}
  }

  public var heightStdDev: Float {
    get {return _storage._heightStdDev}
    set {_uniqueStorage()._heightStdDev = newValue}
  }

  public var weightStdDev: Float {
    get {return _storage._weightStdDev}
    set {_uniqueStorage()._weightStdDev = newValue}
  }

  public var kmDistanceToHatch: Float {
    get {return _storage._kmDistanceToHatch}
    set {_uniqueStorage()._kmDistanceToHatch = newValue}
  }

  public var familyID: POGOProtos_Enums_PokemonFamilyId {
    get {return _storage._familyID}
    set {_uniqueStorage()._familyID = newValue}
  }

  public var candyToEvolve: Int32 {
    get {return _storage._candyToEvolve}
    set {_uniqueStorage()._candyToEvolve = newValue}
  }

  public var kmBuddyDistance: Float {
    get {return _storage._kmBuddyDistance}
    set {_uniqueStorage()._kmBuddyDistance = newValue}
  }

  public var buddySize: POGOProtos_Enums_BuddySize {
    get {return _storage._buddySize}
    set {_uniqueStorage()._buddySize = newValue}
  }

  public var modelHeight: Float {
    get {return _storage._modelHeight}
    set {_uniqueStorage()._modelHeight = newValue}
  }

  public var evolutionBranch: [POGOProtos_Settings_Master_Pokemon_EvolutionBranch] {
    get {return _storage._evolutionBranch}
    set {_uniqueStorage()._evolutionBranch = newValue}
  }

  public var modelScaleV2: Float {
    get {return _storage._modelScaleV2}
    set {_uniqueStorage()._modelScaleV2 = newValue}
  }

  public var form: POGOProtos_Enums_Form {
    get {return _storage._form}
    set {_uniqueStorage()._form = newValue}
  }

  public var eventQuickMove: POGOProtos_Enums_PokemonMove {
    get {return _storage._eventQuickMove}
    set {_uniqueStorage()._eventQuickMove = newValue}
  }

  public var eventCinematicMove: POGOProtos_Enums_PokemonMove {
    get {return _storage._eventCinematicMove}
    set {_uniqueStorage()._eventCinematicMove = newValue}
  }

  public var buddyOffsetMale: [Float] {
    get {return _storage._buddyOffsetMale}
    set {_uniqueStorage()._buddyOffsetMale = newValue}
  }

  public var buddyOffsetFemale: [Float] {
    get {return _storage._buddyOffsetFemale}
    set {_uniqueStorage()._buddyOffsetFemale = newValue}
  }

  public var buddyScale: Float {
    get {return _storage._buddyScale}
    set {_uniqueStorage()._buddyScale = newValue}
  }

  public var buddyPortraitOffset: [Float] {
    get {return _storage._buddyPortraitOffset}
    set {_uniqueStorage()._buddyPortraitOffset = newValue}
  }

  public var parentForm: POGOProtos_Enums_Form {
    get {return _storage._parentForm}
    set {_uniqueStorage()._parentForm = newValue}
  }

  public var thirdMove: POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes {
    get {return _storage._thirdMove ?? POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes()}
    set {_uniqueStorage()._thirdMove = newValue}
  }
  /// Returns true if `thirdMove` has been explicitly set.
  public var hasThirdMove: Bool {return _storage._thirdMove != nil}
  /// Clears the value of `thirdMove`. Subsequent reads from it will return its default value.
  public mutating func clearThirdMove() {_uniqueStorage()._thirdMove = nil}

  public var isTransferable: Bool {
    get {return _storage._isTransferable}
    set {_uniqueStorage()._isTransferable = newValue}
  }

  public var isDeployable: Bool {
    get {return _storage._isDeployable}
    set {_uniqueStorage()._isDeployable = newValue}
  }

  public var combatShoulderCameraAngle: [Float] {
    get {return _storage._combatShoulderCameraAngle}
    set {_uniqueStorage()._combatShoulderCameraAngle = newValue}
  }

  public var isTradable: Bool {
    get {return _storage._isTradable}
    set {_uniqueStorage()._isTradable = newValue}
  }

  public var combatDefaultCameraAngle: [Float] {
    get {return _storage._combatDefaultCameraAngle}
    set {_uniqueStorage()._combatDefaultCameraAngle = newValue}
  }

  public var combatOpponentFocusCameraAngle: [Float] {
    get {return _storage._combatOpponentFocusCameraAngle}
    set {_uniqueStorage()._combatOpponentFocusCameraAngle = newValue}
  }

  public var combatPlayerFocusCameraAngle: [Float] {
    get {return _storage._combatPlayerFocusCameraAngle}
    set {_uniqueStorage()._combatPlayerFocusCameraAngle = newValue}
  }

  public var combatPlayerPokemonPositionOffset: [Float] {
    get {return _storage._combatPlayerPokemonPositionOffset}
    set {_uniqueStorage()._combatPlayerPokemonPositionOffset = newValue}
  }

  public var photobombAnimationOverrides: [POGOProtos_Settings_Master_Pokemon_AnimationOverride] {
    get {return _storage._photobombAnimationOverrides}
    set {_uniqueStorage()._photobombAnimationOverrides = newValue}
  }

  public var shadow: POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes {
    get {return _storage._shadow ?? POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes()}
    set {_uniqueStorage()._shadow = newValue}
  }
  /// Returns true if `shadow` has been explicitly set.
  public var hasShadow: Bool {return _storage._shadow != nil}
  /// Clears the value of `shadow`. Subsequent reads from it will return its default value.
  public mutating func clearShadow() {_uniqueStorage()._shadow = nil}

  public var buddyGroupNumber: Int32 {
    get {return _storage._buddyGroupNumber}
    set {_uniqueStorage()._buddyGroupNumber = newValue}
  }

  public var additionalCpBoostLevel: Int32 {
    get {return _storage._additionalCpBoostLevel}
    set {_uniqueStorage()._additionalCpBoostLevel = newValue}
  }

  public var eliteQuickMove: [POGOProtos_Enums_PokemonMove] {
    get {return _storage._eliteQuickMove}
    set {_uniqueStorage()._eliteQuickMove = newValue}
  }

  public var eliteCinematicMove: [POGOProtos_Enums_PokemonMove] {
    get {return _storage._eliteCinematicMove}
    set {_uniqueStorage()._eliteCinematicMove = newValue}
  }

  public var tempEvoOverrides: [POGOProtos_Settings_Master_PokemonSettings.TempEvoOverride] {
    get {return _storage._tempEvoOverrides}
    set {_uniqueStorage()._tempEvoOverrides = newValue}
  }

  public var buddyWalkedMegaEnergyAward: Int32 {
    get {return _storage._buddyWalkedMegaEnergyAward}
    set {_uniqueStorage()._buddyWalkedMegaEnergyAward = newValue}
  }

  public var disableTransferToPokemonHome: Bool {
    get {return _storage._disableTransferToPokemonHome}
    set {_uniqueStorage()._disableTransferToPokemonHome = newValue}
  }

  public var raidBossDistanceOffset: Float {
    get {return _storage._raidBossDistanceOffset}
    set {_uniqueStorage()._raidBossDistanceOffset = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public struct TempEvoOverride {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var tempEvoID: POGOProtos_Enums_TemporaryEvolutionId {
      get {return _storage._tempEvoID}
      set {_uniqueStorage()._tempEvoID = newValue}
    }

    public var stats: POGOProtos_Settings_Master_Pokemon_StatsAttributes {
      get {return _storage._stats ?? POGOProtos_Settings_Master_Pokemon_StatsAttributes()}
      set {_uniqueStorage()._stats = newValue}
    }
    /// Returns true if `stats` has been explicitly set.
    public var hasStats: Bool {return _storage._stats != nil}
    /// Clears the value of `stats`. Subsequent reads from it will return its default value.
    public mutating func clearStats() {_uniqueStorage()._stats = nil}

    public var averageHeightM: Float {
      get {return _storage._averageHeightM}
      set {_uniqueStorage()._averageHeightM = newValue}
    }

    public var averageWeightKg: Float {
      get {return _storage._averageWeightKg}
      set {_uniqueStorage()._averageWeightKg = newValue}
    }

    public var typeOverride1: POGOProtos_Enums_PokemonType {
      get {return _storage._typeOverride1}
      set {_uniqueStorage()._typeOverride1 = newValue}
    }

    public var typeOverride2: POGOProtos_Enums_PokemonType {
      get {return _storage._typeOverride2}
      set {_uniqueStorage()._typeOverride2 = newValue}
    }

    public var cpMultiplierOverride: Float {
      get {return _storage._cpMultiplierOverride}
      set {_uniqueStorage()._cpMultiplierOverride = newValue}
    }

    public var camera: POGOProtos_Settings_Master_Pokemon_CameraAttributes {
      get {return _storage._camera ?? POGOProtos_Settings_Master_Pokemon_CameraAttributes()}
      set {_uniqueStorage()._camera = newValue}
    }
    /// Returns true if `camera` has been explicitly set.
    public var hasCamera: Bool {return _storage._camera != nil}
    /// Clears the value of `camera`. Subsequent reads from it will return its default value.
    public mutating func clearCamera() {_uniqueStorage()._camera = nil}

    public var encounter: POGOProtos_Settings_Master_Pokemon_EncounterAttributes {
      get {return _storage._encounter ?? POGOProtos_Settings_Master_Pokemon_EncounterAttributes()}
      set {_uniqueStorage()._encounter = newValue}
    }
    /// Returns true if `encounter` has been explicitly set.
    public var hasEncounter: Bool {return _storage._encounter != nil}
    /// Clears the value of `encounter`. Subsequent reads from it will return its default value.
    public mutating func clearEncounter() {_uniqueStorage()._encounter = nil}

    public var modelScaleV2: Float {
      get {return _storage._modelScaleV2}
      set {_uniqueStorage()._modelScaleV2 = newValue}
    }

    public var modelHeight: Float {
      get {return _storage._modelHeight}
      set {_uniqueStorage()._modelHeight = newValue}
    }

    public var buddyOffsetMale: [Float] {
      get {return _storage._buddyOffsetMale}
      set {_uniqueStorage()._buddyOffsetMale = newValue}
    }

    public var buddyOffsetFemale: [Float] {
      get {return _storage._buddyOffsetFemale}
      set {_uniqueStorage()._buddyOffsetFemale = newValue}
    }

    public var buddyPortraitOffset: [Float] {
      get {return _storage._buddyPortraitOffset}
      set {_uniqueStorage()._buddyPortraitOffset = newValue}
    }

    public var raidBossDistanceOffset: Float {
      get {return _storage._raidBossDistanceOffset}
      set {_uniqueStorage()._raidBossDistanceOffset = newValue}
    }

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    fileprivate var _storage = _StorageClass.defaultInstance
  }

  public struct PokemonThirdMoveAttributes {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var stardustToUnlock: Int32 = 0

    public var candyToUnlock: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public struct ShadowAttributes {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    public var purificationStardustNeeded: UInt32 = 0

    public var purificationCandyNeeded: UInt32 = 0

    public var purifiedChargeMove: POGOProtos_Enums_PokemonMove = .moveUnset

    public var shadowChargeMove: POGOProtos_Enums_PokemonMove = .moveUnset

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_PokemonSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PokemonSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "unique_id"),
    3: .standard(proto: "model_scale"),
    4: .same(proto: "type1"),
    5: .same(proto: "type2"),
    6: .same(proto: "camera"),
    7: .same(proto: "encounter"),
    8: .same(proto: "stats"),
    9: .standard(proto: "quick_moves"),
    10: .standard(proto: "cinematic_moves"),
    11: .standard(proto: "anim_time"),
    12: .same(proto: "evolution"),
    13: .standard(proto: "evolution_pips"),
    14: .standard(proto: "pokemon_class"),
    15: .standard(proto: "pokedex_height_m"),
    16: .standard(proto: "pokedex_weight_kg"),
    17: .standard(proto: "parent_id"),
    18: .standard(proto: "height_std_dev"),
    19: .standard(proto: "weight_std_dev"),
    20: .standard(proto: "km_distance_to_hatch"),
    21: .standard(proto: "family_id"),
    22: .standard(proto: "candy_to_evolve"),
    23: .standard(proto: "km_buddy_distance"),
    24: .standard(proto: "buddy_size"),
    25: .standard(proto: "model_height"),
    26: .standard(proto: "evolution_branch"),
    27: .standard(proto: "model_scale_v2"),
    28: .same(proto: "form"),
    29: .standard(proto: "event_quick_move"),
    30: .standard(proto: "event_cinematic_move"),
    31: .standard(proto: "buddy_offset_male"),
    32: .standard(proto: "buddy_offset_female"),
    33: .standard(proto: "buddy_scale"),
    34: .standard(proto: "buddy_portrait_offset"),
    35: .standard(proto: "parent_form"),
    36: .standard(proto: "third_move"),
    37: .standard(proto: "is_transferable"),
    38: .standard(proto: "is_deployable"),
    39: .standard(proto: "combat_shoulder_camera_angle"),
    40: .standard(proto: "is_tradable"),
    41: .standard(proto: "combat_default_camera_angle"),
    42: .standard(proto: "combat_opponent_focus_camera_angle"),
    43: .standard(proto: "combat_player_focus_camera_angle"),
    44: .standard(proto: "combat_player_pokemon_position_offset"),
    45: .standard(proto: "photobomb_animation_overrides"),
    46: .same(proto: "shadow"),
    47: .standard(proto: "buddy_group_number"),
    48: .standard(proto: "additional_cp_boost_level"),
    49: .standard(proto: "elite_quick_move"),
    50: .standard(proto: "elite_cinematic_move"),
    51: .standard(proto: "temp_evo_overrides"),
    52: .standard(proto: "buddy_walked_mega_energy_award"),
    61: .standard(proto: "disable_transfer_to_pokemon_home"),
    62: .standard(proto: "raid_boss_distance_offset"),
  ]

  fileprivate class _StorageClass {
    var _uniqueID: POGOProtos_Enums_PokemonId = .missingno
    var _modelScale: Float = 0
    var _type1: POGOProtos_Enums_PokemonType = .none
    var _type2: POGOProtos_Enums_PokemonType = .none
    var _camera: POGOProtos_Settings_Master_Pokemon_CameraAttributes? = nil
    var _encounter: POGOProtos_Settings_Master_Pokemon_EncounterAttributes? = nil
    var _stats: POGOProtos_Settings_Master_Pokemon_StatsAttributes? = nil
    var _quickMoves: [POGOProtos_Enums_PokemonMove] = []
    var _cinematicMoves: [POGOProtos_Enums_PokemonMove] = []
    var _animTime: [Float] = []
    var _evolution: [POGOProtos_Enums_PokemonId] = []
    var _evolutionPips: Int32 = 0
    var _pokemonClass: POGOProtos_Enums_PokemonClass = .normal
    var _pokedexHeightM: Float = 0
    var _pokedexWeightKg: Float = 0
    var _parentID: POGOProtos_Enums_PokemonId = .missingno
    var _heightStdDev: Float = 0
    var _weightStdDev: Float = 0
    var _kmDistanceToHatch: Float = 0
    var _familyID: POGOProtos_Enums_PokemonFamilyId = .familyUnset
    var _candyToEvolve: Int32 = 0
    var _kmBuddyDistance: Float = 0
    var _buddySize: POGOProtos_Enums_BuddySize = .buddyMedium
    var _modelHeight: Float = 0
    var _evolutionBranch: [POGOProtos_Settings_Master_Pokemon_EvolutionBranch] = []
    var _modelScaleV2: Float = 0
    var _form: POGOProtos_Enums_Form = .unset
    var _eventQuickMove: POGOProtos_Enums_PokemonMove = .moveUnset
    var _eventCinematicMove: POGOProtos_Enums_PokemonMove = .moveUnset
    var _buddyOffsetMale: [Float] = []
    var _buddyOffsetFemale: [Float] = []
    var _buddyScale: Float = 0
    var _buddyPortraitOffset: [Float] = []
    var _parentForm: POGOProtos_Enums_Form = .unset
    var _thirdMove: POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes? = nil
    var _isTransferable: Bool = false
    var _isDeployable: Bool = false
    var _combatShoulderCameraAngle: [Float] = []
    var _isTradable: Bool = false
    var _combatDefaultCameraAngle: [Float] = []
    var _combatOpponentFocusCameraAngle: [Float] = []
    var _combatPlayerFocusCameraAngle: [Float] = []
    var _combatPlayerPokemonPositionOffset: [Float] = []
    var _photobombAnimationOverrides: [POGOProtos_Settings_Master_Pokemon_AnimationOverride] = []
    var _shadow: POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes? = nil
    var _buddyGroupNumber: Int32 = 0
    var _additionalCpBoostLevel: Int32 = 0
    var _eliteQuickMove: [POGOProtos_Enums_PokemonMove] = []
    var _eliteCinematicMove: [POGOProtos_Enums_PokemonMove] = []
    var _tempEvoOverrides: [POGOProtos_Settings_Master_PokemonSettings.TempEvoOverride] = []
    var _buddyWalkedMegaEnergyAward: Int32 = 0
    var _disableTransferToPokemonHome: Bool = false
    var _raidBossDistanceOffset: Float = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _uniqueID = source._uniqueID
      _modelScale = source._modelScale
      _type1 = source._type1
      _type2 = source._type2
      _camera = source._camera
      _encounter = source._encounter
      _stats = source._stats
      _quickMoves = source._quickMoves
      _cinematicMoves = source._cinematicMoves
      _animTime = source._animTime
      _evolution = source._evolution
      _evolutionPips = source._evolutionPips
      _pokemonClass = source._pokemonClass
      _pokedexHeightM = source._pokedexHeightM
      _pokedexWeightKg = source._pokedexWeightKg
      _parentID = source._parentID
      _heightStdDev = source._heightStdDev
      _weightStdDev = source._weightStdDev
      _kmDistanceToHatch = source._kmDistanceToHatch
      _familyID = source._familyID
      _candyToEvolve = source._candyToEvolve
      _kmBuddyDistance = source._kmBuddyDistance
      _buddySize = source._buddySize
      _modelHeight = source._modelHeight
      _evolutionBranch = source._evolutionBranch
      _modelScaleV2 = source._modelScaleV2
      _form = source._form
      _eventQuickMove = source._eventQuickMove
      _eventCinematicMove = source._eventCinematicMove
      _buddyOffsetMale = source._buddyOffsetMale
      _buddyOffsetFemale = source._buddyOffsetFemale
      _buddyScale = source._buddyScale
      _buddyPortraitOffset = source._buddyPortraitOffset
      _parentForm = source._parentForm
      _thirdMove = source._thirdMove
      _isTransferable = source._isTransferable
      _isDeployable = source._isDeployable
      _combatShoulderCameraAngle = source._combatShoulderCameraAngle
      _isTradable = source._isTradable
      _combatDefaultCameraAngle = source._combatDefaultCameraAngle
      _combatOpponentFocusCameraAngle = source._combatOpponentFocusCameraAngle
      _combatPlayerFocusCameraAngle = source._combatPlayerFocusCameraAngle
      _combatPlayerPokemonPositionOffset = source._combatPlayerPokemonPositionOffset
      _photobombAnimationOverrides = source._photobombAnimationOverrides
      _shadow = source._shadow
      _buddyGroupNumber = source._buddyGroupNumber
      _additionalCpBoostLevel = source._additionalCpBoostLevel
      _eliteQuickMove = source._eliteQuickMove
      _eliteCinematicMove = source._eliteCinematicMove
      _tempEvoOverrides = source._tempEvoOverrides
      _buddyWalkedMegaEnergyAward = source._buddyWalkedMegaEnergyAward
      _disableTransferToPokemonHome = source._disableTransferToPokemonHome
      _raidBossDistanceOffset = source._raidBossDistanceOffset
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularEnumField(value: &_storage._uniqueID) }()
        case 3: try { try decoder.decodeSingularFloatField(value: &_storage._modelScale) }()
        case 4: try { try decoder.decodeSingularEnumField(value: &_storage._type1) }()
        case 5: try { try decoder.decodeSingularEnumField(value: &_storage._type2) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._camera) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._encounter) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._stats) }()
        case 9: try { try decoder.decodeRepeatedEnumField(value: &_storage._quickMoves) }()
        case 10: try { try decoder.decodeRepeatedEnumField(value: &_storage._cinematicMoves) }()
        case 11: try { try decoder.decodeRepeatedFloatField(value: &_storage._animTime) }()
        case 12: try { try decoder.decodeRepeatedEnumField(value: &_storage._evolution) }()
        case 13: try { try decoder.decodeSingularInt32Field(value: &_storage._evolutionPips) }()
        case 14: try { try decoder.decodeSingularEnumField(value: &_storage._pokemonClass) }()
        case 15: try { try decoder.decodeSingularFloatField(value: &_storage._pokedexHeightM) }()
        case 16: try { try decoder.decodeSingularFloatField(value: &_storage._pokedexWeightKg) }()
        case 17: try { try decoder.decodeSingularEnumField(value: &_storage._parentID) }()
        case 18: try { try decoder.decodeSingularFloatField(value: &_storage._heightStdDev) }()
        case 19: try { try decoder.decodeSingularFloatField(value: &_storage._weightStdDev) }()
        case 20: try { try decoder.decodeSingularFloatField(value: &_storage._kmDistanceToHatch) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._familyID) }()
        case 22: try { try decoder.decodeSingularInt32Field(value: &_storage._candyToEvolve) }()
        case 23: try { try decoder.decodeSingularFloatField(value: &_storage._kmBuddyDistance) }()
        case 24: try { try decoder.decodeSingularEnumField(value: &_storage._buddySize) }()
        case 25: try { try decoder.decodeSingularFloatField(value: &_storage._modelHeight) }()
        case 26: try { try decoder.decodeRepeatedMessageField(value: &_storage._evolutionBranch) }()
        case 27: try { try decoder.decodeSingularFloatField(value: &_storage._modelScaleV2) }()
        case 28: try { try decoder.decodeSingularEnumField(value: &_storage._form) }()
        case 29: try { try decoder.decodeSingularEnumField(value: &_storage._eventQuickMove) }()
        case 30: try { try decoder.decodeSingularEnumField(value: &_storage._eventCinematicMove) }()
        case 31: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyOffsetMale) }()
        case 32: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyOffsetFemale) }()
        case 33: try { try decoder.decodeSingularFloatField(value: &_storage._buddyScale) }()
        case 34: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyPortraitOffset) }()
        case 35: try { try decoder.decodeSingularEnumField(value: &_storage._parentForm) }()
        case 36: try { try decoder.decodeSingularMessageField(value: &_storage._thirdMove) }()
        case 37: try { try decoder.decodeSingularBoolField(value: &_storage._isTransferable) }()
        case 38: try { try decoder.decodeSingularBoolField(value: &_storage._isDeployable) }()
        case 39: try { try decoder.decodeRepeatedFloatField(value: &_storage._combatShoulderCameraAngle) }()
        case 40: try { try decoder.decodeSingularBoolField(value: &_storage._isTradable) }()
        case 41: try { try decoder.decodeRepeatedFloatField(value: &_storage._combatDefaultCameraAngle) }()
        case 42: try { try decoder.decodeRepeatedFloatField(value: &_storage._combatOpponentFocusCameraAngle) }()
        case 43: try { try decoder.decodeRepeatedFloatField(value: &_storage._combatPlayerFocusCameraAngle) }()
        case 44: try { try decoder.decodeRepeatedFloatField(value: &_storage._combatPlayerPokemonPositionOffset) }()
        case 45: try { try decoder.decodeRepeatedMessageField(value: &_storage._photobombAnimationOverrides) }()
        case 46: try { try decoder.decodeSingularMessageField(value: &_storage._shadow) }()
        case 47: try { try decoder.decodeSingularInt32Field(value: &_storage._buddyGroupNumber) }()
        case 48: try { try decoder.decodeSingularInt32Field(value: &_storage._additionalCpBoostLevel) }()
        case 49: try { try decoder.decodeRepeatedEnumField(value: &_storage._eliteQuickMove) }()
        case 50: try { try decoder.decodeRepeatedEnumField(value: &_storage._eliteCinematicMove) }()
        case 51: try { try decoder.decodeRepeatedMessageField(value: &_storage._tempEvoOverrides) }()
        case 52: try { try decoder.decodeSingularInt32Field(value: &_storage._buddyWalkedMegaEnergyAward) }()
        case 61: try { try decoder.decodeSingularBoolField(value: &_storage._disableTransferToPokemonHome) }()
        case 62: try { try decoder.decodeSingularFloatField(value: &_storage._raidBossDistanceOffset) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._uniqueID != .missingno {
        try visitor.visitSingularEnumField(value: _storage._uniqueID, fieldNumber: 1)
      }
      if _storage._modelScale != 0 {
        try visitor.visitSingularFloatField(value: _storage._modelScale, fieldNumber: 3)
      }
      if _storage._type1 != .none {
        try visitor.visitSingularEnumField(value: _storage._type1, fieldNumber: 4)
      }
      if _storage._type2 != .none {
        try visitor.visitSingularEnumField(value: _storage._type2, fieldNumber: 5)
      }
      if let v = _storage._camera {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._encounter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if let v = _storage._stats {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if !_storage._quickMoves.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._quickMoves, fieldNumber: 9)
      }
      if !_storage._cinematicMoves.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._cinematicMoves, fieldNumber: 10)
      }
      if !_storage._animTime.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._animTime, fieldNumber: 11)
      }
      if !_storage._evolution.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._evolution, fieldNumber: 12)
      }
      if _storage._evolutionPips != 0 {
        try visitor.visitSingularInt32Field(value: _storage._evolutionPips, fieldNumber: 13)
      }
      if _storage._pokemonClass != .normal {
        try visitor.visitSingularEnumField(value: _storage._pokemonClass, fieldNumber: 14)
      }
      if _storage._pokedexHeightM != 0 {
        try visitor.visitSingularFloatField(value: _storage._pokedexHeightM, fieldNumber: 15)
      }
      if _storage._pokedexWeightKg != 0 {
        try visitor.visitSingularFloatField(value: _storage._pokedexWeightKg, fieldNumber: 16)
      }
      if _storage._parentID != .missingno {
        try visitor.visitSingularEnumField(value: _storage._parentID, fieldNumber: 17)
      }
      if _storage._heightStdDev != 0 {
        try visitor.visitSingularFloatField(value: _storage._heightStdDev, fieldNumber: 18)
      }
      if _storage._weightStdDev != 0 {
        try visitor.visitSingularFloatField(value: _storage._weightStdDev, fieldNumber: 19)
      }
      if _storage._kmDistanceToHatch != 0 {
        try visitor.visitSingularFloatField(value: _storage._kmDistanceToHatch, fieldNumber: 20)
      }
      if _storage._familyID != .familyUnset {
        try visitor.visitSingularEnumField(value: _storage._familyID, fieldNumber: 21)
      }
      if _storage._candyToEvolve != 0 {
        try visitor.visitSingularInt32Field(value: _storage._candyToEvolve, fieldNumber: 22)
      }
      if _storage._kmBuddyDistance != 0 {
        try visitor.visitSingularFloatField(value: _storage._kmBuddyDistance, fieldNumber: 23)
      }
      if _storage._buddySize != .buddyMedium {
        try visitor.visitSingularEnumField(value: _storage._buddySize, fieldNumber: 24)
      }
      if _storage._modelHeight != 0 {
        try visitor.visitSingularFloatField(value: _storage._modelHeight, fieldNumber: 25)
      }
      if !_storage._evolutionBranch.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._evolutionBranch, fieldNumber: 26)
      }
      if _storage._modelScaleV2 != 0 {
        try visitor.visitSingularFloatField(value: _storage._modelScaleV2, fieldNumber: 27)
      }
      if _storage._form != .unset {
        try visitor.visitSingularEnumField(value: _storage._form, fieldNumber: 28)
      }
      if _storage._eventQuickMove != .moveUnset {
        try visitor.visitSingularEnumField(value: _storage._eventQuickMove, fieldNumber: 29)
      }
      if _storage._eventCinematicMove != .moveUnset {
        try visitor.visitSingularEnumField(value: _storage._eventCinematicMove, fieldNumber: 30)
      }
      if !_storage._buddyOffsetMale.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyOffsetMale, fieldNumber: 31)
      }
      if !_storage._buddyOffsetFemale.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyOffsetFemale, fieldNumber: 32)
      }
      if _storage._buddyScale != 0 {
        try visitor.visitSingularFloatField(value: _storage._buddyScale, fieldNumber: 33)
      }
      if !_storage._buddyPortraitOffset.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyPortraitOffset, fieldNumber: 34)
      }
      if _storage._parentForm != .unset {
        try visitor.visitSingularEnumField(value: _storage._parentForm, fieldNumber: 35)
      }
      if let v = _storage._thirdMove {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if _storage._isTransferable != false {
        try visitor.visitSingularBoolField(value: _storage._isTransferable, fieldNumber: 37)
      }
      if _storage._isDeployable != false {
        try visitor.visitSingularBoolField(value: _storage._isDeployable, fieldNumber: 38)
      }
      if !_storage._combatShoulderCameraAngle.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._combatShoulderCameraAngle, fieldNumber: 39)
      }
      if _storage._isTradable != false {
        try visitor.visitSingularBoolField(value: _storage._isTradable, fieldNumber: 40)
      }
      if !_storage._combatDefaultCameraAngle.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._combatDefaultCameraAngle, fieldNumber: 41)
      }
      if !_storage._combatOpponentFocusCameraAngle.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._combatOpponentFocusCameraAngle, fieldNumber: 42)
      }
      if !_storage._combatPlayerFocusCameraAngle.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._combatPlayerFocusCameraAngle, fieldNumber: 43)
      }
      if !_storage._combatPlayerPokemonPositionOffset.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._combatPlayerPokemonPositionOffset, fieldNumber: 44)
      }
      if !_storage._photobombAnimationOverrides.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._photobombAnimationOverrides, fieldNumber: 45)
      }
      if let v = _storage._shadow {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 46)
      }
      if _storage._buddyGroupNumber != 0 {
        try visitor.visitSingularInt32Field(value: _storage._buddyGroupNumber, fieldNumber: 47)
      }
      if _storage._additionalCpBoostLevel != 0 {
        try visitor.visitSingularInt32Field(value: _storage._additionalCpBoostLevel, fieldNumber: 48)
      }
      if !_storage._eliteQuickMove.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._eliteQuickMove, fieldNumber: 49)
      }
      if !_storage._eliteCinematicMove.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._eliteCinematicMove, fieldNumber: 50)
      }
      if !_storage._tempEvoOverrides.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._tempEvoOverrides, fieldNumber: 51)
      }
      if _storage._buddyWalkedMegaEnergyAward != 0 {
        try visitor.visitSingularInt32Field(value: _storage._buddyWalkedMegaEnergyAward, fieldNumber: 52)
      }
      if _storage._disableTransferToPokemonHome != false {
        try visitor.visitSingularBoolField(value: _storage._disableTransferToPokemonHome, fieldNumber: 61)
      }
      if _storage._raidBossDistanceOffset != 0 {
        try visitor.visitSingularFloatField(value: _storage._raidBossDistanceOffset, fieldNumber: 62)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_PokemonSettings, rhs: POGOProtos_Settings_Master_PokemonSettings) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._uniqueID != rhs_storage._uniqueID {return false}
        if _storage._modelScale != rhs_storage._modelScale {return false}
        if _storage._type1 != rhs_storage._type1 {return false}
        if _storage._type2 != rhs_storage._type2 {return false}
        if _storage._camera != rhs_storage._camera {return false}
        if _storage._encounter != rhs_storage._encounter {return false}
        if _storage._stats != rhs_storage._stats {return false}
        if _storage._quickMoves != rhs_storage._quickMoves {return false}
        if _storage._cinematicMoves != rhs_storage._cinematicMoves {return false}
        if _storage._animTime != rhs_storage._animTime {return false}
        if _storage._evolution != rhs_storage._evolution {return false}
        if _storage._evolutionPips != rhs_storage._evolutionPips {return false}
        if _storage._pokemonClass != rhs_storage._pokemonClass {return false}
        if _storage._pokedexHeightM != rhs_storage._pokedexHeightM {return false}
        if _storage._pokedexWeightKg != rhs_storage._pokedexWeightKg {return false}
        if _storage._parentID != rhs_storage._parentID {return false}
        if _storage._heightStdDev != rhs_storage._heightStdDev {return false}
        if _storage._weightStdDev != rhs_storage._weightStdDev {return false}
        if _storage._kmDistanceToHatch != rhs_storage._kmDistanceToHatch {return false}
        if _storage._familyID != rhs_storage._familyID {return false}
        if _storage._candyToEvolve != rhs_storage._candyToEvolve {return false}
        if _storage._kmBuddyDistance != rhs_storage._kmBuddyDistance {return false}
        if _storage._buddySize != rhs_storage._buddySize {return false}
        if _storage._modelHeight != rhs_storage._modelHeight {return false}
        if _storage._evolutionBranch != rhs_storage._evolutionBranch {return false}
        if _storage._modelScaleV2 != rhs_storage._modelScaleV2 {return false}
        if _storage._form != rhs_storage._form {return false}
        if _storage._eventQuickMove != rhs_storage._eventQuickMove {return false}
        if _storage._eventCinematicMove != rhs_storage._eventCinematicMove {return false}
        if _storage._buddyOffsetMale != rhs_storage._buddyOffsetMale {return false}
        if _storage._buddyOffsetFemale != rhs_storage._buddyOffsetFemale {return false}
        if _storage._buddyScale != rhs_storage._buddyScale {return false}
        if _storage._buddyPortraitOffset != rhs_storage._buddyPortraitOffset {return false}
        if _storage._parentForm != rhs_storage._parentForm {return false}
        if _storage._thirdMove != rhs_storage._thirdMove {return false}
        if _storage._isTransferable != rhs_storage._isTransferable {return false}
        if _storage._isDeployable != rhs_storage._isDeployable {return false}
        if _storage._combatShoulderCameraAngle != rhs_storage._combatShoulderCameraAngle {return false}
        if _storage._isTradable != rhs_storage._isTradable {return false}
        if _storage._combatDefaultCameraAngle != rhs_storage._combatDefaultCameraAngle {return false}
        if _storage._combatOpponentFocusCameraAngle != rhs_storage._combatOpponentFocusCameraAngle {return false}
        if _storage._combatPlayerFocusCameraAngle != rhs_storage._combatPlayerFocusCameraAngle {return false}
        if _storage._combatPlayerPokemonPositionOffset != rhs_storage._combatPlayerPokemonPositionOffset {return false}
        if _storage._photobombAnimationOverrides != rhs_storage._photobombAnimationOverrides {return false}
        if _storage._shadow != rhs_storage._shadow {return false}
        if _storage._buddyGroupNumber != rhs_storage._buddyGroupNumber {return false}
        if _storage._additionalCpBoostLevel != rhs_storage._additionalCpBoostLevel {return false}
        if _storage._eliteQuickMove != rhs_storage._eliteQuickMove {return false}
        if _storage._eliteCinematicMove != rhs_storage._eliteCinematicMove {return false}
        if _storage._tempEvoOverrides != rhs_storage._tempEvoOverrides {return false}
        if _storage._buddyWalkedMegaEnergyAward != rhs_storage._buddyWalkedMegaEnergyAward {return false}
        if _storage._disableTransferToPokemonHome != rhs_storage._disableTransferToPokemonHome {return false}
        if _storage._raidBossDistanceOffset != rhs_storage._raidBossDistanceOffset {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_Master_PokemonSettings.TempEvoOverride: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Settings_Master_PokemonSettings.protoMessageName + ".TempEvoOverride"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "temp_evo_id"),
    2: .same(proto: "stats"),
    3: .standard(proto: "average_height_m"),
    4: .standard(proto: "average_weight_kg"),
    5: .standard(proto: "type_override1"),
    6: .standard(proto: "type_override2"),
    7: .standard(proto: "cp_multiplier_override"),
    8: .same(proto: "camera"),
    9: .same(proto: "encounter"),
    10: .standard(proto: "model_scale_v2"),
    11: .standard(proto: "model_height"),
    12: .standard(proto: "buddy_offset_male"),
    13: .standard(proto: "buddy_offset_female"),
    14: .standard(proto: "buddy_portrait_offset"),
    15: .standard(proto: "raid_boss_distance_offset"),
  ]

  fileprivate class _StorageClass {
    var _tempEvoID: POGOProtos_Enums_TemporaryEvolutionId = .evolutionUnset
    var _stats: POGOProtos_Settings_Master_Pokemon_StatsAttributes? = nil
    var _averageHeightM: Float = 0
    var _averageWeightKg: Float = 0
    var _typeOverride1: POGOProtos_Enums_PokemonType = .none
    var _typeOverride2: POGOProtos_Enums_PokemonType = .none
    var _cpMultiplierOverride: Float = 0
    var _camera: POGOProtos_Settings_Master_Pokemon_CameraAttributes? = nil
    var _encounter: POGOProtos_Settings_Master_Pokemon_EncounterAttributes? = nil
    var _modelScaleV2: Float = 0
    var _modelHeight: Float = 0
    var _buddyOffsetMale: [Float] = []
    var _buddyOffsetFemale: [Float] = []
    var _buddyPortraitOffset: [Float] = []
    var _raidBossDistanceOffset: Float = 0

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tempEvoID = source._tempEvoID
      _stats = source._stats
      _averageHeightM = source._averageHeightM
      _averageWeightKg = source._averageWeightKg
      _typeOverride1 = source._typeOverride1
      _typeOverride2 = source._typeOverride2
      _cpMultiplierOverride = source._cpMultiplierOverride
      _camera = source._camera
      _encounter = source._encounter
      _modelScaleV2 = source._modelScaleV2
      _modelHeight = source._modelHeight
      _buddyOffsetMale = source._buddyOffsetMale
      _buddyOffsetFemale = source._buddyOffsetFemale
      _buddyPortraitOffset = source._buddyPortraitOffset
      _raidBossDistanceOffset = source._raidBossDistanceOffset
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularEnumField(value: &_storage._tempEvoID) }()
        case 2: try { try decoder.decodeSingularMessageField(value: &_storage._stats) }()
        case 3: try { try decoder.decodeSingularFloatField(value: &_storage._averageHeightM) }()
        case 4: try { try decoder.decodeSingularFloatField(value: &_storage._averageWeightKg) }()
        case 5: try { try decoder.decodeSingularEnumField(value: &_storage._typeOverride1) }()
        case 6: try { try decoder.decodeSingularEnumField(value: &_storage._typeOverride2) }()
        case 7: try { try decoder.decodeSingularFloatField(value: &_storage._cpMultiplierOverride) }()
        case 8: try { try decoder.decodeSingularMessageField(value: &_storage._camera) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._encounter) }()
        case 10: try { try decoder.decodeSingularFloatField(value: &_storage._modelScaleV2) }()
        case 11: try { try decoder.decodeSingularFloatField(value: &_storage._modelHeight) }()
        case 12: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyOffsetMale) }()
        case 13: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyOffsetFemale) }()
        case 14: try { try decoder.decodeRepeatedFloatField(value: &_storage._buddyPortraitOffset) }()
        case 15: try { try decoder.decodeSingularFloatField(value: &_storage._raidBossDistanceOffset) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._tempEvoID != .evolutionUnset {
        try visitor.visitSingularEnumField(value: _storage._tempEvoID, fieldNumber: 1)
      }
      if let v = _storage._stats {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if _storage._averageHeightM != 0 {
        try visitor.visitSingularFloatField(value: _storage._averageHeightM, fieldNumber: 3)
      }
      if _storage._averageWeightKg != 0 {
        try visitor.visitSingularFloatField(value: _storage._averageWeightKg, fieldNumber: 4)
      }
      if _storage._typeOverride1 != .none {
        try visitor.visitSingularEnumField(value: _storage._typeOverride1, fieldNumber: 5)
      }
      if _storage._typeOverride2 != .none {
        try visitor.visitSingularEnumField(value: _storage._typeOverride2, fieldNumber: 6)
      }
      if _storage._cpMultiplierOverride != 0 {
        try visitor.visitSingularFloatField(value: _storage._cpMultiplierOverride, fieldNumber: 7)
      }
      if let v = _storage._camera {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._encounter {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if _storage._modelScaleV2 != 0 {
        try visitor.visitSingularFloatField(value: _storage._modelScaleV2, fieldNumber: 10)
      }
      if _storage._modelHeight != 0 {
        try visitor.visitSingularFloatField(value: _storage._modelHeight, fieldNumber: 11)
      }
      if !_storage._buddyOffsetMale.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyOffsetMale, fieldNumber: 12)
      }
      if !_storage._buddyOffsetFemale.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyOffsetFemale, fieldNumber: 13)
      }
      if !_storage._buddyPortraitOffset.isEmpty {
        try visitor.visitPackedFloatField(value: _storage._buddyPortraitOffset, fieldNumber: 14)
      }
      if _storage._raidBossDistanceOffset != 0 {
        try visitor.visitSingularFloatField(value: _storage._raidBossDistanceOffset, fieldNumber: 15)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_PokemonSettings.TempEvoOverride, rhs: POGOProtos_Settings_Master_PokemonSettings.TempEvoOverride) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tempEvoID != rhs_storage._tempEvoID {return false}
        if _storage._stats != rhs_storage._stats {return false}
        if _storage._averageHeightM != rhs_storage._averageHeightM {return false}
        if _storage._averageWeightKg != rhs_storage._averageWeightKg {return false}
        if _storage._typeOverride1 != rhs_storage._typeOverride1 {return false}
        if _storage._typeOverride2 != rhs_storage._typeOverride2 {return false}
        if _storage._cpMultiplierOverride != rhs_storage._cpMultiplierOverride {return false}
        if _storage._camera != rhs_storage._camera {return false}
        if _storage._encounter != rhs_storage._encounter {return false}
        if _storage._modelScaleV2 != rhs_storage._modelScaleV2 {return false}
        if _storage._modelHeight != rhs_storage._modelHeight {return false}
        if _storage._buddyOffsetMale != rhs_storage._buddyOffsetMale {return false}
        if _storage._buddyOffsetFemale != rhs_storage._buddyOffsetFemale {return false}
        if _storage._buddyPortraitOffset != rhs_storage._buddyPortraitOffset {return false}
        if _storage._raidBossDistanceOffset != rhs_storage._raidBossDistanceOffset {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Settings_Master_PokemonSettings.protoMessageName + ".PokemonThirdMoveAttributes"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "stardust_to_unlock"),
    2: .standard(proto: "candy_to_unlock"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self.stardustToUnlock) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.candyToUnlock) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.stardustToUnlock != 0 {
      try visitor.visitSingularInt32Field(value: self.stardustToUnlock, fieldNumber: 1)
    }
    if self.candyToUnlock != 0 {
      try visitor.visitSingularInt32Field(value: self.candyToUnlock, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes, rhs: POGOProtos_Settings_Master_PokemonSettings.PokemonThirdMoveAttributes) -> Bool {
    if lhs.stardustToUnlock != rhs.stardustToUnlock {return false}
    if lhs.candyToUnlock != rhs.candyToUnlock {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = POGOProtos_Settings_Master_PokemonSettings.protoMessageName + ".ShadowAttributes"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "purification_stardust_needed"),
    2: .standard(proto: "purification_candy_needed"),
    3: .standard(proto: "purified_charge_move"),
    4: .standard(proto: "shadow_charge_move"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularUInt32Field(value: &self.purificationStardustNeeded) }()
      case 2: try { try decoder.decodeSingularUInt32Field(value: &self.purificationCandyNeeded) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.purifiedChargeMove) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.shadowChargeMove) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.purificationStardustNeeded != 0 {
      try visitor.visitSingularUInt32Field(value: self.purificationStardustNeeded, fieldNumber: 1)
    }
    if self.purificationCandyNeeded != 0 {
      try visitor.visitSingularUInt32Field(value: self.purificationCandyNeeded, fieldNumber: 2)
    }
    if self.purifiedChargeMove != .moveUnset {
      try visitor.visitSingularEnumField(value: self.purifiedChargeMove, fieldNumber: 3)
    }
    if self.shadowChargeMove != .moveUnset {
      try visitor.visitSingularEnumField(value: self.shadowChargeMove, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes, rhs: POGOProtos_Settings_Master_PokemonSettings.ShadowAttributes) -> Bool {
    if lhs.purificationStardustNeeded != rhs.purificationStardustNeeded {return false}
    if lhs.purificationCandyNeeded != rhs.purificationCandyNeeded {return false}
    if lhs.purifiedChargeMove != rhs.purifiedChargeMove {return false}
    if lhs.shadowChargeMove != rhs.shadowChargeMove {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
