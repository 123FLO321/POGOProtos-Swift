// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/LimitedPurchaseSkuSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_LimitedPurchaseSkuSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var purchaseLimit: Int32 = 0

  public var version: Int32 = 0

  public var chronoUnit: POGOProtos_Settings_Master_LimitedPurchaseSkuSettings.ChronoUnit = .unset

  public var lootTableID: String = String()

  public var resetInterval: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ChronoUnit: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unset // = 0
    case minute // = 1
    case hour // = 2
    case day // = 3
    case week // = 4
    case month // = 5
    case UNRECOGNIZED(Int)

    public init() {
      self = .unset
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unset
      case 1: self = .minute
      case 2: self = .hour
      case 3: self = .day
      case 4: self = .week
      case 5: self = .month
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unset: return 0
      case .minute: return 1
      case .hour: return 2
      case .day: return 3
      case .week: return 4
      case .month: return 5
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Settings_Master_LimitedPurchaseSkuSettings.ChronoUnit: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Settings_Master_LimitedPurchaseSkuSettings.ChronoUnit] = [
    .unset,
    .minute,
    .hour,
    .day,
    .week,
    .month,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_LimitedPurchaseSkuSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".LimitedPurchaseSkuSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "purchase_limit"),
    2: .same(proto: "version"),
    3: .standard(proto: "chrono_unit"),
    4: .standard(proto: "loot_table_id"),
    20: .standard(proto: "reset_interval"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt32Field(value: &self.purchaseLimit) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.version) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.chronoUnit) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.lootTableID) }()
      case 20: try { try decoder.decodeSingularInt32Field(value: &self.resetInterval) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.purchaseLimit != 0 {
      try visitor.visitSingularInt32Field(value: self.purchaseLimit, fieldNumber: 1)
    }
    if self.version != 0 {
      try visitor.visitSingularInt32Field(value: self.version, fieldNumber: 2)
    }
    if self.chronoUnit != .unset {
      try visitor.visitSingularEnumField(value: self.chronoUnit, fieldNumber: 3)
    }
    if !self.lootTableID.isEmpty {
      try visitor.visitSingularStringField(value: self.lootTableID, fieldNumber: 4)
    }
    if self.resetInterval != 0 {
      try visitor.visitSingularInt32Field(value: self.resetInterval, fieldNumber: 20)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_LimitedPurchaseSkuSettings, rhs: POGOProtos_Settings_Master_LimitedPurchaseSkuSettings) -> Bool {
    if lhs.purchaseLimit != rhs.purchaseLimit {return false}
    if lhs.version != rhs.version {return false}
    if lhs.chronoUnit != rhs.chronoUnit {return false}
    if lhs.lootTableID != rhs.lootTableID {return false}
    if lhs.resetInterval != rhs.resetInterval {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_Master_LimitedPurchaseSkuSettings.ChronoUnit: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET"),
    1: .same(proto: "MINUTE"),
    2: .same(proto: "HOUR"),
    3: .same(proto: "DAY"),
    4: .same(proto: "WEEK"),
    5: .same(proto: "MONTH"),
  ]
}
