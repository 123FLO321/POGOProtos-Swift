// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/MegaEvoSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_MegaEvoSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var evolutionLengthMs: Int64 = 0

  public var attackBoostFromMegaDifferentType: Float = 0

  public var attackBoostFromMegaSameType: Float = 0

  public var maxCandyHoardSize: Int32 = 0

  public var enableBuddyWalkingMegaEnergyAward: Bool = false

  public var activeMegaBonusCatchCandy: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_MegaEvoSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".MegaEvoSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "evolution_length_ms"),
    2: .standard(proto: "attack_boost_from_mega_different_type"),
    3: .standard(proto: "attack_boost_from_mega_same_type"),
    4: .standard(proto: "max_candy_hoard_size"),
    5: .standard(proto: "enable_buddy_walking_mega_energy_award"),
    6: .standard(proto: "active_mega_bonus_catch_candy"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.evolutionLengthMs) }()
      case 2: try { try decoder.decodeSingularFloatField(value: &self.attackBoostFromMegaDifferentType) }()
      case 3: try { try decoder.decodeSingularFloatField(value: &self.attackBoostFromMegaSameType) }()
      case 4: try { try decoder.decodeSingularInt32Field(value: &self.maxCandyHoardSize) }()
      case 5: try { try decoder.decodeSingularBoolField(value: &self.enableBuddyWalkingMegaEnergyAward) }()
      case 6: try { try decoder.decodeSingularInt32Field(value: &self.activeMegaBonusCatchCandy) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.evolutionLengthMs != 0 {
      try visitor.visitSingularInt64Field(value: self.evolutionLengthMs, fieldNumber: 1)
    }
    if self.attackBoostFromMegaDifferentType != 0 {
      try visitor.visitSingularFloatField(value: self.attackBoostFromMegaDifferentType, fieldNumber: 2)
    }
    if self.attackBoostFromMegaSameType != 0 {
      try visitor.visitSingularFloatField(value: self.attackBoostFromMegaSameType, fieldNumber: 3)
    }
    if self.maxCandyHoardSize != 0 {
      try visitor.visitSingularInt32Field(value: self.maxCandyHoardSize, fieldNumber: 4)
    }
    if self.enableBuddyWalkingMegaEnergyAward != false {
      try visitor.visitSingularBoolField(value: self.enableBuddyWalkingMegaEnergyAward, fieldNumber: 5)
    }
    if self.activeMegaBonusCatchCandy != 0 {
      try visitor.visitSingularInt32Field(value: self.activeMegaBonusCatchCandy, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_MegaEvoSettings, rhs: POGOProtos_Settings_Master_MegaEvoSettings) -> Bool {
    if lhs.evolutionLengthMs != rhs.evolutionLengthMs {return false}
    if lhs.attackBoostFromMegaDifferentType != rhs.attackBoostFromMegaDifferentType {return false}
    if lhs.attackBoostFromMegaSameType != rhs.attackBoostFromMegaSameType {return false}
    if lhs.maxCandyHoardSize != rhs.maxCandyHoardSize {return false}
    if lhs.enableBuddyWalkingMegaEnergyAward != rhs.enableBuddyWalkingMegaEnergyAward {return false}
    if lhs.activeMegaBonusCatchCandy != rhs.activeMegaBonusCatchCandy {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
