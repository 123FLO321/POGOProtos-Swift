// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/Pokemon/AnimationOverride.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_Pokemon_AnimationOverride {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var animation: POGOProtos_Settings_Master_Pokemon_AnimationOverride.PokemonAnim = .none

  public var blacklist: Bool = false

  public var animMin: Float = 0

  public var animMax: Float = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum PokemonAnim: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case none // = 0
    case idle01 // = 1
    case idle02 // = 2
    case land // = 3
    case attack01 // = 4
    case attack02 // = 5
    case damaged // = 6
    case stunned // = 7
    case loop // = 8
    case UNRECOGNIZED(Int)

    public init() {
      self = .none
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .none
      case 1: self = .idle01
      case 2: self = .idle02
      case 3: self = .land
      case 4: self = .attack01
      case 5: self = .attack02
      case 6: self = .damaged
      case 7: self = .stunned
      case 8: self = .loop
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .none: return 0
      case .idle01: return 1
      case .idle02: return 2
      case .land: return 3
      case .attack01: return 4
      case .attack02: return 5
      case .damaged: return 6
      case .stunned: return 7
      case .loop: return 8
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension POGOProtos_Settings_Master_Pokemon_AnimationOverride.PokemonAnim: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Settings_Master_Pokemon_AnimationOverride.PokemonAnim] = [
    .none,
    .idle01,
    .idle02,
    .land,
    .attack01,
    .attack02,
    .damaged,
    .stunned,
    .loop,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master.Pokemon"

extension POGOProtos_Settings_Master_Pokemon_AnimationOverride: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".AnimationOverride"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "animation"),
    2: .same(proto: "blacklist"),
    3: .standard(proto: "anim_min"),
    4: .standard(proto: "anim_max"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.animation) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.blacklist) }()
      case 3: try { try decoder.decodeSingularFloatField(value: &self.animMin) }()
      case 4: try { try decoder.decodeSingularFloatField(value: &self.animMax) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.animation != .none {
      try visitor.visitSingularEnumField(value: self.animation, fieldNumber: 1)
    }
    if self.blacklist != false {
      try visitor.visitSingularBoolField(value: self.blacklist, fieldNumber: 2)
    }
    if self.animMin != 0 {
      try visitor.visitSingularFloatField(value: self.animMin, fieldNumber: 3)
    }
    if self.animMax != 0 {
      try visitor.visitSingularFloatField(value: self.animMax, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_Pokemon_AnimationOverride, rhs: POGOProtos_Settings_Master_Pokemon_AnimationOverride) -> Bool {
    if lhs.animation != rhs.animation {return false}
    if lhs.blacklist != rhs.blacklist {return false}
    if lhs.animMin != rhs.animMin {return false}
    if lhs.animMax != rhs.animMax {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_Master_Pokemon_AnimationOverride.PokemonAnim: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NONE"),
    1: .same(proto: "IDLE_01"),
    2: .same(proto: "IDLE_02"),
    3: .same(proto: "LAND"),
    4: .same(proto: "ATTACK_01"),
    5: .same(proto: "ATTACK_02"),
    6: .same(proto: "DAMAGED"),
    7: .same(proto: "STUNNED"),
    8: .same(proto: "LOOP"),
  ]
}
