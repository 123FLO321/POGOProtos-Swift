// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/ClientEvolutionQuestTemplate.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_ClientEvolutionQuestTemplate {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var questTemplateID: String = String()

  public var questType: POGOProtos_Enums_QuestType = .questUnknownType

  public var goals: [POGOProtos_Data_Quests_QuestGoal] = []

  public var context: POGOProtos_Data_Quests_Quest.Context = .unset

  public var display: POGOProtos_Data_Quests_ClientQuest.QuestDisplay {
    get {return _display ?? POGOProtos_Data_Quests_ClientQuest.QuestDisplay()}
    set {_display = newValue}
  }
  /// Returns true if `display` has been explicitly set.
  public var hasDisplay: Bool {return self._display != nil}
  /// Clears the value of `display`. Subsequent reads from it will return its default value.
  public mutating func clearDisplay() {self._display = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _display: POGOProtos_Data_Quests_ClientQuest.QuestDisplay? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_ClientEvolutionQuestTemplate: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ClientEvolutionQuestTemplate"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "quest_template_id"),
    2: .standard(proto: "quest_type"),
    3: .same(proto: "goals"),
    4: .same(proto: "context"),
    5: .same(proto: "display"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.questTemplateID)
      case 2: try decoder.decodeSingularEnumField(value: &self.questType)
      case 3: try decoder.decodeRepeatedMessageField(value: &self.goals)
      case 4: try decoder.decodeSingularEnumField(value: &self.context)
      case 5: try decoder.decodeSingularMessageField(value: &self._display)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.questTemplateID.isEmpty {
      try visitor.visitSingularStringField(value: self.questTemplateID, fieldNumber: 1)
    }
    if self.questType != .questUnknownType {
      try visitor.visitSingularEnumField(value: self.questType, fieldNumber: 2)
    }
    if !self.goals.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.goals, fieldNumber: 3)
    }
    if self.context != .unset {
      try visitor.visitSingularEnumField(value: self.context, fieldNumber: 4)
    }
    if let v = self._display {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_ClientEvolutionQuestTemplate, rhs: POGOProtos_Settings_Master_ClientEvolutionQuestTemplate) -> Bool {
    if lhs.questTemplateID != rhs.questTemplateID {return false}
    if lhs.questType != rhs.questType {return false}
    if lhs.goals != rhs.goals {return false}
    if lhs.context != rhs.context {return false}
    if lhs._display != rhs._display {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
