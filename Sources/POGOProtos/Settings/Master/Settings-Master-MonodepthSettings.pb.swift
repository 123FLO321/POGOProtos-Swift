// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/MonodepthSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_MonodepthSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var enableOcclusions: Bool = false

  public var occlusionsDefaultOn: Bool = false

  public var occlusionsToggleVisible: Bool = false

  public var enableGroundSuppression: Bool = false

  public var minGroundSuppressionThresh: Float = 0

  public var suppressionChannelID: UInt32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_MonodepthSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".MonodepthSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "enable_occlusions"),
    2: .standard(proto: "occlusions_default_on"),
    3: .standard(proto: "occlusions_toggle_visible"),
    4: .standard(proto: "enable_ground_suppression"),
    5: .standard(proto: "min_ground_suppression_thresh"),
    6: .standard(proto: "suppression_channel_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.enableOcclusions) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.occlusionsDefaultOn) }()
      case 3: try { try decoder.decodeSingularBoolField(value: &self.occlusionsToggleVisible) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.enableGroundSuppression) }()
      case 5: try { try decoder.decodeSingularFloatField(value: &self.minGroundSuppressionThresh) }()
      case 6: try { try decoder.decodeSingularUInt32Field(value: &self.suppressionChannelID) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.enableOcclusions != false {
      try visitor.visitSingularBoolField(value: self.enableOcclusions, fieldNumber: 1)
    }
    if self.occlusionsDefaultOn != false {
      try visitor.visitSingularBoolField(value: self.occlusionsDefaultOn, fieldNumber: 2)
    }
    if self.occlusionsToggleVisible != false {
      try visitor.visitSingularBoolField(value: self.occlusionsToggleVisible, fieldNumber: 3)
    }
    if self.enableGroundSuppression != false {
      try visitor.visitSingularBoolField(value: self.enableGroundSuppression, fieldNumber: 4)
    }
    if self.minGroundSuppressionThresh != 0 {
      try visitor.visitSingularFloatField(value: self.minGroundSuppressionThresh, fieldNumber: 5)
    }
    if self.suppressionChannelID != 0 {
      try visitor.visitSingularUInt32Field(value: self.suppressionChannelID, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_MonodepthSettings, rhs: POGOProtos_Settings_Master_MonodepthSettings) -> Bool {
    if lhs.enableOcclusions != rhs.enableOcclusions {return false}
    if lhs.occlusionsDefaultOn != rhs.occlusionsDefaultOn {return false}
    if lhs.occlusionsToggleVisible != rhs.occlusionsToggleVisible {return false}
    if lhs.enableGroundSuppression != rhs.enableGroundSuppression {return false}
    if lhs.minGroundSuppressionThresh != rhs.minGroundSuppressionThresh {return false}
    if lhs.suppressionChannelID != rhs.suppressionChannelID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
