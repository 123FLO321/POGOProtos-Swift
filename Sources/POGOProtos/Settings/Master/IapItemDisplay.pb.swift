// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/IapItemDisplay.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Settings_Master_IapItemDisplay {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var sku: String = String()

  var category: POGOProtos_Enums_HoloIapItemCategory = .iapCategoryNone

  var sortOrder: Int32 = 0

  /// repeated .POGOProtos.Inventory.Item.ItemId item_ids = 4;
  /// repeated int32 counts = 5;
  var hidden: Bool = false

  var sale: Bool = false

  var spriteID: String = String()

  var title: String = String()

  var description_p: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_IapItemDisplay: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".IapItemDisplay"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "sku"),
    2: .same(proto: "category"),
    3: .standard(proto: "sort_order"),
    6: .same(proto: "hidden"),
    7: .same(proto: "sale"),
    8: .standard(proto: "sprite_id"),
    9: .same(proto: "title"),
    10: .same(proto: "description"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.sku)
      case 2: try decoder.decodeSingularEnumField(value: &self.category)
      case 3: try decoder.decodeSingularInt32Field(value: &self.sortOrder)
      case 6: try decoder.decodeSingularBoolField(value: &self.hidden)
      case 7: try decoder.decodeSingularBoolField(value: &self.sale)
      case 8: try decoder.decodeSingularStringField(value: &self.spriteID)
      case 9: try decoder.decodeSingularStringField(value: &self.title)
      case 10: try decoder.decodeSingularStringField(value: &self.description_p)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.sku.isEmpty {
      try visitor.visitSingularStringField(value: self.sku, fieldNumber: 1)
    }
    if self.category != .iapCategoryNone {
      try visitor.visitSingularEnumField(value: self.category, fieldNumber: 2)
    }
    if self.sortOrder != 0 {
      try visitor.visitSingularInt32Field(value: self.sortOrder, fieldNumber: 3)
    }
    if self.hidden != false {
      try visitor.visitSingularBoolField(value: self.hidden, fieldNumber: 6)
    }
    if self.sale != false {
      try visitor.visitSingularBoolField(value: self.sale, fieldNumber: 7)
    }
    if !self.spriteID.isEmpty {
      try visitor.visitSingularStringField(value: self.spriteID, fieldNumber: 8)
    }
    if !self.title.isEmpty {
      try visitor.visitSingularStringField(value: self.title, fieldNumber: 9)
    }
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 10)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Settings_Master_IapItemDisplay, rhs: POGOProtos_Settings_Master_IapItemDisplay) -> Bool {
    if lhs.sku != rhs.sku {return false}
    if lhs.category != rhs.category {return false}
    if lhs.sortOrder != rhs.sortOrder {return false}
    if lhs.hidden != rhs.hidden {return false}
    if lhs.sale != rhs.sale {return false}
    if lhs.spriteID != rhs.spriteID {return false}
    if lhs.title != rhs.title {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
