// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/SponsoredGeofenceGiftSettings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var giftPersistenceEnabled: Bool = false

  public var giftPersistenceTimeMs: Int32 = 0

  public var mapPresentationTimeMs: Int32 = 0

  public var enableSponsoredGeofenceGift: Bool = false

  public var enableDarkLaunch: Bool = false

  public var enablePoiGift: Bool = false

  public var enableRaidGift: Bool = false

  public var enableIncidentGift: Bool = false

  public var fullscreenDisableExitButtonTimeMs: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SponsoredGeofenceGiftSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "gift_persistence_enabled"),
    2: .standard(proto: "gift_persistence_time_ms"),
    3: .standard(proto: "map_presentation_time_ms"),
    4: .standard(proto: "enable_sponsored_geofence_gift"),
    5: .standard(proto: "enable_dark_launch"),
    6: .standard(proto: "enable_poi_gift"),
    7: .standard(proto: "enable_raid_gift"),
    8: .standard(proto: "enable_incident_gift"),
    9: .standard(proto: "fullscreen_disable_exit_button_time_ms"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.giftPersistenceEnabled) }()
      case 2: try { try decoder.decodeSingularInt32Field(value: &self.giftPersistenceTimeMs) }()
      case 3: try { try decoder.decodeSingularInt32Field(value: &self.mapPresentationTimeMs) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.enableSponsoredGeofenceGift) }()
      case 5: try { try decoder.decodeSingularBoolField(value: &self.enableDarkLaunch) }()
      case 6: try { try decoder.decodeSingularBoolField(value: &self.enablePoiGift) }()
      case 7: try { try decoder.decodeSingularBoolField(value: &self.enableRaidGift) }()
      case 8: try { try decoder.decodeSingularBoolField(value: &self.enableIncidentGift) }()
      case 9: try { try decoder.decodeSingularInt32Field(value: &self.fullscreenDisableExitButtonTimeMs) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.giftPersistenceEnabled != false {
      try visitor.visitSingularBoolField(value: self.giftPersistenceEnabled, fieldNumber: 1)
    }
    if self.giftPersistenceTimeMs != 0 {
      try visitor.visitSingularInt32Field(value: self.giftPersistenceTimeMs, fieldNumber: 2)
    }
    if self.mapPresentationTimeMs != 0 {
      try visitor.visitSingularInt32Field(value: self.mapPresentationTimeMs, fieldNumber: 3)
    }
    if self.enableSponsoredGeofenceGift != false {
      try visitor.visitSingularBoolField(value: self.enableSponsoredGeofenceGift, fieldNumber: 4)
    }
    if self.enableDarkLaunch != false {
      try visitor.visitSingularBoolField(value: self.enableDarkLaunch, fieldNumber: 5)
    }
    if self.enablePoiGift != false {
      try visitor.visitSingularBoolField(value: self.enablePoiGift, fieldNumber: 6)
    }
    if self.enableRaidGift != false {
      try visitor.visitSingularBoolField(value: self.enableRaidGift, fieldNumber: 7)
    }
    if self.enableIncidentGift != false {
      try visitor.visitSingularBoolField(value: self.enableIncidentGift, fieldNumber: 8)
    }
    if self.fullscreenDisableExitButtonTimeMs != 0 {
      try visitor.visitSingularInt32Field(value: self.fullscreenDisableExitButtonTimeMs, fieldNumber: 9)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings, rhs: POGOProtos_Settings_Master_SponsoredGeofenceGiftSettings) -> Bool {
    if lhs.giftPersistenceEnabled != rhs.giftPersistenceEnabled {return false}
    if lhs.giftPersistenceTimeMs != rhs.giftPersistenceTimeMs {return false}
    if lhs.mapPresentationTimeMs != rhs.mapPresentationTimeMs {return false}
    if lhs.enableSponsoredGeofenceGift != rhs.enableSponsoredGeofenceGift {return false}
    if lhs.enableDarkLaunch != rhs.enableDarkLaunch {return false}
    if lhs.enablePoiGift != rhs.enablePoiGift {return false}
    if lhs.enableRaidGift != rhs.enableRaidGift {return false}
    if lhs.enableIncidentGift != rhs.enableIncidentGift {return false}
    if lhs.fullscreenDisableExitButtonTimeMs != rhs.fullscreenDisableExitButtonTimeMs {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
