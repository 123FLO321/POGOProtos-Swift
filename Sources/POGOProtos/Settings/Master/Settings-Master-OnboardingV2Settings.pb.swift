// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/Master/OnboardingV2Settings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Settings_Master_OnboardingV2Settings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var enableOnboardingV2: Bool = false

  public var pokedexID: [POGOProtos_Enums_PokemonId] = []

  public var onboardingEggPokemon: POGOProtos_Enums_PokemonId = .missingno

  public var eggKmUntilHatch: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings.Master"

extension POGOProtos_Settings_Master_OnboardingV2Settings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".OnboardingV2Settings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "enable_onboarding_v2"),
    2: .standard(proto: "pokedex_id"),
    3: .standard(proto: "onboarding_egg_pokemon"),
    4: .standard(proto: "egg_km_until_hatch"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.enableOnboardingV2) }()
      case 2: try { try decoder.decodeRepeatedEnumField(value: &self.pokedexID) }()
      case 3: try { try decoder.decodeSingularEnumField(value: &self.onboardingEggPokemon) }()
      case 4: try { try decoder.decodeSingularInt32Field(value: &self.eggKmUntilHatch) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.enableOnboardingV2 != false {
      try visitor.visitSingularBoolField(value: self.enableOnboardingV2, fieldNumber: 1)
    }
    if !self.pokedexID.isEmpty {
      try visitor.visitPackedEnumField(value: self.pokedexID, fieldNumber: 2)
    }
    if self.onboardingEggPokemon != .missingno {
      try visitor.visitSingularEnumField(value: self.onboardingEggPokemon, fieldNumber: 3)
    }
    if self.eggKmUntilHatch != 0 {
      try visitor.visitSingularInt32Field(value: self.eggKmUntilHatch, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Settings_Master_OnboardingV2Settings, rhs: POGOProtos_Settings_Master_OnboardingV2Settings) -> Bool {
    if lhs.enableOnboardingV2 != rhs.enableOnboardingV2 {return false}
    if lhs.pokedexID != rhs.pokedexID {return false}
    if lhs.onboardingEggPokemon != rhs.onboardingEggPokemon {return false}
    if lhs.eggKmUntilHatch != rhs.eggKmUntilHatch {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
