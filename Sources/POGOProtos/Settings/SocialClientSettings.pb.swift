// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Settings/SocialClientSettings.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Settings_SocialClientSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var enableSocial: Bool = false

  var maxFriendDetails: Int32 = 0

  var playerLevelGate: Int32 = 0

  var maxFriendNicknameLength: Int32 = 0

  var enableAddFriendViaQrCode: Bool = false

  var enableShareExPass: Bool = false

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct POGOProtos_Settings_SocialGiftCountTelemetry {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unopenedGiftCount: Int32 = 0

  var unsentGiftCount: Int32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Settings"

extension POGOProtos_Settings_SocialClientSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SocialClientSettings"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "enable_social"),
    2: .standard(proto: "max_friend_details"),
    3: .standard(proto: "player_level_gate"),
    4: .standard(proto: "max_friend_nickname_length"),
    5: .standard(proto: "enable_add_friend_via_qr_code"),
    6: .standard(proto: "enable_share_ex_pass"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBoolField(value: &self.enableSocial)
      case 2: try decoder.decodeSingularInt32Field(value: &self.maxFriendDetails)
      case 3: try decoder.decodeSingularInt32Field(value: &self.playerLevelGate)
      case 4: try decoder.decodeSingularInt32Field(value: &self.maxFriendNicknameLength)
      case 5: try decoder.decodeSingularBoolField(value: &self.enableAddFriendViaQrCode)
      case 6: try decoder.decodeSingularBoolField(value: &self.enableShareExPass)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.enableSocial != false {
      try visitor.visitSingularBoolField(value: self.enableSocial, fieldNumber: 1)
    }
    if self.maxFriendDetails != 0 {
      try visitor.visitSingularInt32Field(value: self.maxFriendDetails, fieldNumber: 2)
    }
    if self.playerLevelGate != 0 {
      try visitor.visitSingularInt32Field(value: self.playerLevelGate, fieldNumber: 3)
    }
    if self.maxFriendNicknameLength != 0 {
      try visitor.visitSingularInt32Field(value: self.maxFriendNicknameLength, fieldNumber: 4)
    }
    if self.enableAddFriendViaQrCode != false {
      try visitor.visitSingularBoolField(value: self.enableAddFriendViaQrCode, fieldNumber: 5)
    }
    if self.enableShareExPass != false {
      try visitor.visitSingularBoolField(value: self.enableShareExPass, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Settings_SocialClientSettings, rhs: POGOProtos_Settings_SocialClientSettings) -> Bool {
    if lhs.enableSocial != rhs.enableSocial {return false}
    if lhs.maxFriendDetails != rhs.maxFriendDetails {return false}
    if lhs.playerLevelGate != rhs.playerLevelGate {return false}
    if lhs.maxFriendNicknameLength != rhs.maxFriendNicknameLength {return false}
    if lhs.enableAddFriendViaQrCode != rhs.enableAddFriendViaQrCode {return false}
    if lhs.enableShareExPass != rhs.enableShareExPass {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension POGOProtos_Settings_SocialGiftCountTelemetry: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".SocialGiftCountTelemetry"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "unopened_gift_count"),
    2: .standard(proto: "unsent_gift_count"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt32Field(value: &self.unopenedGiftCount)
      case 2: try decoder.decodeSingularInt32Field(value: &self.unsentGiftCount)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.unopenedGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unopenedGiftCount, fieldNumber: 1)
    }
    if self.unsentGiftCount != 0 {
      try visitor.visitSingularInt32Field(value: self.unsentGiftCount, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Settings_SocialGiftCountTelemetry, rhs: POGOProtos_Settings_SocialGiftCountTelemetry) -> Bool {
    if lhs.unopenedGiftCount != rhs.unopenedGiftCount {return false}
    if lhs.unsentGiftCount != rhs.unsentGiftCount {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
