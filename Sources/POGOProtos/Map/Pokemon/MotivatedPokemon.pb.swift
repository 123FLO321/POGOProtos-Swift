// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Map/Pokemon/MotivatedPokemon.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct POGOProtos_Map_Pokemon_MotivatedPokemon {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var pokemon: POGOProtos_Data_PokemonData {
    get {return _storage._pokemon ?? POGOProtos_Data_PokemonData()}
    set {_uniqueStorage()._pokemon = newValue}
  }
  /// Returns true if `pokemon` has been explicitly set.
  public var hasPokemon: Bool {return _storage._pokemon != nil}
  /// Clears the value of `pokemon`. Subsequent reads from it will return its default value.
  public mutating func clearPokemon() {_uniqueStorage()._pokemon = nil}

  public var deployMs: Int64 {
    get {return _storage._deployMs}
    set {_uniqueStorage()._deployMs = newValue}
  }

  public var cpWhenDeployed: Int32 {
    get {return _storage._cpWhenDeployed}
    set {_uniqueStorage()._cpWhenDeployed = newValue}
  }

  public var motivationNow: Double {
    get {return _storage._motivationNow}
    set {_uniqueStorage()._motivationNow = newValue}
  }

  public var cpNow: Int32 {
    get {return _storage._cpNow}
    set {_uniqueStorage()._cpNow = newValue}
  }

  public var berryValue: Float {
    get {return _storage._berryValue}
    set {_uniqueStorage()._berryValue = newValue}
  }

  public var feedCooldownDurationMillis: Int64 {
    get {return _storage._feedCooldownDurationMillis}
    set {_uniqueStorage()._feedCooldownDurationMillis = newValue}
  }

  public var foodValue: [POGOProtos_Data_FoodValue] {
    get {return _storage._foodValue}
    set {_uniqueStorage()._foodValue = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Map.Pokemon"

extension POGOProtos_Map_Pokemon_MotivatedPokemon: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".MotivatedPokemon"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "pokemon"),
    2: .standard(proto: "deploy_ms"),
    3: .standard(proto: "cp_when_deployed"),
    4: .standard(proto: "motivation_now"),
    5: .standard(proto: "cp_now"),
    6: .standard(proto: "berry_value"),
    7: .standard(proto: "feed_cooldown_duration_millis"),
    8: .standard(proto: "food_value"),
  ]

  fileprivate class _StorageClass {
    var _pokemon: POGOProtos_Data_PokemonData? = nil
    var _deployMs: Int64 = 0
    var _cpWhenDeployed: Int32 = 0
    var _motivationNow: Double = 0
    var _cpNow: Int32 = 0
    var _berryValue: Float = 0
    var _feedCooldownDurationMillis: Int64 = 0
    var _foodValue: [POGOProtos_Data_FoodValue] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _pokemon = source._pokemon
      _deployMs = source._deployMs
      _cpWhenDeployed = source._cpWhenDeployed
      _motivationNow = source._motivationNow
      _cpNow = source._cpNow
      _berryValue = source._berryValue
      _feedCooldownDurationMillis = source._feedCooldownDurationMillis
      _foodValue = source._foodValue
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._pokemon)
        case 2: try decoder.decodeSingularInt64Field(value: &_storage._deployMs)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._cpWhenDeployed)
        case 4: try decoder.decodeSingularDoubleField(value: &_storage._motivationNow)
        case 5: try decoder.decodeSingularInt32Field(value: &_storage._cpNow)
        case 6: try decoder.decodeSingularFloatField(value: &_storage._berryValue)
        case 7: try decoder.decodeSingularInt64Field(value: &_storage._feedCooldownDurationMillis)
        case 8: try decoder.decodeRepeatedMessageField(value: &_storage._foodValue)
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._pokemon {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._deployMs != 0 {
        try visitor.visitSingularInt64Field(value: _storage._deployMs, fieldNumber: 2)
      }
      if _storage._cpWhenDeployed != 0 {
        try visitor.visitSingularInt32Field(value: _storage._cpWhenDeployed, fieldNumber: 3)
      }
      if _storage._motivationNow != 0 {
        try visitor.visitSingularDoubleField(value: _storage._motivationNow, fieldNumber: 4)
      }
      if _storage._cpNow != 0 {
        try visitor.visitSingularInt32Field(value: _storage._cpNow, fieldNumber: 5)
      }
      if _storage._berryValue != 0 {
        try visitor.visitSingularFloatField(value: _storage._berryValue, fieldNumber: 6)
      }
      if _storage._feedCooldownDurationMillis != 0 {
        try visitor.visitSingularInt64Field(value: _storage._feedCooldownDurationMillis, fieldNumber: 7)
      }
      if !_storage._foodValue.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._foodValue, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: POGOProtos_Map_Pokemon_MotivatedPokemon, rhs: POGOProtos_Map_Pokemon_MotivatedPokemon) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._pokemon != rhs_storage._pokemon {return false}
        if _storage._deployMs != rhs_storage._deployMs {return false}
        if _storage._cpWhenDeployed != rhs_storage._cpWhenDeployed {return false}
        if _storage._motivationNow != rhs_storage._motivationNow {return false}
        if _storage._cpNow != rhs_storage._cpNow {return false}
        if _storage._berryValue != rhs_storage._berryValue {return false}
        if _storage._feedCooldownDurationMillis != rhs_storage._feedCooldownDurationMillis {return false}
        if _storage._foodValue != rhs_storage._foodValue {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
