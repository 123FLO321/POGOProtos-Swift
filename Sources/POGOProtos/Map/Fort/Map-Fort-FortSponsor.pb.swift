// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Map/Fort/FortSponsor.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum POGOProtos_Map_Fort_FortSponsor: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unsetSponsor // = 0
  case mcdonalds // = 1
  case pokemonStore // = 2
  case toho // = 3
  case softbank // = 4
  case globe // = 5
  case spatula // = 6
  case thermometer // = 7
  case knife // = 8
  case grill // = 9
  case smoker // = 10
  case pan // = 11
  case bbq // = 12
  case fryer // = 13
  case steamer // = 14
  case hood // = 15
  case slowcooker // = 16
  case mixer // = 17
  case scooper // = 18
  case muffintin // = 19
  case salamander // = 20
  case plancha // = 21
  case niaOps // = 22
  case whisk // = 23
  case UNRECOGNIZED(Int)

  public init() {
    self = .unsetSponsor
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unsetSponsor
    case 1: self = .mcdonalds
    case 2: self = .pokemonStore
    case 3: self = .toho
    case 4: self = .softbank
    case 5: self = .globe
    case 6: self = .spatula
    case 7: self = .thermometer
    case 8: self = .knife
    case 9: self = .grill
    case 10: self = .smoker
    case 11: self = .pan
    case 12: self = .bbq
    case 13: self = .fryer
    case 14: self = .steamer
    case 15: self = .hood
    case 16: self = .slowcooker
    case 17: self = .mixer
    case 18: self = .scooper
    case 19: self = .muffintin
    case 20: self = .salamander
    case 21: self = .plancha
    case 22: self = .niaOps
    case 23: self = .whisk
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unsetSponsor: return 0
    case .mcdonalds: return 1
    case .pokemonStore: return 2
    case .toho: return 3
    case .softbank: return 4
    case .globe: return 5
    case .spatula: return 6
    case .thermometer: return 7
    case .knife: return 8
    case .grill: return 9
    case .smoker: return 10
    case .pan: return 11
    case .bbq: return 12
    case .fryer: return 13
    case .steamer: return 14
    case .hood: return 15
    case .slowcooker: return 16
    case .mixer: return 17
    case .scooper: return 18
    case .muffintin: return 19
    case .salamander: return 20
    case .plancha: return 21
    case .niaOps: return 22
    case .whisk: return 23
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension POGOProtos_Map_Fort_FortSponsor: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [POGOProtos_Map_Fort_FortSponsor] = [
    .unsetSponsor,
    .mcdonalds,
    .pokemonStore,
    .toho,
    .softbank,
    .globe,
    .spatula,
    .thermometer,
    .knife,
    .grill,
    .smoker,
    .pan,
    .bbq,
    .fryer,
    .steamer,
    .hood,
    .slowcooker,
    .mixer,
    .scooper,
    .muffintin,
    .salamander,
    .plancha,
    .niaOps,
    .whisk,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension POGOProtos_Map_Fort_FortSponsor: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNSET_SPONSOR"),
    1: .same(proto: "MCDONALDS"),
    2: .same(proto: "POKEMON_STORE"),
    3: .same(proto: "TOHO"),
    4: .same(proto: "SOFTBANK"),
    5: .same(proto: "GLOBE"),
    6: .same(proto: "SPATULA"),
    7: .same(proto: "THERMOMETER"),
    8: .same(proto: "KNIFE"),
    9: .same(proto: "GRILL"),
    10: .same(proto: "SMOKER"),
    11: .same(proto: "PAN"),
    12: .same(proto: "BBQ"),
    13: .same(proto: "FRYER"),
    14: .same(proto: "STEAMER"),
    15: .same(proto: "HOOD"),
    16: .same(proto: "SLOWCOOKER"),
    17: .same(proto: "MIXER"),
    18: .same(proto: "SCOOPER"),
    19: .same(proto: "MUFFINTIN"),
    20: .same(proto: "SALAMANDER"),
    21: .same(proto: "PLANCHA"),
    22: .same(proto: "NIA_OPS"),
    23: .same(proto: "WHISK"),
  ]
}
