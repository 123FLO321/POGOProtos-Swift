// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: POGOProtos/Map/Weather/ClientWeather.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct POGOProtos_Map_Weather_ClientWeather {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var s2CellID: Int64 {
    get {return _storage._s2CellID}
    set {_uniqueStorage()._s2CellID = newValue}
  }

  var displayWeather: POGOProtos_Map_Weather_DisplayWeather {
    get {return _storage._displayWeather ?? POGOProtos_Map_Weather_DisplayWeather()}
    set {_uniqueStorage()._displayWeather = newValue}
  }
  /// Returns true if `displayWeather` has been explicitly set.
  var hasDisplayWeather: Bool {return _storage._displayWeather != nil}
  /// Clears the value of `displayWeather`. Subsequent reads from it will return its default value.
  mutating func clearDisplayWeather() {_uniqueStorage()._displayWeather = nil}

  var gameplayWeather: POGOProtos_Map_Weather_GameplayWeather {
    get {return _storage._gameplayWeather ?? POGOProtos_Map_Weather_GameplayWeather()}
    set {_uniqueStorage()._gameplayWeather = newValue}
  }
  /// Returns true if `gameplayWeather` has been explicitly set.
  var hasGameplayWeather: Bool {return _storage._gameplayWeather != nil}
  /// Clears the value of `gameplayWeather`. Subsequent reads from it will return its default value.
  mutating func clearGameplayWeather() {_uniqueStorage()._gameplayWeather = nil}

  var alerts: [POGOProtos_Map_Weather_WeatherAlert] {
    get {return _storage._alerts}
    set {_uniqueStorage()._alerts = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "POGOProtos.Map.Weather"

extension POGOProtos_Map_Weather_ClientWeather: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ClientWeather"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "s2_cell_id"),
    2: .standard(proto: "display_weather"),
    3: .standard(proto: "gameplay_weather"),
    4: .same(proto: "alerts"),
  ]

  fileprivate class _StorageClass {
    var _s2CellID: Int64 = 0
    var _displayWeather: POGOProtos_Map_Weather_DisplayWeather? = nil
    var _gameplayWeather: POGOProtos_Map_Weather_GameplayWeather? = nil
    var _alerts: [POGOProtos_Map_Weather_WeatherAlert] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _s2CellID = source._s2CellID
      _displayWeather = source._displayWeather
      _gameplayWeather = source._gameplayWeather
      _alerts = source._alerts
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt64Field(value: &_storage._s2CellID)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._displayWeather)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._gameplayWeather)
        case 4: try decoder.decodeRepeatedMessageField(value: &_storage._alerts)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._s2CellID != 0 {
        try visitor.visitSingularInt64Field(value: _storage._s2CellID, fieldNumber: 1)
      }
      if let v = _storage._displayWeather {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._gameplayWeather {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if !_storage._alerts.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._alerts, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: POGOProtos_Map_Weather_ClientWeather, rhs: POGOProtos_Map_Weather_ClientWeather) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._s2CellID != rhs_storage._s2CellID {return false}
        if _storage._displayWeather != rhs_storage._displayWeather {return false}
        if _storage._gameplayWeather != rhs_storage._gameplayWeather {return false}
        if _storage._alerts != rhs_storage._alerts {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
